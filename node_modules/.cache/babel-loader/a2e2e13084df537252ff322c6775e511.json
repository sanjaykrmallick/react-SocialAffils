{"ast":null,"code":"import _classCallCheck from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/creator-feed-viewer.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Card, CardBody, CardHeader, CardText, Carousel, CarouselControl, CarouselIndicators, CarouselItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport PostEarningsModal from \"../components/post-earnings-modal\";\nimport config from \"../config\";\nimport PollOption from \"../components/poll-option-component\";\nimport PostCommentSection from \"../components/post-comment-section\";\nimport { deepClone, getPostedDateValue } from \"../helper-methods\";\nimport { getComments } from \"../http/http-calls\";\nimport { ToastsStore } from \"react-toasts\";\nimport ReportPostModal from \"./report-post-modal\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nvar CreatorFeedViewer = /*#__PURE__*/function (_Component) {\n  _inherits(CreatorFeedViewer, _Component);\n\n  var _super = _createSuper(CreatorFeedViewer);\n\n  function CreatorFeedViewer(props) {\n    var _this;\n\n    _classCallCheck(this, CreatorFeedViewer);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      comments: [],\n      dropdownOpen: false,\n      activeIndex: 0,\n      duration: 0,\n      decodedUserDetails: null,\n      custom: [false],\n      isCommentScetionOpen: false,\n      isPrompt: false,\n      isPostEarningsModalOpen: false,\n      flagModalVisible: false\n    };\n    _this.now = 60;\n\n    _this._getAllComments = function () {\n      var feed = _this.props.feed;\n      return new Promise(function (resolve, reject) {\n        getComments(feed._id).then(function (response) {\n          if (response && response.hasOwnProperty(\"comments\")) {\n            _this.setState({\n              comments: response[\"comments\"]\n            }, function () {\n              resolve();\n            });\n          }\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    };\n\n    _this._toogleCommentSection = function () {\n      var isCommentScetionOpen = _this.state.isCommentScetionOpen;\n\n      if (!isCommentScetionOpen) {\n        _this._getAllComments();\n      }\n\n      _this.setState({\n        isCommentScetionOpen: !isCommentScetionOpen\n      });\n    };\n\n    _this._pinToProfile = function (isPinned) {\n      _this.props.pinToProfile(_this.props.feed._id, !isPinned);\n    };\n\n    _this._postComment = function (comment) {// if (id === null) {\n      //   postCommentOnFeed({\n      //     category: \"comment\",\n      //     content: comment,\n      //     id: this.props.feed._id\n      //   })\n      //     .then(res => {\n      //       this.postCommentRef.current._clearComment();\n      //       this._getAllComments();\n      //       this.props.getAllPosts();\n      //       showToast(\"Commented successfully\", \"success\");\n      //     })\n      //     .catch(err => {\n      //       showToast(\n      //         err.reason && err.reason.length\n      //           ? err.reason\n      //           : \"Server error. Try again after sometime.\",\n      //         \"error\"\n      //       );\n      //     });\n      // } else {\n      //   // edit comment\n      // }\n\n      var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    };\n\n    _this._renderCarousel = function () {\n      var slides = _this.props.feed._contents.map(function (item) {\n        item = item._content;\n        return /*#__PURE__*/React.createElement(CarouselItem, {\n          onExiting: _this.onExiting,\n          onExited: _this.onExited,\n          key: item._id,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 9\n          }\n        }, item.contentType === \"video\" ? /*#__PURE__*/React.createElement(\"video\", {\n          className: \"d-block w-100\",\n          src: item.url,\n          controlsList: \"nodownload\",\n          controls: true,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }\n        }) : /*#__PURE__*/React.createElement(\"img\", {\n          className: \"d-block w-100\",\n          src: item.url,\n          alt: item.contentType,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }\n        }));\n      });\n\n      return slides; // return (\n      //     <>\n      //     {\n      //         items.map((item) => {\n      //             return (\n      //                 <CarouselItem onExiting={this.onExiting} onExited={this.onExited} key={item.src}>\n      //                     <img className=\"d-block w-100\" src={item.src} alt={item.altText} />\n      //                 </CarouselItem>\n      //             );\n      //         })\n      //     }\n      //     </>\n      // )\n    };\n\n    _this._onPromptSuccess = function () {\n      _this.props.deletePost();\n\n      _this.setState({\n        isPrompt: false\n      });\n    };\n\n    _this._onPromptDismiss = function () {\n      _this.setState({\n        isPrompt: false\n      });\n    };\n\n    _this._deletePost = function () {\n      _this.setState({\n        isPrompt: true\n      });\n    };\n\n    _this._calculatePostPrice = function (feed) {\n      if (feed._transactions && feed._transactions.length) {\n        var arr = feed._transactions.filter(function (each) {\n          return each.paymentType === \"post\" || each.paymentType === \"tips\";\n        });\n\n        var totalPrice = arr.reduce(function (acc, each) {\n          return acc = acc + each.amount;\n        }, 0);\n        return totalPrice;\n      }\n\n      return 0;\n    };\n\n    _this._closePostEarningsModal = function () {\n      _this.setState({\n        isPostEarningsModalOpen: false\n      });\n    };\n\n    _this._openPostEarningsModal = function (feed) {\n      _this.setState({\n        isPostEarningsModalOpen: true\n      });\n    };\n\n    _this._fetchTipTransactionList = function () {\n      var _deepClone = deepClone(_this.props),\n          feed = _deepClone.feed;\n\n      if (feed._transactions && feed._transactions.length) {\n        var tips = feed._transactions.filter(function (each) {\n          return each.paymentType === \"tips\";\n        });\n\n        return tips;\n      }\n\n      return [];\n    };\n\n    _this._fetchPPVTransactionList = function () {\n      var _deepClone2 = deepClone(_this.props),\n          feed = _deepClone2.feed;\n\n      if (feed._transactions && feed._transactions.length) {\n        var arr = feed._transactions.filter(function (each) {\n          return each.paymentType === \"post\";\n        });\n\n        return arr;\n      }\n\n      return [];\n    };\n\n    _this._dismissFlagModal = function () {\n      _this.setState({\n        flagModalVisible: false\n      });\n    };\n\n    _this._showFlagModal = function () {\n      _this.setState({\n        flagModalVisible: true\n      });\n    };\n\n    _this._onFlagConfirmation = function () {\n      ToastsStore.success(\"Successfully flagged\", 3000);\n\n      _this._dismissFlagModal();\n    };\n\n    _this._redirectToPostDetails = function () {\n      _this.props.history.push(\"/post/\" + _this.props.feed._id);\n    };\n\n    _this._renderPreview = function () {\n      var _deepClone3 = deepClone(_this.state),\n          activeIndex = _deepClone3.activeIndex,\n          decodedUserDetails = _deepClone3.decodedUserDetails,\n          isCommentScetionOpen = _deepClone3.isCommentScetionOpen,\n          comments = _deepClone3.comments,\n          isPrompt = _deepClone3.isPrompt,\n          flagModalVisible = _deepClone3.flagModalVisible;\n\n      var _deepClone4 = deepClone(_this.props),\n          user = _deepClone4.user,\n          feed = _deepClone4.feed;\n\n      if (_this.props.feed.category && _this.props.feed.category === \"general\") {\n        if (_this.props.feed._contents && _this.props.feed._contents.length > 1) {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReportPostModal, {\n            isVisible: flagModalVisible,\n            feed: _this.props.feed,\n            onSuccess: _this._onFlagConfirmation,\n            onDismiss: _this._dismissFlagModal,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(Card, {\n            className: \"card-Feed\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: \"/post/\".concat(_this.props.feed._id),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(CardHeader, {\n            onClick: _this._redirectToPostDetails,\n            style: {\n              cursor: \"pointer\"\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex justify-content-start\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"personImgWrap\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: user && user.profilePicture ? user.profilePicture : config[\"defaultUserPicture\"],\n            alt: \"Profile Img\",\n            className: \"personImg\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 23\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"h4\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 23\n            }\n          }, user ? user.name.full : \"\"), user ? /*#__PURE__*/React.createElement(\"a\", {\n            className: \"profileID\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 25\n            }\n          }, \"@\", user.username || \"NA\") : null)), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"postTime-Feed\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }\n          }, getPostedDateValue(_this.props.feed.startDate)))), /*#__PURE__*/React.createElement(CardBody, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(CardText, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }\n          }, _this.props.feed.text && _this.props.feed.text.length ? ReactHtmlParser(_this.props.feed.text) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"mediaPhotoWrap-Feed\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Carousel, {\n            activeIndex: activeIndex,\n            next: _this.next,\n            previous: _this.previous,\n            ride: \"carousel\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(CarouselIndicators, {\n            items: _this.props.feed._contents,\n            activeIndex: activeIndex,\n            onClickHandler: _this.goToIndex,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 21\n            }\n          }), _this._renderCarousel(), /*#__PURE__*/React.createElement(CarouselControl, {\n            direction: \"prev\",\n            directionText: \"Previous\",\n            onClickHandler: _this.previous,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(CarouselControl, {\n            direction: \"next\",\n            directionText: \"Next\",\n            onClickHandler: _this.next,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 21\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"options-Feed\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            color: \"ghost-info\",\n            disabled: true,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"icon-heart\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 21\n            }\n          }, _this.props.feed.likes || 0)), /*#__PURE__*/React.createElement(Button, {\n            color: \"ghost-info\",\n            onClick: function onClick() {\n              return _this._toogleCommentSection();\n            },\n            \"aria-controls\": \"exampleAccordion1\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"icon-bubble\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 21\n            }\n          }, _this.props.feed.comments || 0)), /*#__PURE__*/React.createElement(Button, {\n            color: \"ghost-info\",\n            onClick: function onClick() {\n              return _this._openPostEarningsModal(_this.props.feed);\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"fa fa-dollar\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              verticalAlign: \"-1px\"\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 21\n            }\n          }, _this._calculatePostPrice(_this.props.feed) || 0)), /*#__PURE__*/React.createElement(Button, {\n            color: \"ghost-secondary\",\n            onClick: _this._showFlagModal,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"fa fa-flag-o\",\n            \"aria-hidden\": \"true\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 21\n            }\n          }))), \" \")), /*#__PURE__*/React.createElement(PostCommentSection, {\n            feed: _this.props.feed,\n            ref: _this.postCommentRef,\n            comments: comments,\n            isOpen: isCommentScetionOpen,\n            getComments: function getComments() {\n              return _this._getAllComments();\n            },\n            user: _this.props.user,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 13\n            }\n          }));\n        } else if (_this.props.feed._contents && _this.props.feed._contents.length === 1) {\n          if (_this.props.feed._contents[0]._content.contentType === \"image\") {\n            // contains only one image\n            return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReportPostModal, {\n              isVisible: flagModalVisible,\n              feed: _this.props.feed,\n              onSuccess: _this._onFlagConfirmation,\n              onDismiss: _this._dismissFlagModal,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 15\n              }\n            }), /*#__PURE__*/React.createElement(Card, {\n              className: \"card-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(Link, {\n              to: \"/post/\".concat(_this.props.feed._id),\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(CardHeader, {\n              onClick: _this._redirectToPostDetails,\n              style: {\n                cursor: \"pointer\"\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"d-flex justify-content-start\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"personImgWrap\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: user && user.profilePicture ? user.profilePicture : config[\"defaultUserPicture\"],\n              alt: \"Profile Img\",\n              className: \"personImg\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 25\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"h4\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 25\n              }\n            }, user ? user.name.full : \"\"), user ? /*#__PURE__*/React.createElement(\"a\", {\n              className: \"profileID\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 27\n              }\n            }, \"@\", user.username || \"NA\") : null)), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"postTime-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 21\n              }\n            }, getPostedDateValue(_this.props.feed.startDate)))), /*#__PURE__*/React.createElement(CardBody, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(CardText, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }\n            }, _this.props.feed.text && _this.props.feed.text.length ? ReactHtmlParser(_this.props.feed.text) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"mediaPhotoWrap-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              className: \"mediaPhoto-Feed\",\n              src: _this.props.feed._contents[0]._content.url,\n              alt: \"Feed Img\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 21\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"options-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              disabled: true,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"icon-heart\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 23\n              }\n            }, _this.props.feed.likes || 0)), /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              onClick: function onClick() {\n                return _this._toogleCommentSection();\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"icon-bubble\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 23\n              }\n            }, _this.props.feed.comments || 0)), /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              onClick: function onClick() {\n                return _this._openPostEarningsModal(_this.props.feed);\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"fa fa-dollar\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                verticalAlign: \"-1px\"\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 23\n              }\n            }, _this._calculatePostPrice(_this.props.feed) || 0)), /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-secondary\",\n              onClick: _this._showFlagModal,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"fa fa-flag-o\",\n              \"aria-hidden\": \"true\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 23\n              }\n            }))), \" \")), /*#__PURE__*/React.createElement(PostCommentSection, {\n              feed: _this.props.feed,\n              ref: _this.postCommentRef,\n              comments: comments,\n              isOpen: isCommentScetionOpen,\n              postComment: function postComment(text) {\n                return _this._postComment(text);\n              },\n              getComments: function getComments() {\n                return _this._getAllComments();\n              },\n              user: _this.props.user,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 15\n              }\n            }));\n          } else if (_this.props.feed._contents[0].contentType === \"audio\") {\n            // contains only one audio file\n            return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReportPostModal, {\n              isVisible: flagModalVisible,\n              feed: _this.props.feed,\n              onSuccess: _this._onFlagConfirmation,\n              onDismiss: _this._dismissFlagModal,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 15\n              }\n            }), /*#__PURE__*/React.createElement(Card, {\n              className: \"card-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(Link, {\n              to: \"/post/\".concat(_this.props.feed._id),\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(CardHeader, {\n              onClick: _this._redirectToPostDetails,\n              style: {\n                cursor: \"pointer\"\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"d-flex justify-content-start\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"personImgWrap\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: user && user.profilePicture ? user.profilePicture : config[\"defaultUserPicture\"],\n              alt: \"Profile Img\",\n              className: \"personImg\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 25\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"h4\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 25\n              }\n            }, user ? user.name.full : \"\"), user ? /*#__PURE__*/React.createElement(\"a\", {\n              className: \"profileID\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 27\n              }\n            }, \"@\", user.username || \"NA\") : null)), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"postTime-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 21\n              }\n            }, getPostedDateValue(_this.props.feed.startDate)))), /*#__PURE__*/React.createElement(CardBody, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(CardText, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 19\n              }\n            }, _this.props.feed.text && _this.props.feed.text.length ? ReactHtmlParser(_this.props.feed.text) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"my-2 px-2\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"audio\", {\n              style: {\n                width: \"100%\"\n              },\n              ref: function ref(audio) {\n                _this.audio = audio;\n              },\n              controls: true,\n              controlsList: \"nodownload\",\n              src: _this.props.feed._contents[0]._content.url || \"\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 21\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"options-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              disabled: true,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"icon-heart\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 23\n              }\n            }, _this.props.feed.likes || 0)), /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              onClick: function onClick() {\n                return _this._toogleCommentSection();\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"icon-bubble\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 23\n              }\n            }, _this.props.feed.comments || 0)), /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              onClick: function onClick() {\n                return _this._openPostEarningsModal(_this.props.feed);\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"fa fa-dollar\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                verticalAlign: \"-1px\"\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 23\n              }\n            }, _this._calculatePostPrice(_this.props.feed) || 0)), /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-secondary\",\n              onClick: _this._showFlagModal,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"fa fa-flag-o\",\n              \"aria-hidden\": \"true\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 23\n              }\n            }))), \" \")), /*#__PURE__*/React.createElement(PostCommentSection, {\n              feed: _this.props.feed,\n              ref: _this.postCommentRef,\n              comments: comments,\n              isOpen: isCommentScetionOpen,\n              postComment: function postComment(text) {\n                return _this._postComment(text);\n              },\n              getComments: function getComments() {\n                return _this._getAllComments();\n              },\n              user: _this.props.user,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 15\n              }\n            }));\n          } else if (_this.props.feed._contents[0].contentType === \"video\") {\n            // contains only one video\n            return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReportPostModal, {\n              isVisible: flagModalVisible,\n              feed: _this.props.feed,\n              onSuccess: _this._onFlagConfirmation,\n              onDismiss: _this._dismissFlagModal,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 15\n              }\n            }), /*#__PURE__*/React.createElement(Card, {\n              className: \"card-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(Link, {\n              to: \"/post/\".concat(_this.props.feed._id),\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(CardHeader, {\n              onClick: _this._redirectToPostDetails,\n              style: {\n                cursor: \"pointer\"\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"d-flex justify-content-start\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"personImgWrap\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: user && user.profilePicture ? user.profilePicture : config[\"defaultUserPicture\"],\n              alt: \"Profile Img\",\n              className: \"personImg\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 25\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"h4\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 25\n              }\n            }, user ? user.name.full : \"\"), user ? /*#__PURE__*/React.createElement(\"a\", {\n              className: \"profileID\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 27\n              }\n            }, \"@\", user.username || \"NA\") : null)), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"postTime-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 21\n              }\n            }, getPostedDateValue(_this.props.feed.startDate)))), /*#__PURE__*/React.createElement(CardBody, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(CardText, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 19\n              }\n            }, _this.props.feed.text && _this.props.feed.text.length ? ReactHtmlParser(_this.props.feed.text) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"embed-responsive embed-responsive-16by9 mediaVideoWrap-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"video\", {\n              className: \"embed-responsive-item\",\n              src: _this.props.feed._contents[0]._content.url,\n              controls: true,\n              controlsList: \"nodownload\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 21\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"options-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              disabled: true,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"icon-heart\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 23\n              }\n            }, _this.props.feed.likes || 0)), /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              onClick: function onClick() {\n                return _this._toogleCommentSection();\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"icon-bubble\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 23\n              }\n            }, _this.props.feed.comments || 0)), /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              onClick: function onClick() {\n                return _this._openPostEarningsModal(_this.props.feed);\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"fa fa-dollar\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                verticalAlign: \"-1px\"\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 23\n              }\n            }, _this._calculatePostPrice(_this.props.feed) || 0)), /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-secondary\",\n              onClick: _this._showFlagModal,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"fa fa-flag-o\",\n              \"aria-hidden\": \"true\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 23\n              }\n            }))), \" \")), /*#__PURE__*/React.createElement(PostCommentSection, {\n              ref: _this.postCommentRef,\n              comments: comments,\n              isOpen: isCommentScetionOpen,\n              postComment: function postComment(text) {\n                return _this._postComment(text);\n              },\n              getComments: function getComments() {\n                return _this._getAllComments();\n              },\n              feed: _this.props.feed,\n              user: _this.props.user,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 15\n              }\n            }));\n          }\n        } else if (_this.props.feed._contents && _this.props.feed._contents.length === 0) {\n          // text only post\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReportPostModal, {\n            isVisible: flagModalVisible,\n            feed: _this.props.feed,\n            onSuccess: _this._onFlagConfirmation,\n            onDismiss: _this._dismissFlagModal,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(Card, {\n            className: \"card-Feed\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: \"/post/\".concat(_this.props.feed._id),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(CardHeader, {\n            onClick: _this._redirectToPostDetails,\n            style: {\n              cursor: \"pointer\"\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex justify-content-start\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"personImgWrap\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: user && user.profilePicture ? user.profilePicture : config[\"defaultUserPicture\"],\n            alt: \"Profile Img\",\n            className: \"personImg\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 23\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"h4\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 23\n            }\n          }, user ? user.name.full : \"\"), user ? /*#__PURE__*/React.createElement(\"a\", {\n            className: \"profileID\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 25\n            }\n          }, \"@\", user.username || \"NA\") : null)), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"postTime-Feed\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 19\n            }\n          }, getPostedDateValue(_this.props.feed.startDate)))), /*#__PURE__*/React.createElement(CardBody, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(CardText, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 17\n            }\n          }, _this.props.feed.text && _this.props.feed.text.length ? ReactHtmlParser(_this.props.feed.text) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"options-Feed\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            color: \"ghost-info\",\n            disabled: true,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"icon-heart\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 21\n            }\n          }, _this.props.feed.likes || 0)), /*#__PURE__*/React.createElement(Button, {\n            color: \"ghost-info\",\n            onClick: function onClick() {\n              return _this._toogleCommentSection();\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"icon-bubble\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 21\n            }\n          }, _this.props.feed.comments || 0)), /*#__PURE__*/React.createElement(Button, {\n            color: \"ghost-info\",\n            onClick: function onClick() {\n              return _this._openPostEarningsModal(_this.props.feed);\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"fa fa-dollar\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              verticalAlign: \"-1px\"\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 21\n            }\n          }, _this._calculatePostPrice(_this.props.feed) || 0)), /*#__PURE__*/React.createElement(Button, {\n            color: \"ghost-secondary\",\n            onClick: _this._showFlagModal,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"fa fa-flag-o\",\n            \"aria-hidden\": \"true\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 21\n            }\n          }))), \" \")), /*#__PURE__*/React.createElement(PostCommentSection, {\n            feed: _this.props.feed,\n            ref: _this.postCommentRef,\n            comments: comments,\n            isOpen: isCommentScetionOpen,\n            postComment: function postComment(text) {\n              return _this._postComment(text);\n            },\n            getComments: function getComments() {\n              return _this._getAllComments();\n            },\n            user: _this.props.user,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 13\n            }\n          }));\n        }\n      } else if (_this.props.feed.category && _this.props.feed.category === \"poll\") {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReportPostModal, {\n          isVisible: flagModalVisible,\n          feed: _this.props.feed,\n          onSuccess: _this._onFlagConfirmation,\n          onDismiss: _this._dismissFlagModal,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(Card, {\n          className: \"card-Feed\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"/post/\".concat(_this.props.feed._id),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          onClick: _this._redirectToPostDetails,\n          style: {\n            cursor: \"pointer\"\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex justify-content-start\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"personImgWrap\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: user && user.profilePicture ? user.profilePicture : \"http://www.clipartpanda.com/clipart_images/user-66327738/download\",\n          alt: \"Profile Img\",\n          className: \"personImg\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 21\n          }\n        }, user ? user.name.full : \"\"), user ? /*#__PURE__*/React.createElement(\"a\", {\n          className: \"profileID\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 23\n          }\n        }, \"@\", user.username || \"NA\") : null)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"postTime-Feed\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 17\n          }\n        }, getPostedDateValue(_this.props.feed.startDate)))), /*#__PURE__*/React.createElement(CardBody, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(CardText, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 15\n          }\n        }, _this.props.feed.description && _this.props.feed.description.length ? ReactHtmlParser(_this.props.feed.description) : null, _this.props.feed.description && _this.props.feed.description.length ? /*#__PURE__*/React.createElement(\"br\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 21\n          }\n        }) : null, _this.props.feed.text && _this.props.feed.text.length ? ReactHtmlParser(_this.props.feed.text) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-block mb-2 pollOptionWrap\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 15\n          }\n        }, _this.props.feed.options && _this.props.feed.options.length ? _this.props.feed.options.map(function (option, optionIndex) {\n          return /*#__PURE__*/React.createElement(PollOption, {\n            feed: _this.props.feed,\n            option: option,\n            key: optionIndex,\n            index: optionIndex,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 21\n            }\n          });\n        }) : null), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"options-Feed\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"ghost-info\",\n          disabled: true,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"icon-heart\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 19\n          }\n        }, _this.props.feed.likes || 0)), /*#__PURE__*/React.createElement(Button, {\n          color: \"ghost-info\",\n          onClick: function onClick() {\n            return _this._toogleCommentSection();\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"icon-bubble\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 19\n          }\n        }, _this.props.feed.comments || 0)), /*#__PURE__*/React.createElement(Button, {\n          color: \"ghost-secondary\",\n          onClick: _this._showFlagModal,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-flag-o\",\n          \"aria-hidden\": \"true\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 19\n          }\n        }))), \" \")), /*#__PURE__*/React.createElement(PostCommentSection, {\n          feed: _this.props.feed,\n          ref: _this.postCommentRef,\n          comments: comments,\n          isOpen: isCommentScetionOpen,\n          postComment: function postComment(text) {\n            return _this._postComment(text);\n          },\n          getComments: function getComments() {\n            return _this._getAllComments();\n          },\n          user: _this.props.user,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 12\n        }\n      });\n    };\n\n    _this.next = _this.next.bind(_assertThisInitialized(_this));\n    _this.previous = _this.previous.bind(_assertThisInitialized(_this));\n    _this.goToIndex = _this.goToIndex.bind(_assertThisInitialized(_this));\n    _this.audio = React.createRef();\n    _this.postCommentRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(CreatorFeedViewer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var decodedUserDetails = this.state.decodedUserDetails; // decodedUserDetails = decodeToken(this.props.userData.token);\n\n      this.setState({\n        decodedUserDetails: decodedUserDetails\n      });\n\n      if (this.audio !== null) {\n        var audio = Object.assign({}, this.audio);\n\n        audio.onloadedmetadata = function () {\n          _this2.setState({\n            duration: _this2.formatTime(audio.duration.toFixed(0))\n          });\n        };\n      }\n    }\n  }, {\n    key: \"formatTime\",\n    value: function formatTime(seconds) {\n      var h = Math.floor(seconds / 3600);\n      var m = Math.floor(seconds % 3600 / 60);\n      var s = seconds % 60;\n      return [h, m > 9 ? m : h ? \"0\" + m : m || \"0\", s > 9 ? s : \"0\" + s].filter(function (a) {\n        return a;\n      }).join(\":\");\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this.animating) return;\n      var nextIndex = this.state.activeIndex === this.props.feed._contents.length - 1 ? 0 : this.state.activeIndex + 1;\n      this.setState({\n        activeIndex: nextIndex\n      });\n    }\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      if (this.animating) return;\n      var nextIndex = this.state.activeIndex === 0 ? this.props.feed._contents.length - 1 : this.state.activeIndex - 1;\n      this.setState({\n        activeIndex: nextIndex\n      });\n    }\n  }, {\n    key: \"goToIndex\",\n    value: function goToIndex(newIndex) {\n      if (this.animating) return;\n      this.setState({\n        activeIndex: newIndex\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _deepClone5 = deepClone(this.state),\n          isPrompt = _deepClone5.isPrompt,\n          isPostEarningsModalOpen = _deepClone5.isPostEarningsModalOpen;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this._renderPreview(), \" \", /*#__PURE__*/React.createElement(PostEarningsModal, {\n        isVisible: isPostEarningsModalOpen,\n        feed: this.props.feed,\n        close: this._closePostEarningsModal,\n        tipArr: this._fetchTipTransactionList(),\n        ppvArr: this._fetchPPVTransactionList(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return CreatorFeedViewer;\n}(Component);\n\nexport default CreatorFeedViewer;","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/creator-feed-viewer.jsx"],"names":["React","Component","Button","Card","CardBody","CardHeader","CardText","Carousel","CarouselControl","CarouselIndicators","CarouselItem","Link","PostEarningsModal","config","PollOption","PostCommentSection","deepClone","getPostedDateValue","getComments","ToastsStore","ReportPostModal","ReactHtmlParser","CreatorFeedViewer","props","state","comments","dropdownOpen","activeIndex","duration","decodedUserDetails","custom","isCommentScetionOpen","isPrompt","isPostEarningsModalOpen","flagModalVisible","now","_getAllComments","feed","Promise","resolve","reject","_id","then","response","hasOwnProperty","setState","catch","err","_toogleCommentSection","_pinToProfile","isPinned","pinToProfile","_postComment","comment","id","_renderCarousel","slides","_contents","map","item","_content","onExiting","onExited","contentType","url","_onPromptSuccess","deletePost","_onPromptDismiss","_deletePost","_calculatePostPrice","_transactions","length","arr","filter","each","paymentType","totalPrice","reduce","acc","amount","_closePostEarningsModal","_openPostEarningsModal","_fetchTipTransactionList","tips","_fetchPPVTransactionList","_dismissFlagModal","_showFlagModal","_onFlagConfirmation","success","_redirectToPostDetails","history","push","_renderPreview","user","category","cursor","profilePicture","name","full","username","startDate","text","next","previous","goToIndex","likes","verticalAlign","postCommentRef","width","audio","description","options","option","optionIndex","bind","createRef","Object","assign","onloadedmetadata","formatTime","toFixed","seconds","h","Math","floor","m","s","a","join","animating","nextIndex","newIndex"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardText,\n  Carousel,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselItem\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport PostEarningsModal from \"../components/post-earnings-modal\";\nimport config from \"../config\";\nimport PollOption from \"../components/poll-option-component\";\nimport PostCommentSection from \"../components/post-comment-section\";\nimport { deepClone, getPostedDateValue } from \"../helper-methods\";\nimport { getComments } from \"../http/http-calls\";\nimport { ToastsStore } from \"react-toasts\";\nimport ReportPostModal from \"./report-post-modal\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nclass CreatorFeedViewer extends Component {\n  state = {\n    comments: [],\n    dropdownOpen: false,\n    activeIndex: 0,\n    duration: 0,\n    decodedUserDetails: null,\n    custom: [false],\n    isCommentScetionOpen: false,\n    isPrompt: false,\n    isPostEarningsModalOpen: false,\n    flagModalVisible: false\n  };\n\n  now = 60;\n\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n    this.audio = React.createRef();\n    this.postCommentRef = React.createRef();\n  }\n\n  componentDidMount() {\n    let { decodedUserDetails } = this.state;\n    // decodedUserDetails = decodeToken(this.props.userData.token);\n    this.setState({ decodedUserDetails });\n    if (this.audio !== null) {\n      const audio = Object.assign({}, this.audio);\n      audio.onloadedmetadata = () => {\n        this.setState({\n          duration: this.formatTime(audio.duration.toFixed(0))\n        });\n      };\n    }\n  }\n\n  formatTime(seconds) {\n    const h = Math.floor(seconds / 3600);\n    const m = Math.floor((seconds % 3600) / 60);\n    const s = seconds % 60;\n    return [h, m > 9 ? m : h ? \"0\" + m : m || \"0\", s > 9 ? s : \"0\" + s]\n      .filter(a => a)\n      .join(\":\");\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  next() {\n    if (this.animating) return;\n    const nextIndex =\n      this.state.activeIndex === this.props.feed._contents.length - 1\n        ? 0\n        : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex =\n      this.state.activeIndex === 0\n        ? this.props.feed._contents.length - 1\n        : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  _getAllComments = () => {\n    const { feed } = this.props;\n    return new Promise((resolve, reject) => {\n      getComments(feed._id)\n        .then(response => {\n          if (response && response.hasOwnProperty(\"comments\")) {\n            this.setState({ comments: response[\"comments\"] }, () => {\n              resolve();\n            });\n          }\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  };\n\n  _toogleCommentSection = () => {\n    const { isCommentScetionOpen } = this.state;\n    if (!isCommentScetionOpen) {\n      this._getAllComments();\n    }\n    this.setState({ isCommentScetionOpen: !isCommentScetionOpen });\n  };\n\n  _pinToProfile = isPinned => {\n    this.props.pinToProfile(this.props.feed._id, !isPinned);\n  };\n\n  _postComment = (comment, id = null) => {\n    // if (id === null) {\n    //   postCommentOnFeed({\n    //     category: \"comment\",\n    //     content: comment,\n    //     id: this.props.feed._id\n    //   })\n    //     .then(res => {\n    //       this.postCommentRef.current._clearComment();\n    //       this._getAllComments();\n    //       this.props.getAllPosts();\n    //       showToast(\"Commented successfully\", \"success\");\n    //     })\n    //     .catch(err => {\n    //       showToast(\n    //         err.reason && err.reason.length\n    //           ? err.reason\n    //           : \"Server error. Try again after sometime.\",\n    //         \"error\"\n    //       );\n    //     });\n    // } else {\n    //   // edit comment\n    // }\n  };\n\n  _renderCarousel = () => {\n    const slides = this.props.feed._contents.map(item => {\n      item = item._content;\n      return (\n        <CarouselItem\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          key={item._id}\n        >\n          {item.contentType === \"video\" ? (\n            <video\n              className=\"d-block w-100\"\n              src={item.url}\n              controlsList=\"nodownload\"\n              controls\n            />\n          ) : (\n              <img\n                className=\"d-block w-100\"\n                src={item.url}\n                alt={item.contentType}\n              />\n            )}\n        </CarouselItem>\n      );\n    });\n    return slides;\n    // return (\n    //     <>\n    //     {\n    //         items.map((item) => {\n    //             return (\n    //                 <CarouselItem onExiting={this.onExiting} onExited={this.onExited} key={item.src}>\n    //                     <img className=\"d-block w-100\" src={item.src} alt={item.altText} />\n    //                 </CarouselItem>\n    //             );\n    //         })\n    //     }\n    //     </>\n    // )\n  };\n\n  _onPromptSuccess = () => {\n    this.props.deletePost();\n    this.setState({ isPrompt: false });\n  };\n\n  _onPromptDismiss = () => {\n    this.setState({ isPrompt: false });\n  };\n\n  _deletePost = () => {\n    this.setState({ isPrompt: true });\n  };\n\n  _calculatePostPrice = feed => {\n    if (feed._transactions && feed._transactions.length) {\n      let arr = feed._transactions.filter(each => {\n        return each.paymentType === \"post\" || each.paymentType === \"tips\";\n      });\n      let totalPrice = arr.reduce((acc, each) => {\n        return (acc = acc + each.amount);\n      }, 0);\n      return totalPrice;\n    }\n    return 0;\n  };\n\n  _closePostEarningsModal = () => {\n    this.setState({ isPostEarningsModalOpen: false });\n  };\n\n  _openPostEarningsModal = feed => {\n    this.setState({ isPostEarningsModalOpen: true });\n  };\n\n  _fetchTipTransactionList = () => {\n    const { feed } = deepClone(this.props);\n    if (feed._transactions && feed._transactions.length) {\n      let tips = feed._transactions.filter(each => {\n        return each.paymentType === \"tips\";\n      });\n      return tips;\n    }\n    return [];\n  };\n\n  _fetchPPVTransactionList = () => {\n    const { feed } = deepClone(this.props);\n    if (feed._transactions && feed._transactions.length) {\n      let arr = feed._transactions.filter(each => {\n        return each.paymentType === \"post\";\n      });\n      return arr;\n    }\n    return [];\n  };\n\n  _dismissFlagModal = () => {\n    this.setState({ flagModalVisible: false });\n  };\n\n  _showFlagModal = () => {\n    this.setState({ flagModalVisible: true });\n  };\n\n  _onFlagConfirmation = () => {\n    ToastsStore.success(\"Successfully flagged\", 3000);\n    this._dismissFlagModal();\n  };\n\n  _redirectToPostDetails = () => {\n    this.props.history.push(\"/post/\" + this.props.feed._id);\n  };\n\n  _renderPreview = () => {\n    const {\n      activeIndex,\n      decodedUserDetails,\n      isCommentScetionOpen,\n      comments,\n      isPrompt,\n      flagModalVisible\n    } = deepClone(this.state);\n    const { user, feed } = deepClone(this.props);\n\n    if (this.props.feed.category && this.props.feed.category === \"general\") {\n\n      if (this.props.feed._contents && this.props.feed._contents.length > 1) {\n        return (\n          <>\n            <ReportPostModal\n              isVisible={flagModalVisible}\n              feed={this.props.feed}\n              onSuccess={this._onFlagConfirmation}\n              onDismiss={this._dismissFlagModal}\n            />\n            <Card className=\"card-Feed\">\n              <Link to={`/post/${this.props.feed._id}`}>\n                <CardHeader onClick={this._redirectToPostDetails}\n                  style={{ cursor: \"pointer\" }}>\n                  <div className=\"d-flex justify-content-start\">\n                    <div className=\"personImgWrap\">\n                      <img\n                        src={\n                          user && user.profilePicture\n                            ? user.profilePicture\n                            : config[\"defaultUserPicture\"]\n                        }\n                        alt=\"Profile Img\"\n                        className=\"personImg\"\n                      />\n                    </div>\n                    <div>\n                      <h4>{user ? user.name.full : \"\"}</h4>\n                      {user ? (\n                        <a className=\"profileID\">@{user.username || \"NA\"}</a>\n                      ) : null}\n                    </div>\n                  </div>\n                  {/* post time */}\n                  <div className=\"postTime-Feed\">\n                    {getPostedDateValue(this.props.feed.startDate)}\n                  </div>\n                </CardHeader>\n              </Link>\n              <CardBody>\n                <CardText>\n                  {this.props.feed.text && this.props.feed.text.length\n                  ? ReactHtmlParser(this.props.feed.text)\n                  : \"\"}\n                </CardText>\n                <div className=\"mediaPhotoWrap-Feed\">\n                  {/* carousel */}\n                  <Carousel\n                    activeIndex={activeIndex}\n                    next={this.next}\n                    previous={this.previous}\n                    ride=\"carousel\"\n                  >\n                    <CarouselIndicators\n                      items={this.props.feed._contents}\n                      activeIndex={activeIndex}\n                      onClickHandler={this.goToIndex}\n                    />\n                    {this._renderCarousel()}\n                    <CarouselControl\n                      direction=\"prev\"\n                      directionText=\"Previous\"\n                      onClickHandler={this.previous}\n                    />\n                    <CarouselControl\n                      direction=\"next\"\n                      directionText=\"Next\"\n                      onClickHandler={this.next}\n                    />\n                  </Carousel>\n                </div>\n                <div className=\"options-Feed\">\n                  <Button color=\"ghost-info\" disabled>\n                    <i className=\"icon-heart\"></i>\n                    <span>{this.props.feed.likes || 0}</span>\n                  </Button>\n\n                  <Button\n                    color=\"ghost-info\"\n                    onClick={() => this._toogleCommentSection()}\n                    aria-controls=\"exampleAccordion1\"\n                  >\n                    <i className=\"icon-bubble\"></i>\n                    <span>{this.props.feed.comments || 0}</span>\n                  </Button>\n\n                  <Button\n                    color=\"ghost-info\"\n                    onClick={() => this._openPostEarningsModal(this.props.feed)}\n                  >\n                    <i className=\"fa fa-dollar\"></i>\n                    <span style={{ verticalAlign: \"-1px\" }}>\n                      {this._calculatePostPrice(this.props.feed) || 0}\n                    </span>\n                  </Button>\n                  <Button color=\"ghost-secondary\" onClick={this._showFlagModal}>\n                    <i className=\"fa fa-flag-o\" aria-hidden=\"true\"></i>\n                  </Button>\n                </div>{\" \"}\n                {/* options-Feed */}\n              </CardBody>\n            </Card>\n            <PostCommentSection\n              feed={this.props.feed}\n              ref={this.postCommentRef}\n              comments={comments}\n              isOpen={isCommentScetionOpen}\n              getComments={() => this._getAllComments()}\n              user={this.props.user}\n            />\n          </>\n        );\n      } else if (\n        this.props.feed._contents &&\n        this.props.feed._contents.length === 1\n      ) {\n        if (this.props.feed._contents[0]._content.contentType === \"image\") {\n          // contains only one image\n          return (\n            <>\n              <ReportPostModal\n                isVisible={flagModalVisible}\n                feed={this.props.feed}\n                onSuccess={this._onFlagConfirmation}\n                onDismiss={this._dismissFlagModal}\n              />\n              <Card className=\"card-Feed\">\n                <Link to={`/post/${this.props.feed._id}`}>\n                  <CardHeader onClick={this._redirectToPostDetails}\n                    style={{ cursor: \"pointer\" }}>\n                    <div className=\"d-flex justify-content-start\">\n                      <div className=\"personImgWrap\">\n                        <img\n                          src={\n                            user && user.profilePicture\n                              ? user.profilePicture\n                              : config[\"defaultUserPicture\"]\n                          }\n                          alt=\"Profile Img\"\n                          className=\"personImg\"\n                        />\n                      </div>\n                      <div>\n                        <h4>{user ? user.name.full : \"\"}</h4>\n                        {user ? (\n                          <a className=\"profileID\">@{user.username || \"NA\"}</a>\n                        ) : null}\n                      </div>\n                    </div>\n                    {/* post time */}\n                    <div className=\"postTime-Feed\">\n                      {getPostedDateValue(this.props.feed.startDate)}\n                    </div>\n                  </CardHeader>\n                </Link>\n                <CardBody>\n                  <CardText>\n                    {this.props.feed.text && this.props.feed.text.length\n                    ? ReactHtmlParser(this.props.feed.text)\n                    : \"\"}\n                  </CardText>\n                  <div className=\"mediaPhotoWrap-Feed\">\n                    <img\n                      className=\"mediaPhoto-Feed\"\n                      src={this.props.feed._contents[0]._content.url}\n                      alt=\"Feed Img\"\n                    />\n                  </div>\n                  <div className=\"options-Feed\">\n                    <Button color=\"ghost-info\" disabled>\n                      <i className=\"icon-heart\"></i>\n                      <span>{this.props.feed.likes || 0}</span>\n                    </Button>\n\n                    <Button\n                      color=\"ghost-info\"\n                      onClick={() => this._toogleCommentSection()}\n                    >\n                      <i className=\"icon-bubble\"></i>\n                      <span>{this.props.feed.comments || 0}</span>\n                    </Button>\n\n                    <Button\n                      color=\"ghost-info\"\n                      onClick={() =>\n                        this._openPostEarningsModal(this.props.feed)\n                      }\n                    >\n                      <i className=\"fa fa-dollar\"></i>\n                      <span style={{ verticalAlign: \"-1px\" }}>\n                        {this._calculatePostPrice(this.props.feed) || 0}\n                      </span>\n                    </Button>\n                    <Button\n                      color=\"ghost-secondary\"\n                      onClick={this._showFlagModal}\n                    >\n                      <i className=\"fa fa-flag-o\" aria-hidden=\"true\"></i>\n                    </Button>\n                  </div>{\" \"}\n                  {/* options-Feed */}\n                </CardBody>\n              </Card>\n              <PostCommentSection\n                feed={this.props.feed}\n                ref={this.postCommentRef}\n                comments={comments}\n                isOpen={isCommentScetionOpen}\n                postComment={text => this._postComment(text)}\n                getComments={() => this._getAllComments()}\n                user={this.props.user}\n              />\n            </>\n          );\n        } else if (this.props.feed._contents[0].contentType === \"audio\") {\n          // contains only one audio file\n          return (\n            <>\n              <ReportPostModal\n                isVisible={flagModalVisible}\n                feed={this.props.feed}\n                onSuccess={this._onFlagConfirmation}\n                onDismiss={this._dismissFlagModal}\n              />\n              <Card className=\"card-Feed\">\n                <Link to={`/post/${this.props.feed._id}`}>\n                  <CardHeader onClick={this._redirectToPostDetails}\n                    style={{ cursor: \"pointer\" }}>\n                    <div className=\"d-flex justify-content-start\">\n                      <div className=\"personImgWrap\">\n                        <img\n                          src={\n                            user && user.profilePicture\n                              ? user.profilePicture\n                              : config[\"defaultUserPicture\"]\n                          }\n                          alt=\"Profile Img\"\n                          className=\"personImg\"\n                        />\n                      </div>\n                      <div>\n                        <h4>{user ? user.name.full : \"\"}</h4>\n                        {user ? (\n                          <a className=\"profileID\">@{user.username || \"NA\"}</a>\n                        ) : null}\n                      </div>\n                    </div>\n                    {/* post time */}\n                    <div className=\"postTime-Feed\">\n                      {getPostedDateValue(this.props.feed.startDate)}\n                    </div>\n                  </CardHeader>\n                </Link>\n                <CardBody>\n                  <CardText>\n                    {this.props.feed.text && this.props.feed.text.length\n                    ? ReactHtmlParser(this.props.feed.text)\n                    : \"\"}\n                  </CardText>\n                  <div className=\"my-2 px-2\">\n                    <audio\n                      style={{ width: \"100%\" }}\n                      ref={audio => {\n                        this.audio = audio;\n                      }}\n                      controls\n                      controlsList=\"nodownload\"\n                      src={this.props.feed._contents[0]._content.url || \"\"}\n                    ></audio>\n                  </div>\n                  <div className=\"options-Feed\">\n                    <Button color=\"ghost-info\" disabled>\n                      <i className=\"icon-heart\"></i>\n                      <span>{this.props.feed.likes || 0}</span>\n                    </Button>\n\n                    <Button\n                      color=\"ghost-info\"\n                      onClick={() => this._toogleCommentSection()}\n                    >\n                      <i className=\"icon-bubble\"></i>\n                      <span>{this.props.feed.comments || 0}</span>\n                    </Button>\n\n                    <Button\n                      color=\"ghost-info\"\n                      onClick={() =>\n                        this._openPostEarningsModal(this.props.feed)\n                      }\n                    >\n                      <i className=\"fa fa-dollar\"></i>\n                      <span style={{ verticalAlign: \"-1px\" }}>\n                        {this._calculatePostPrice(this.props.feed) || 0}\n                      </span>\n                    </Button>\n                    <Button\n                      color=\"ghost-secondary\"\n                      onClick={this._showFlagModal}\n                    >\n                      <i className=\"fa fa-flag-o\" aria-hidden=\"true\"></i>\n                    </Button>\n                  </div>{\" \"}\n                  {/* options-Feed */}\n                </CardBody>\n              </Card>\n              <PostCommentSection\n                feed={this.props.feed}\n                ref={this.postCommentRef}\n                comments={comments}\n                isOpen={isCommentScetionOpen}\n                postComment={text => this._postComment(text)}\n                getComments={() => this._getAllComments()}\n                user={this.props.user}\n              />\n            </>\n          );\n        } else if (this.props.feed._contents[0].contentType === \"video\") {\n          // contains only one video\n          return (\n            <>\n              <ReportPostModal\n                isVisible={flagModalVisible}\n                feed={this.props.feed}\n                onSuccess={this._onFlagConfirmation}\n                onDismiss={this._dismissFlagModal}\n              />\n              <Card className=\"card-Feed\">\n                <Link to={`/post/${this.props.feed._id}`}>\n                  <CardHeader onClick={this._redirectToPostDetails}\n                    style={{ cursor: \"pointer\" }}>\n                    <div className=\"d-flex justify-content-start\">\n                      <div className=\"personImgWrap\">\n                        <img\n                          src={\n                            user && user.profilePicture\n                              ? user.profilePicture\n                              : config[\"defaultUserPicture\"]\n                          }\n                          alt=\"Profile Img\"\n                          className=\"personImg\"\n                        />\n                      </div>\n                      <div>\n                        <h4>{user ? user.name.full : \"\"}</h4>\n                        {user ? (\n                          <a className=\"profileID\">@{user.username || \"NA\"}</a>\n                        ) : null}\n                      </div>\n                    </div>\n                    {/* post time */}\n                    <div className=\"postTime-Feed\">\n                      {getPostedDateValue(this.props.feed.startDate)}\n                    </div>\n                  </CardHeader>\n                </Link>\n                <CardBody>\n                  <CardText>\n                    {this.props.feed.text && this.props.feed.text.length\n                    ? ReactHtmlParser(this.props.feed.text)\n                    : \"\"}\n                  </CardText>\n                  <div className=\"embed-responsive embed-responsive-16by9 mediaVideoWrap-Feed\">\n                    {/* <iframe className=\"embed-responsive-item\" src=\"https://www.youtube.com/embed/zpOULjyy-n8?rel=0\" allowfullscreen></iframe> */}\n                    <video\n                      className=\"embed-responsive-item\"\n                      src={this.props.feed._contents[0]._content.url}\n                      controls\n                      controlsList=\"nodownload\"\n                    ></video>\n                  </div>\n                  <div className=\"options-Feed\">\n                    <Button color=\"ghost-info\" disabled>\n                      <i className=\"icon-heart\"></i>\n                      <span>{this.props.feed.likes || 0}</span>\n                    </Button>\n\n                    <Button\n                      color=\"ghost-info\"\n                      onClick={() => this._toogleCommentSection()}\n                    >\n                      <i className=\"icon-bubble\"></i>\n                      <span>{this.props.feed.comments || 0}</span>\n                    </Button>\n\n                    <Button\n                      color=\"ghost-info\"\n                      onClick={() =>\n                        this._openPostEarningsModal(this.props.feed)\n                      }\n                    >\n                      <i className=\"fa fa-dollar\"></i>\n                      <span style={{ verticalAlign: \"-1px\" }}>\n                        {this._calculatePostPrice(this.props.feed) || 0}\n                      </span>\n                    </Button>\n                    <Button\n                      color=\"ghost-secondary\"\n                      onClick={this._showFlagModal}\n                    >\n                      <i className=\"fa fa-flag-o\" aria-hidden=\"true\"></i>\n                    </Button>\n                  </div>{\" \"}\n                  {/* options-Feed */}\n                </CardBody>\n              </Card>\n              <PostCommentSection\n                ref={this.postCommentRef}\n                comments={comments}\n                isOpen={isCommentScetionOpen}\n                postComment={text => this._postComment(text)}\n                getComments={() => this._getAllComments()}\n                feed={this.props.feed}\n                user={this.props.user}\n              />\n            </>\n          );\n        }\n      } else if (\n        this.props.feed._contents &&\n        this.props.feed._contents.length === 0\n      ) {\n        // text only post\n        return (\n          <>\n            <ReportPostModal\n              isVisible={flagModalVisible}\n              feed={this.props.feed}\n              onSuccess={this._onFlagConfirmation}\n              onDismiss={this._dismissFlagModal}\n            />\n            <Card className=\"card-Feed\">\n              <Link to={`/post/${this.props.feed._id}`}>\n                <CardHeader onClick={this._redirectToPostDetails}\n                  style={{ cursor: \"pointer\" }}>\n                  <div className=\"d-flex justify-content-start\">\n                    <div className=\"personImgWrap\">\n                      <img\n                        src={\n                          user && user.profilePicture\n                            ? user.profilePicture\n                            : config[\"defaultUserPicture\"]\n                        }\n                        alt=\"Profile Img\"\n                        className=\"personImg\"\n                      />\n                    </div>\n                    <div>\n                      <h4>{user ? user.name.full : \"\"}</h4>\n                      {user ? (\n                        <a className=\"profileID\">@{user.username || \"NA\"}</a>\n                      ) : null}\n                    </div>\n                  </div>\n                  {/* post time */}\n                  <div className=\"postTime-Feed\">\n                    {getPostedDateValue(this.props.feed.startDate)}\n                  </div>\n                </CardHeader>\n              </Link>\n              <CardBody>\n                <CardText>\n                  {this.props.feed.text && this.props.feed.text.length\n                    ? ReactHtmlParser(this.props.feed.text)\n                    : \"\"}\n                </CardText>\n                {/* <div className=\"embed-responsive embed-responsive-16by9 mediaVideoWrap-Feed\">\n                <iframe className=\"embed-responsive-item\" src=\"https://www.youtube.com/embed/zpOULjyy-n8?rel=0\" allowfullscreen></iframe>\n            </div> */}\n                <div className=\"options-Feed\">\n                  <Button color=\"ghost-info\" disabled>\n                    <i className=\"icon-heart\"></i>\n                    <span>{this.props.feed.likes || 0}</span>\n                  </Button>\n\n                  <Button\n                    color=\"ghost-info\"\n                    onClick={() => this._toogleCommentSection()}\n                  >\n                    <i className=\"icon-bubble\"></i>\n                    <span>{this.props.feed.comments || 0}</span>\n                  </Button>\n\n                  <Button\n                    color=\"ghost-info\"\n                    onClick={() => this._openPostEarningsModal(this.props.feed)}\n                  >\n                    <i className=\"fa fa-dollar\"></i>\n                    <span style={{ verticalAlign: \"-1px\" }}>\n                      {this._calculatePostPrice(this.props.feed) || 0}\n                    </span>\n                  </Button>\n                  <Button color=\"ghost-secondary\" onClick={this._showFlagModal}>\n                    <i className=\"fa fa-flag-o\" aria-hidden=\"true\"></i>\n                  </Button>\n                </div>{\" \"}\n                {/* options-Feed */}\n              </CardBody>\n            </Card>\n            <PostCommentSection\n              feed={this.props.feed}\n              ref={this.postCommentRef}\n              comments={comments}\n              isOpen={isCommentScetionOpen}\n              postComment={text => this._postComment(text)}\n              getComments={() => this._getAllComments()}\n              user={this.props.user}\n            />\n          </>\n        );\n      }\n    } else if (\n      this.props.feed.category &&\n      this.props.feed.category === \"poll\"\n    ) {\n      return (\n        <>\n          <ReportPostModal\n            isVisible={flagModalVisible}\n            feed={this.props.feed}\n            onSuccess={this._onFlagConfirmation}\n            onDismiss={this._dismissFlagModal}\n          />\n          <Card className=\"card-Feed\">\n            <Link to={`/post/${this.props.feed._id}`}>\n              <CardHeader onClick={this._redirectToPostDetails}\n                style={{ cursor: \"pointer\" }}>\n                <div className=\"d-flex justify-content-start\">\n                  <div className=\"personImgWrap\">\n                    <img\n                      src={\n                        user && user.profilePicture\n                          ? user.profilePicture\n                          : \"http://www.clipartpanda.com/clipart_images/user-66327738/download\"\n                      }\n                      alt=\"Profile Img\"\n                      className=\"personImg\"\n                    />\n                  </div>\n                  <div>\n                    <h4>{user ? user.name.full : \"\"}</h4>\n                    {user ? (\n                      <a className=\"profileID\">@{user.username || \"NA\"}</a>\n                    ) : null}\n                  </div>\n                </div>\n                {/* post time */}\n                <div className=\"postTime-Feed\">\n                  {getPostedDateValue(this.props.feed.startDate)}\n                </div>\n              </CardHeader>\n            </Link>\n            <CardBody>\n              <CardText>\n                {this.props.feed.description &&\n                  this.props.feed.description.length\n                  ? ReactHtmlParser(this.props.feed.description)\n                  : null}\n                {this.props.feed.description &&\n                  this.props.feed.description.length ? (\n                    <br />\n                  ) : null}\n                {this.props.feed.text && this.props.feed.text.length\n                  ? ReactHtmlParser(this.props.feed.text)\n                  : \"\"}\n              </CardText>\n              {/* poll options should always be wrapped inside the below div */}\n              <div className=\"d-block mb-2 pollOptionWrap\">\n                {this.props.feed.options && this.props.feed.options.length\n                  ? this.props.feed.options.map((option, optionIndex) => (\n                    <PollOption\n                      feed={this.props.feed}\n                      option={option}\n                      key={optionIndex}\n                      index={optionIndex}\n                    />\n                  ))\n                  : null}\n              </div>\n              <div className=\"options-Feed\">\n                <Button color=\"ghost-info\" disabled>\n                  <i className=\"icon-heart\"></i>\n                  <span>{this.props.feed.likes || 0}</span>\n                </Button>\n\n                <Button\n                  color=\"ghost-info\"\n                  onClick={() => this._toogleCommentSection()}\n                >\n                  <i className=\"icon-bubble\"></i>\n                  <span>{this.props.feed.comments || 0}</span>\n                </Button>\n                <Button color=\"ghost-secondary\" onClick={this._showFlagModal}>\n                  <i className=\"fa fa-flag-o\" aria-hidden=\"true\"></i>\n                </Button>\n                {/* <Button color=\"ghost-secondary\" onClick={() => this._openPostEarningsModal(this.props.feed)}>\n                  <i className=\"fa fa-dollar\"></i>\n                  <span style={{ verticalAlign: \"-1px\" }}>\n                    {this._calculatePostPrice(this.props.feed) || 0}\n                  </span>\n                </Button> */}\n              </div>{\" \"}\n              {/* options-Feed */}\n            </CardBody>\n          </Card>\n          <PostCommentSection\n            feed={this.props.feed}\n            ref={this.postCommentRef}\n            comments={comments}\n            isOpen={isCommentScetionOpen}\n            postComment={text => this._postComment(text)}\n            getComments={() => this._getAllComments()}\n            user={this.props.user}\n          />\n        </>\n      );\n    }\n\n    return <div />;\n  };\n\n  render() {\n    const { isPrompt, isPostEarningsModalOpen } = deepClone(this.state);\n    return (\n      <>\n        {this._renderPreview()}{\" \"}\n        <PostEarningsModal\n          isVisible={isPostEarningsModalOpen}\n          feed={this.props.feed}\n          close={this._closePostEarningsModal}\n          tipArr={this._fetchTipTransactionList()}\n          ppvArr={this._fetchPPVTransactionList()}\n        />\n      </>\n    );\n  }\n}\n\nexport default CreatorFeedViewer;\n"]},"metadata":{},"sourceType":"module"}