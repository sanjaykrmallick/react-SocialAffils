{"ast":null,"code":"import _regeneratorRuntime from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/report-post-modal.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Input, Modal, ModalBody } from 'reactstrap';\nimport { flagPost } from \"../http/http-calls\";\nimport SectionLoader from \"./section-loader\";\nimport { showToast, sleepTime } from \"../helper-methods\";\n\nvar ReportPostModal = /*#__PURE__*/function (_Component) {\n  _inherits(ReportPostModal, _Component);\n\n  var _super = _createSuper(ReportPostModal);\n\n  function ReportPostModal() {\n    var _this;\n\n    _classCallCheck(this, ReportPostModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isSubmitting: false,\n      formFields: {\n        reason: {\n          value: \"Explicit Content\",\n          isValid: false,\n          isDirty: false\n        },\n        description: {\n          value: \"\",\n          isValid: false,\n          isDirty: false\n        }\n      },\n      isLoaderActive: false\n    };\n\n    _this._dismiss = function () {\n      _this._resetState();\n\n      _this.props.onDismiss();\n    };\n\n    _this._handleOutSideClick = function () {\n      var isSubmitting = _this.state.isSubmitting;\n\n      if (!isSubmitting) {\n        _this._resetState();\n\n        _this.props.onDismiss();\n      }\n    };\n\n    _this._resetState = function () {\n      _this.setState({\n        isSubmitting: false,\n        formFields: {\n          reason: {\n            value: \"Explicit Content\",\n            isValid: false,\n            isDirty: false\n          },\n          description: {\n            value: \"\",\n            isValid: false,\n            isDirty: false\n          }\n        },\n        isLoaderActive: false\n      });\n    };\n\n    _this._markAsDirty = function (fieldName) {\n      var formFields = _this.state.formFields;\n\n      if (formFields[fieldName].value && formFields[fieldName].value.length) {\n        formFields[fieldName].isDirty = true;\n\n        _this.setState({\n          formFields: formFields\n        });\n\n        _this._validateForm();\n      }\n    };\n\n    _this._updateFieldValue = function (fieldName, value) {\n      var formFields = _this.state.formFields;\n      formFields[fieldName].value = value;\n\n      _this.setState({\n        formFields: formFields\n      });\n\n      if (formFields[fieldName].isDirty) {\n        // Validate\n        _this._validateForm();\n      }\n    };\n\n    _this._validateForm = function () {\n      return new Promise(function (resolve, reject) {\n        var formFields = _this.state.formFields;\n        var isFormValid = true;\n        Object.keys(formFields).forEach(function (fieldName, index) {\n          switch (fieldName) {\n            case \"reason\":\n              {\n                break;\n              }\n\n            case \"description\":\n              {\n                if (formFields.reason.value === 'Other') {\n                  if (!formFields.description.value || !formFields.description.value.length) {\n                    formFields.description.isValid = false;\n                    isFormValid = false;\n                  } else {\n                    formFields.description.isValid = true;\n                  }\n                } else {\n                  formFields.description.isValid = true;\n                }\n\n                break;\n              }\n          }\n        });\n\n        _this.setState({\n          formFields: formFields,\n          isFormValid: isFormValid\n        }, function () {\n          resolve();\n        });\n      });\n    };\n\n    _this._makeAllFieldDirty = function () {\n      var formFields = _this.state.formFields;\n      Object.keys(formFields).forEach(function (fieldName, index) {\n        formFields[fieldName].isDirty = true;\n      });\n    };\n\n    _this._report = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var e,\n          _this$state,\n          formFields,\n          isFormValid,\n          feed,\n          _formFields,\n          payload,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e = _args.length > 0 && _args[0] !== undefined ? _args[0] : null;\n\n              _this._makeAllFieldDirty();\n\n              _context.next = 4;\n              return _this._validateForm();\n\n            case 4:\n              _this$state = _this.state, formFields = _this$state.formFields, isFormValid = _this$state.isFormValid;\n\n              if (!isFormValid) {\n                _context.next = 30;\n                break;\n              }\n\n              _context.prev = 6;\n\n              _this.setState({\n                isSubmitting: true\n              });\n\n              _this._showLoader();\n\n              feed = _this.props.feed;\n              console.log(\"TCL: _report -> feed\", feed);\n              _formFields = _this.state.formFields;\n              payload = {\n                category: 'post',\n                id: feed._id,\n                subject: _formFields.reason.value,\n                reportedAgainst: feed._influencer\n              };\n\n              if (_formFields.description.value && _formFields.description.value.length) {\n                payload['text'] = _formFields.description.value;\n              }\n\n              console.log('payload :', payload);\n              _context.next = 17;\n              return flagPost(payload);\n\n            case 17:\n              _this.props.onSuccess();\n\n              _context.next = 20;\n              return sleepTime(400);\n\n            case 20:\n              _this._resetState();\n\n              _context.next = 30;\n              break;\n\n            case 23:\n              _context.prev = 23;\n              _context.t0 = _context[\"catch\"](6);\n              console.log('error :', _context.t0);\n\n              _this._hideLoader();\n\n              showToast(\"Flagging failed\");\n\n              _this._resetState();\n\n              _this.props.onDismiss();\n\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 23]]);\n    }));\n\n    _this._showLoader = function () {\n      _this.setState({\n        isLoaderActive: true\n      });\n    };\n\n    _this._hideLoader = function () {\n      _this.setState({\n        isLoaderActive: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ReportPostModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isVisible = this.props.isVisible;\n      var _this$state2 = this.state,\n          isLoaderActive = _this$state2.isLoaderActive,\n          formFields = _this$state2.formFields;\n      return /*#__PURE__*/React.createElement(Modal, {\n        isOpen: isVisible,\n        toggle: function toggle() {\n          return _this2._handleOutSideClick();\n        },\n        className: \"modal-dialog-centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ModalBody, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(SectionLoader, {\n        isActive: isLoaderActive,\n        loaderSize: 30,\n        height: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"mt-3 mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, \"Mark post as inappropriate\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"mt-2 mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      }, \"Reason\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"select\",\n        className: \"p-1\",\n        value: formFields.reason.value,\n        onChange: function onChange(e) {\n          return _this2._updateFieldValue(\"reason\", e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Explicit Content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 19\n        }\n      }, \"Explicit Content\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Hate Speech\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 19\n        }\n      }, \"Hate Speech\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Promotes Illegal Activity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 19\n        }\n      }, \"Promotes Illegal Activity\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Racism\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 19\n        }\n      }, \"Racism\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Violence\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }\n      }, \"Violence\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Other\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 19\n        }\n      }, \"Other\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 mt-4 mb-4 text-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"mt-2 mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }, \"Describe\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        placeholder: \"\",\n        className: \"form-control\",\n        rows: \"4\",\n        style: {\n          resize: \"none\"\n        },\n        value: formFields.description.value,\n        onChange: function onChange(e) {\n          return _this2._updateFieldValue(\"description\", e.target.value);\n        },\n        onBlur: function onBlur() {\n          return _this2._markAsDirty(\"description\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }\n      }), formFields.description.isDirty && !formFields.description.isValid ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"form-error\",\n        style: {\n          paddingLeft: 'unset',\n          paddingTop: '8px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 19\n        }\n      }, \"Please describe\") : null))), /*#__PURE__*/React.createElement(Button, {\n        color: \"danger\",\n        className: \"mr-4 mb-3\",\n        size: \"lg\",\n        onClick: this._report,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon-check mr-1\",\n        style: {\n          marginTop: \"0.5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }), \" \", \"Report\"), /*#__PURE__*/React.createElement(Button, {\n        outline: true,\n        color: \"warning\",\n        className: \"mb-3\",\n        size: \"lg\",\n        onClick: function onClick() {\n          return _this2._dismiss();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon-close mr-1\",\n        style: {\n          marginTop: \"0.5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }\n      }), \" \", \"Cancel\")));\n    }\n  }]);\n\n  return ReportPostModal;\n}(Component);\n\nexport default ReportPostModal;","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/report-post-modal.jsx"],"names":["React","Component","Button","Input","Modal","ModalBody","flagPost","SectionLoader","showToast","sleepTime","ReportPostModal","state","isSubmitting","formFields","reason","value","isValid","isDirty","description","isLoaderActive","_dismiss","_resetState","props","onDismiss","_handleOutSideClick","setState","_markAsDirty","fieldName","length","_validateForm","_updateFieldValue","Promise","resolve","reject","isFormValid","Object","keys","forEach","index","_makeAllFieldDirty","_report","e","_showLoader","feed","console","log","payload","category","id","_id","subject","reportedAgainst","_influencer","onSuccess","_hideLoader","isVisible","target","resize","paddingLeft","paddingTop","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Input, Modal, ModalBody } from 'reactstrap';\nimport { flagPost } from \"../http/http-calls\";\nimport SectionLoader from \"./section-loader\";\nimport { showToast, sleepTime } from \"../helper-methods\";\n\n\nclass ReportPostModal extends Component {\n  state = {\n    isSubmitting: false,\n    formFields: {\n      reason: {\n        value: \"Explicit Content\",\n        isValid: false,\n        isDirty: false\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n        isDirty: false\n      }\n    },\n    isLoaderActive: false,\n  };\n\n  _dismiss = () => {\n    this._resetState();\n    this.props.onDismiss();\n  };\n\n  _handleOutSideClick = () => {\n    const { isSubmitting } = this.state;\n    if (!isSubmitting) {\n      this._resetState();\n      this.props.onDismiss();\n    }\n  }\n\n  _resetState = () => {\n    this.setState({\n      isSubmitting: false,\n      formFields: {\n        reason: {\n          value: \"Explicit Content\",\n          isValid: false,\n          isDirty: false\n        },\n        description: {\n          value: \"\",\n          isValid: false,\n          isDirty: false\n        }\n      },\n      isLoaderActive: false\n    });\n  }\n\n  _markAsDirty = fieldName => {\n    const { formFields } = this.state;\n    if (formFields[fieldName].value && formFields[fieldName].value.length) {\n      formFields[fieldName].isDirty = true;\n      this.setState({ formFields });\n      this._validateForm();\n    }\n  };\n\n  _updateFieldValue = (fieldName, value) => {\n    const { formFields } = this.state;\n    formFields[fieldName].value = value;\n    this.setState({ formFields });\n    if (formFields[fieldName].isDirty) {\n      // Validate\n      this._validateForm();\n    }\n  };\n\n  _validateForm = () => {\n    return new Promise((resolve, reject) => {\n      const { formFields } = this.state;\n    let isFormValid = true;\n    Object.keys(formFields).forEach((fieldName, index) => {\n      switch (fieldName) {\n        case \"reason\": {\n\n          break;\n        }\n        case \"description\": {\n          if (formFields.reason.value === 'Other') {\n            if (!formFields.description.value || !formFields.description.value.length) {\n              formFields.description.isValid = false;\n              isFormValid = false;\n            } else {\n              formFields.description.isValid = true;  \n            }\n          } else {\n            formFields.description.isValid = true;\n          }\n          break;\n        }\n      }\n    });\n    this.setState({ formFields, isFormValid }, () => {\n      resolve();\n    });\n    });\n  };\n\n  _makeAllFieldDirty = () => {\n    const { formFields } = this.state;\n    Object.keys(formFields).forEach((fieldName, index) => {\n      formFields[fieldName].isDirty = true;\n    });\n  };\n\n  _report = async (e=null) => {\n    this._makeAllFieldDirty();\n    await this._validateForm();\n    const { formFields, isFormValid } = this.state;\n    if (isFormValid) {\n      try {\n        this.setState({ isSubmitting: true });\n        this._showLoader();\n        const { feed } = this.props;\n        console.log(\"TCL: _report -> feed\", feed)\n        const { formFields } = this.state;\n        const payload = {\n          category: 'post',\n          id: feed._id,\n          subject: formFields.reason.value, \n          reportedAgainst: feed._influencer\n        };\n        if (formFields.description.value && formFields.description.value.length) {\n          payload['text'] = formFields.description.value;\n        } \n        console.log('payload :', payload);\n        await flagPost(payload);\n        this.props.onSuccess();\n        await sleepTime(400);\n        this._resetState();\n      } catch (error) {\n        console.log('error :', error);\n        this._hideLoader();\n        showToast(\"Flagging failed\");\n        this._resetState();\n        this.props.onDismiss();\n      }\n    }\n  };\n\n  _showLoader = () => {\n    this.setState({ isLoaderActive: true });\n  };\n\n  _hideLoader = () => {\n    this.setState({ isLoaderActive: false });\n  };\n\n  render() {\n    const { isVisible } = this.props;\n    const { isLoaderActive, formFields } = this.state;\n    \n    return (\n      <Modal\n        isOpen={isVisible}\n        toggle={() => this._handleOutSideClick()}\n        className=\"modal-dialog-centered\"\n      >\n        <ModalBody className=\"text-center\">\n          <SectionLoader\n            isActive={isLoaderActive}\n            loaderSize={30}\n            height={400}\n          />\n          <h2 className=\"mt-3 mb-4\">Mark post as inappropriate</h2>\n\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12 text-left\">\n                <h6 className=\"mt-2 mb-2\">Reason</h6>\n                <Input\n                  type=\"select\"\n                  name=\"select\"\n                  id=\"select\"\n                  className=\"p-1\"\n                  value={formFields.reason.value}\n                  onChange={e =>\n                    this._updateFieldValue(\"reason\", e.target.value)\n                  }\n                >\n                  <option value=\"Explicit Content\">Explicit Content</option>\n                  <option value=\"Hate Speech\">Hate Speech</option>\n                  <option value=\"Promotes Illegal Activity\">\n                    Promotes Illegal Activity\n                  </option>\n                  <option value=\"Racism\">Racism</option>\n                  <option value=\"Violence\">Violence</option>\n                  <option value=\"Other\">Other</option>\n                </Input>\n              </div>\n              <div className=\"col-12 mt-4 mb-4 text-left\">\n                <h6 className=\"mt-2 mb-2\">Describe</h6>\n                <textarea\n                  placeholder=\"\"\n                  className=\"form-control\"\n                  rows=\"4\"\n                  style={{ resize: \"none\" }}\n                  value={formFields.description.value}\n                  onChange={e =>\n                    this._updateFieldValue(\"description\", e.target.value)\n                  }\n                  onBlur={() => this._markAsDirty(\"description\")}\n                />\n                {formFields.description.isDirty &&\n                !formFields.description.isValid ? (\n                  <p \n                    className=\"form-error\"\n                    style={{\n                      paddingLeft: 'unset',\n                      paddingTop: '8px'\n                    }}\n                  >Please describe</p>\n                ) : null}\n              </div>\n            </div>\n          </div>\n\n          <Button\n            color=\"danger\"\n            className=\"mr-4 mb-3\"\n            size=\"lg\"\n            onClick={this._report}\n          >\n            <i className=\"icon-check mr-1\" style={{ marginTop: \"0.5px\" }}></i>{\" \"}\n            Report\n          </Button>\n\n          <Button\n            outline\n            color=\"warning\"\n            className=\"mb-3\"\n            size=\"lg\"\n            onClick={() => this._dismiss()}\n          >\n            <i className=\"icon-close mr-1\" style={{ marginTop: \"0.5px\" }}></i>{\" \"}\n            Cancel\n          </Button>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nexport default ReportPostModal;\n"]},"metadata":{},"sourceType":"module"}