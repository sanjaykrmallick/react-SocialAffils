{"ast":null,"code":"import _classCallCheck from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/add-admin-modal.jsx\";\nimport React, { Component } from \"react\";\nimport { Modal, ModalBody, ModalFooter, ModalHeader // Table,\n, Button // Badge,\n// Container,\n, Row, Col, Input, Label, FormGroup, Form } from \"reactstrap\";\nimport { createAdmin } from \"../http/http-calls\"; // import config from '../config/index';\n\nimport { ToastsStore } from \"react-toasts\";\nimport { showToast } from \"../helper-methods\";\nimport { countryCodes } from \"../config/country-codes\";\nimport config from \"../config\";\n\nvar AddAdminModal = /*#__PURE__*/function (_Component) {\n  _inherits(AddAdminModal, _Component);\n\n  var _super = _createSuper(AddAdminModal);\n\n  function AddAdminModal() {\n    var _this;\n\n    _classCallCheck(this, AddAdminModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      adminUser: {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        countryCode: \"+1\",\n        type: \"\",\n        status: \"\"\n      },\n      errors: {},\n      isDirty: {\n        name: false,\n        email: false,\n        phone: false\n      },\n      loading: false\n    };\n\n    _this._closeModal = function () {\n      var _this$state = _this.state,\n          adminUser = _this$state.adminUser,\n          errors = _this$state.errors,\n          isDirty = _this$state.isDirty;\n      adminUser = {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        countryCode: \"+1\"\n      };\n      isDirty = {\n        name: false,\n        email: false,\n        phone: false\n      };\n      errors = {};\n\n      _this.setState({\n        adminUser: adminUser,\n        errors: errors,\n        isDirty: isDirty\n      }, function () {\n        console.log(adminUser, errors);\n\n        _this.props.toggle();\n      });\n    };\n\n    _this._handleOnChange = function (_ref) {\n      var currentTarget = _ref.currentTarget;\n      var _this$state2 = _this.state,\n          adminUser = _this$state2.adminUser,\n          isDirty = _this$state2.isDirty;\n      adminUser[currentTarget.name] = currentTarget.value;\n      isDirty[currentTarget.name] = true;\n\n      _this.setState({\n        adminUser: adminUser\n      });\n\n      _this._validateForm();\n    };\n\n    _this._handleOnSubmit = function (event) {\n      event.preventDefault();\n      var isDirty = _this.state.isDirty;\n      isDirty.name = true;\n      isDirty.email = true;\n      isDirty.phone = true;\n\n      _this.setState({\n        isDirty: isDirty\n      });\n\n      console.log(_this.state.isDirty);\n\n      var errors = _this._validateForm();\n\n      console.log(errors); // this.setState({errors});\n\n      if (!errors) {\n        console.log(\"Make API call\");\n\n        _this._saveUser();\n      }\n    };\n\n    _this._updateCountryCode = function (value) {\n      var adminUser = _this.state.adminUser;\n      adminUser[\"countryCode\"] = value;\n\n      _this.setState({\n        adminUser: adminUser\n      });\n    };\n\n    _this._resetForm = function () {\n      var adminUser = {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        countryCode: \"+1\",\n        type: \"\",\n        status: \"\"\n      };\n\n      _this.setState({\n        adminUser: adminUser\n      });\n    };\n\n    _this._makeModalHeader = function () {\n      switch (_this.props.type) {\n        case \"add\":\n          return \"Add Admin\";\n\n        case \"edit\":\n          return \"Edit Admin\";\n          break;\n\n        default: // code block\n\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddAdminModal, [{\n    key: \"_saveUser\",\n    value: function _saveUser() {\n      var _this2 = this;\n\n      console.log(\"save user\", this.state.adminUser);\n      this.setState({\n        loading: true\n      });\n      var data = {\n        name: {\n          first: this.state.adminUser.name.split(\" \")[0],\n          last: this.state.adminUser.name.split(\" \")[1]\n        },\n        email: this.state.adminUser.email,\n        phone: \"(\" + this.state.adminUser.countryCode + \")\" + this.state.adminUser.phone\n      };\n      createAdmin(data).then(function (response) {\n        console.log(response);\n\n        _this2.setState({\n          loading: false\n        });\n\n        ToastsStore.success(\"Admin user added Successfully.\", 3000);\n\n        _this2.props.reloadAdminList();\n\n        _this2._closeModal();\n      }, function (error) {\n        console.log(error); // ToastsStore.error(error.reason, 3000);\n\n        showToast(error.reason && error.reason.length ? error.reason : \"Server error. Try again after sometime.\", \"error\");\n\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"_validateForm\",\n\n    /**\n     * To Validate the form and show the error messages\n     */\n    value: function _validateForm() {\n      var _this$state3 = this.state,\n          adminUser = _this$state3.adminUser,\n          errors = _this$state3.errors,\n          isDirty = _this$state3.isDirty; // console.log(adminUser, isDirty);\n\n      Object.keys(adminUser).forEach(function (each) {\n        if (each === \"email\" && isDirty.email) {\n          if (!adminUser.email.trim().length) {\n            errors.email = \"Email is Required\";\n          } else if (adminUser.email.trim().length && !new RegExp(\"^[a-zA-Z0-9]{1}[a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,3}$\").test(adminUser.email)) {\n            errors.email = \"Please enter valid Email\";\n          } else {\n            delete errors[each];\n            isDirty.email = false;\n          }\n        } else if (each === \"name\" && isDirty.name) {\n          if (!adminUser.name.trim().length) {\n            // console.log(admin.password);\n            errors[each] = \"Name is Required\";\n          } else {\n            delete errors[each];\n            isDirty.name = false;\n          }\n        } else if (each === \"phone\" && isDirty.phone) {\n          if (!adminUser.phone.trim().length) {\n            // console.log(admin.password);\n            errors[each] = \"Phone is Required\";\n          } else if (!config.regexConfig.phone.test(String(adminUser.phone).toLowerCase())) {\n            errors[each] = \"Enter valid phone number\";\n          } else {\n            delete errors[each];\n            isDirty.phone = false;\n          }\n        }\n      });\n      console.log(errors);\n      this.setState({\n        errors: errors\n      });\n      return Object.keys(errors).length ? errors : null;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(previousProps, previousState) {\n      // console.log('previousProps :', previousProps, this.props);\n      if (this.props.data && previousProps.isOpen !== this.props.isOpen) {\n        console.log(\"object :\", this.props.data);\n\n        if (this.props.type !== \"add\" && this.props.data) {\n          this.setState({\n            adminUser: this.props.data\n          });\n        } else if (this.props.type === \"add\") {\n          console.log(\"here in add mode :\");\n\n          this._resetForm();\n        }\n      } else if (!this.props.data && previousProps.isOpen !== this.props.isOpen) {\n        this._resetForm();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state4 = this.state,\n          adminUser = _this$state4.adminUser,\n          loading = _this$state4.loading;\n      return /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.props.isOpen,\n        toggle: function toggle() {\n          return _this3._closeModal();\n        },\n        className: \"modal-dialog-centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this._handleOnSubmit,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this3._closeModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }\n      }, this._makeModalHeader()), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 19\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Enter\",\n        name: \"name\",\n        value: adminUser.name,\n        onChange: this._handleOnChange,\n        className: this.state.errors && this.state.errors.name ? \"validation-error\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 19\n        }\n      }), this.state.errors && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"validation-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }\n      }, this.state.errors.name)), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 19\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"email\",\n        id: \"email\",\n        placeholder: \"Enter\",\n        name: \"email\",\n        value: adminUser.email,\n        onChange: this._handleOnChange,\n        className: this.state.errors && this.state.errors.email ? \"validation-error\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 19\n        }\n      }), this.state.errors && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"validation-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }\n      }, this.state.errors.email)), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"phone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 19\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"selectCountryCode\",\n        id: \"selectCountryCode\",\n        onChange: function onChange(e) {\n          return _this3._updateCountryCode(e.target.value);\n        },\n        value: adminUser.countryCode,\n        style: {\n          maxWidth: \"105px\",\n          padding: \"4px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }\n      }, countryCodes.map(function (countryCode, countryIndex) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: countryIndex,\n          value: countryCode.dial_code,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }\n        }, countryCode.code, \" (\", countryCode.dial_code, \")\");\n      })), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"phone\",\n        placeholder: \"Enter\",\n        name: \"phone\",\n        value: adminUser.phone,\n        onChange: this._handleOnChange,\n        className: this.state.errors && this.state.errors.phone ? \"validation-error\" : \"\",\n        style: {\n          maxWidth: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }\n      })), this.state.errors && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"validation-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }\n      }, this.state.errors.phone)), this.props.type !== \"add\" ? /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 23\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        id: \"status\",\n        placeholder: \"Enter\",\n        name: \"status\",\n        value: adminUser.status,\n        onChange: this._handleOnChange,\n        className: this.state.errors && this.state.errors.status ? \"validation-error\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 25\n        }\n      }, \"Active\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Inactive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 25\n        }\n      }, \"Inactive\")), this.state.errors && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"validation-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 25\n        }\n      }, this.state.errors.status))) : null))), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"dark\",\n        outline: true,\n        type: \"button\",\n        className: \"btn-pill\",\n        onClick: function onClick() {\n          return _this3._closeModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }\n      }, \"Cancel\"), this.props.type == \"add\" ? /*#__PURE__*/React.createElement(Button, {\n        className: \"BtnPurple\",\n        type: \"submit\",\n        disabled: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 15\n        }\n      }, loading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-spin mr5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 21\n        }\n      }), \"\\xA0\") : null, \"Add User\") : /*#__PURE__*/React.createElement(Button, {\n        className: \"BtnPurple\",\n        type: \"submit\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 15\n        }\n      }, loading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-spin mr5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }\n      }), \"\\xA0\") : null, \"Edit User\"))));\n    }\n  }]);\n\n  return AddAdminModal;\n}(Component);\n\nexport default AddAdminModal;","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/add-admin-modal.jsx"],"names":["React","Component","Modal","ModalBody","ModalFooter","ModalHeader","Button","Row","Col","Input","Label","FormGroup","Form","createAdmin","ToastsStore","showToast","countryCodes","config","AddAdminModal","state","adminUser","name","email","phone","countryCode","type","status","errors","isDirty","loading","_closeModal","setState","console","log","props","toggle","_handleOnChange","currentTarget","value","_validateForm","_handleOnSubmit","event","preventDefault","_saveUser","_updateCountryCode","_resetForm","_makeModalHeader","data","first","split","last","then","response","success","reloadAdminList","error","reason","length","Object","keys","forEach","each","trim","RegExp","test","regexConfig","String","toLowerCase","previousProps","previousState","isOpen","display","e","target","maxWidth","padding","map","countryIndex","dial_code","code"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  // Table,\n  Button,\n  // Badge,\n  // Container,\n  Row,\n  Col,\n  Input,\n  Label,\n  FormGroup,\n  Form,\n} from \"reactstrap\";\nimport { createAdmin } from \"../http/http-calls\";\n// import config from '../config/index';\nimport { ToastsStore } from \"react-toasts\";\nimport { showToast } from \"../helper-methods\";\nimport { countryCodes } from \"../config/country-codes\";\nimport config from \"../config\";\n\nclass AddAdminModal extends Component {\n  state = {\n    adminUser: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      countryCode: \"+1\",\n      type: \"\",\n      status: \"\",\n    },\n    errors: {},\n    isDirty: {\n      name: false,\n      email: false,\n      phone: false,\n    },\n    loading: false,\n  };\n\n  _closeModal = () => {\n    let { adminUser, errors, isDirty } = this.state;\n    adminUser = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      countryCode: \"+1\",\n    };\n    isDirty = {\n      name: false,\n      email: false,\n      phone: false,\n    };\n    errors = {};\n    this.setState({ adminUser, errors, isDirty }, () => {\n      console.log(adminUser, errors);\n      this.props.toggle();\n    });\n  };\n\n  _saveUser() {\n    console.log(\"save user\", this.state.adminUser);\n    this.setState({ loading: true });\n    let data = {\n      name: {\n        first: this.state.adminUser.name.split(\" \")[0],\n        last: this.state.adminUser.name.split(\" \")[1],\n      },\n      email: this.state.adminUser.email,\n      phone:\n        \"(\" +\n        this.state.adminUser.countryCode +\n        \")\" +\n        this.state.adminUser.phone,\n    };\n    createAdmin(data).then(\n      (response) => {\n        console.log(response);\n        this.setState({ loading: false });\n        ToastsStore.success(\"Admin user added Successfully.\", 3000);\n        this.props.reloadAdminList();\n        this._closeModal();\n      },\n      (error) => {\n        console.log(error);\n        // ToastsStore.error(error.reason, 3000);\n        showToast(\n          error.reason && error.reason.length\n            ? error.reason\n            : \"Server error. Try again after sometime.\",\n          \"error\"\n        );\n        this.setState({ loading: false });\n      }\n    );\n  }\n\n  _handleOnChange = ({ currentTarget }) => {\n    const { adminUser, isDirty } = this.state;\n    adminUser[currentTarget.name] = currentTarget.value;\n    isDirty[currentTarget.name] = true;\n    this.setState({ adminUser });\n    this._validateForm();\n  };\n\n  /**\n   * To handle submit of the form and validate it\n   */\n  _handleOnSubmit = (event) => {\n    event.preventDefault();\n    const { isDirty } = this.state;\n    isDirty.name = true;\n    isDirty.email = true;\n    isDirty.phone = true;\n    this.setState({ isDirty });\n    console.log(this.state.isDirty);\n    let errors = this._validateForm();\n    console.log(errors);\n    // this.setState({errors});\n    if (!errors) {\n      console.log(\"Make API call\");\n      this._saveUser();\n    }\n  };\n\n  /**\n   * To Validate the form and show the error messages\n   */\n  _validateForm() {\n    const { adminUser, errors, isDirty } = this.state;\n    // console.log(adminUser, isDirty);\n    Object.keys(adminUser).forEach((each) => {\n      if (each === \"email\" && isDirty.email) {\n        if (!adminUser.email.trim().length) {\n          errors.email = \"Email is Required\";\n        } else if (\n          adminUser.email.trim().length &&\n          !new RegExp(\n            \"^[a-zA-Z0-9]{1}[a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,3}$\"\n          ).test(adminUser.email)\n        ) {\n          errors.email = \"Please enter valid Email\";\n        } else {\n          delete errors[each];\n          isDirty.email = false;\n        }\n      } else if (each === \"name\" && isDirty.name) {\n        if (!adminUser.name.trim().length) {\n          // console.log(admin.password);\n          errors[each] = \"Name is Required\";\n        } else {\n          delete errors[each];\n          isDirty.name = false;\n        }\n      } else if (each === \"phone\" && isDirty.phone) {\n        if (!adminUser.phone.trim().length) {\n          // console.log(admin.password);\n          errors[each] = \"Phone is Required\";\n        } else if (\n          !config.regexConfig.phone.test(String(adminUser.phone).toLowerCase())\n        ) {\n          errors[each] = \"Enter valid phone number\";\n        } else {\n          delete errors[each];\n          isDirty.phone = false;\n        }\n      }\n    });\n    console.log(errors);\n    this.setState({ errors });\n    return Object.keys(errors).length ? errors : null;\n  }\n\n  _updateCountryCode = (value) => {\n    const { adminUser } = this.state;\n    adminUser[\"countryCode\"] = value;\n    this.setState({ adminUser });\n  };\n\n  componentDidUpdate(previousProps, previousState) {\n    // console.log('previousProps :', previousProps, this.props);\n    if (this.props.data && previousProps.isOpen !== this.props.isOpen) {\n      console.log(\"object :\", this.props.data);\n      if (this.props.type !== \"add\" && this.props.data) {\n        this.setState({ adminUser: this.props.data });\n      } else if (this.props.type === \"add\") {\n        console.log(\"here in add mode :\");\n\n        this._resetForm();\n      }\n    } else if (!this.props.data && previousProps.isOpen !== this.props.isOpen) {\n      this._resetForm();\n    }\n  }\n  _resetForm = () => {\n    let adminUser = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      countryCode: \"+1\",\n      type: \"\",\n      status: \"\",\n    };\n    this.setState({ adminUser });\n  };\n  _makeModalHeader = () => {\n    switch (this.props.type) {\n      case \"add\":\n        return \"Add Admin\";\n      case \"edit\":\n        return \"Edit Admin\";\n\n        break;\n      default:\n      // code block\n    }\n  };\n  render() {\n    let { adminUser, loading } = this.state;\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n        toggle={() => this._closeModal()}\n        className=\"modal-dialog-centered\"\n      >\n        <Form onSubmit={this._handleOnSubmit} noValidate>\n          <ModalHeader toggle={() => this._closeModal()}>\n            {/* Add Admin User */}\n            {this._makeModalHeader()}\n          </ModalHeader>\n          <ModalBody>\n            <Row>\n              <Col xs=\"12\">\n                <FormGroup className=\"px-3\">\n                  <Label htmlFor=\"name\">Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"name\"\n                    placeholder=\"Enter\"\n                    name=\"name\"\n                    value={adminUser.name}\n                    onChange={this._handleOnChange}\n                    className={\n                      this.state.errors && this.state.errors.name\n                        ? \"validation-error\"\n                        : \"\"\n                    }\n                  />\n                  {this.state.errors && (\n                    <div className=\"validation-error\">\n                      {this.state.errors.name}\n                    </div>\n                  )}\n                </FormGroup>\n                <FormGroup className=\"px-3\">\n                  <Label htmlFor=\"email\">Email</Label>\n                  <Input\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"Enter\"\n                    name=\"email\"\n                    value={adminUser.email}\n                    onChange={this._handleOnChange}\n                    className={\n                      this.state.errors && this.state.errors.email\n                        ? \"validation-error\"\n                        : \"\"\n                    }\n                  />\n                  {this.state.errors && (\n                    <div className=\"validation-error\">\n                      {this.state.errors.email}\n                    </div>\n                  )}\n                </FormGroup>\n                <FormGroup className=\"px-3\">\n                  <Label htmlFor=\"phone\">Phone</Label>\n                  <div style={{ display: \"flex\" }}>\n                    <Input\n                      type=\"select\"\n                      name=\"selectCountryCode\"\n                      id=\"selectCountryCode\"\n                      onChange={(e) => this._updateCountryCode(e.target.value)}\n                      value={adminUser.countryCode}\n                      style={{ maxWidth: \"105px\", padding: \"4px\" }}\n                    >\n                      {countryCodes.map((countryCode, countryIndex) => (\n                        <option\n                          key={countryIndex}\n                          value={countryCode.dial_code}\n                        >\n                          {countryCode.code} ({countryCode.dial_code})\n                        </option>\n                      ))}\n                    </Input>\n                    <Input\n                      type=\"text\"\n                      id=\"phone\"\n                      placeholder=\"Enter\"\n                      name=\"phone\"\n                      value={adminUser.phone}\n                      onChange={this._handleOnChange}\n                      className={\n                        this.state.errors && this.state.errors.phone\n                          ? \"validation-error\"\n                          : \"\"\n                      }\n                      style={{ maxWidth: \"100%\" }}\n                    />\n                  </div>\n                  {this.state.errors && (\n                    <div className=\"validation-error\">\n                      {this.state.errors.phone}\n                    </div>\n                  )}\n                </FormGroup>\n                {this.props.type !== \"add\" ? (\n                  <>\n                    {\" \"}\n                    {/* <FormGroup className=\"px-3\">\n                      <Label htmlFor=\"type\">Type</Label>\n                      <Input\n                        type=\"select\"\n                        id=\"type\"\n                        placeholder=\"Enter\"\n                        name=\"type\"\n                        value={adminUser.type}\n                        onChange={this._handleOnChange}\n                        className={\n                          this.state.errors && this.state.errors.type\n                            ? \"validation-error\"\n                            : \"\"\n                        }\n                      >\n                        <option>Type</option>\n                        <option value=\"Admin\">Admin</option>\n                        <option value=\"Member\">Member</option>\n                      </Input>\n                      {this.state.errors && (\n                        <div className=\"validation-error\">\n                          {this.state.errors.type}\n                        </div>\n                      )}\n                    </FormGroup> */}\n                    <FormGroup className=\"px-3\">\n                      <Label htmlFor=\"status\">Status</Label>\n                      <Input\n                        type=\"select\"\n                        id=\"status\"\n                        placeholder=\"Enter\"\n                        name=\"status\"\n                        value={adminUser.status}\n                        onChange={this._handleOnChange}\n                        className={\n                          this.state.errors && this.state.errors.status\n                            ? \"validation-error\"\n                            : \"\"\n                        }\n                      >\n                        <option>Status</option>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                      </Input>\n                      {this.state.errors && (\n                        <div className=\"validation-error\">\n                          {this.state.errors.status}\n                        </div>\n                      )}\n                    </FormGroup>\n                  </>\n                ) : null}\n              </Col>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"dark\"\n              outline\n              type=\"button\"\n              className=\"btn-pill\"\n              onClick={() => this._closeModal()}\n            >\n              Cancel\n            </Button>\n            {this.props.type == \"add\" ? (\n              <Button className=\"BtnPurple\" type=\"submit\" disabled={loading}>\n                {loading ? (\n                  <>\n                    <i className=\"fa fa-spinner fa-spin mr5\" />\n                    &nbsp;\n                  </>\n                ) : null}\n                Add User\n              </Button>\n            ) : (\n              <Button className=\"BtnPurple\" type=\"submit\" disabled={true}>\n                {loading ? (\n                  <>\n                    <i className=\"fa fa-spinner fa-spin mr5\" />\n                    &nbsp;\n                  </>\n                ) : null}\n                Edit User\n              </Button>\n            )}\n          </ModalFooter>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default AddAdminModal;\n"]},"metadata":{},"sourceType":"module"}