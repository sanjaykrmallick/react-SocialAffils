{"ast":null,"code":"import _classCallCheck from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/poll-option-component.jsx\";\nimport React, { Component } from \"react\";\nimport { Label, FormGroup, Input, Progress, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\n\nvar PollOption = /*#__PURE__*/function (_Component) {\n  _inherits(PollOption, _Component);\n\n  var _super = _createSuper(PollOption);\n\n  function PollOption() {\n    var _this;\n\n    _classCallCheck(this, PollOption);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isPopOver: false,\n      answerChoosenBy: []\n    };\n\n    _this._getPollOptionDetails = function () {\n      var _this$props = _this.props,\n          feed = _this$props.feed,\n          option = _this$props.option;\n\n      if (feed.hasOwnProperty(\"_opinions\") && feed._opinions.length && option.count > 0) {\n        var fans = [];\n        fans = feed._opinions.filter(function (eachOpinion) {\n          return eachOpinion.option === option._id;\n        });\n        return fans;\n      }\n\n      return [];\n    };\n\n    _this._getPercentageValue = function (feed, option) {\n      if (feed.hasOwnProperty(\"_opinions\") && feed._opinions.length && option.count > 0) {\n        return option.count * 100 / feed._opinions.length;\n      }\n\n      return 0;\n    };\n\n    _this._togglePopOver = function () {\n      var isPopOver = _this.state.isPopOver;\n      isPopOver = !isPopOver;\n\n      _this.setState({\n        isPopOver: isPopOver\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PollOption, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var answerChoosenBy = this._getPollOptionDetails();\n\n      this.setState({\n        answerChoosenBy: answerChoosenBy\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          feed = _this$props2.feed,\n          option = _this$props2.option,\n          index = _this$props2.index;\n      var _this$state = this.state,\n          isPopOver = _this$state.isPopOver,\n          answerChoosenBy = _this$state.answerChoosenBy;\n      return /*#__PURE__*/React.createElement(FormGroup, {\n        check: true,\n        className: \"radio mb-1\",\n        id: \"Popover\" + option._id + index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        className: \"form-check-input\",\n        disabled: true,\n        type: \"radio\",\n        name: \"radios\",\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        check: true,\n        className: \"form-check-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, option.text), /*#__PURE__*/React.createElement(Progress, {\n        value: this._getPercentageValue(feed, option),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, this._getPercentageValue(feed, option), \"%\"), /*#__PURE__*/React.createElement(Popover, {\n        placement: \"bottom\",\n        isOpen: isPopOver,\n        target: \"Popover\" + option._id + index,\n        toggle: this._togglePopOver,\n        onClick: this._togglePopOver,\n        trigger: \"legacy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(PopoverHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, \"Answer choosen by\"), /*#__PURE__*/React.createElement(PopoverBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, answerChoosenBy.length ? answerChoosenBy.map(function (fan, index) {\n        return /*#__PURE__*/React.createElement(Label, {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 12\n          }\n        }, fan._from.name.full);\n      }) : /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, \"No one selected yet\"))));\n    }\n  }]);\n\n  return PollOption;\n}(Component);\n\nexport default PollOption;","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/poll-option-component.jsx"],"names":["React","Component","Label","FormGroup","Input","Progress","Popover","PopoverHeader","PopoverBody","PollOption","state","isPopOver","answerChoosenBy","_getPollOptionDetails","props","feed","option","hasOwnProperty","_opinions","length","count","fans","filter","eachOpinion","_id","_getPercentageValue","_togglePopOver","setState","index","text","map","fan","_from","name","full"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Label,\n  FormGroup,\n  Input,\n  Progress,\n  Popover,\n  PopoverHeader,\n  PopoverBody\n} from \"reactstrap\";\n\nclass PollOption extends Component {\n  state = {\n    isPopOver: false,\n    answerChoosenBy: []\n  };\n\n  componentDidMount() {\n    const answerChoosenBy = this._getPollOptionDetails();\n    this.setState({ answerChoosenBy });\n  }\n\n  _getPollOptionDetails = () => {\n    const { feed, option } = this.props;\n    if (\n      feed.hasOwnProperty(\"_opinions\") &&\n      feed._opinions.length &&\n      option.count > 0\n    ) {\n      let fans = [];\n      fans = feed._opinions.filter(eachOpinion => {\n        return eachOpinion.option === option._id;\n      });\n      return fans;\n    }\n    return [];\n  };\n\n  _getPercentageValue = (feed, option) => {\n    if (\n      feed.hasOwnProperty(\"_opinions\") &&\n      feed._opinions.length &&\n      option.count > 0\n    ) {\n      return (option.count * 100) / feed._opinions.length;\n    }\n    return 0;\n  };\n\n  _togglePopOver = () => {\n    let { isPopOver } = this.state;\n    isPopOver = !isPopOver;\n\n    this.setState({ isPopOver });\n  };\n\n  render() {\n    const { feed, option, index } = this.props;\n    const { isPopOver, answerChoosenBy } = this.state;\n    return (\n      <FormGroup\n        check\n        className=\"radio mb-1\"\n        id={\"Popover\" + option._id + index}\n      >\n        <Input\n          className=\"form-check-input\"\n          disabled\n          type=\"radio\"\n          name=\"radios\"\n          value=\"\"\n        />\n        <Label check className=\"form-check-label\">\n          {option.text}\n        </Label>\n        <Progress value={this._getPercentageValue(feed, option)}>\n          {this._getPercentageValue(feed, option)}%\n        </Progress>\n        <Popover\n          placement=\"bottom\"\n          isOpen={isPopOver}\n          target={\"Popover\" + option._id + index}\n          toggle={this._togglePopOver}\n          onClick={this._togglePopOver}\n          trigger=\"legacy\"\n        >\n          <PopoverHeader>Answer choosen by</PopoverHeader>\n          <PopoverBody>\n            {answerChoosenBy.length ? answerChoosenBy.map((fan, index) => \n           <Label key={index}>{fan._from.name.full}</Label>\n           ): <Label>No one selected yet</Label>}\n          </PopoverBody>\n        </Popover>\n      </FormGroup>\n    );\n  }\n}\n\nexport default PollOption;\n"]},"metadata":{},"sourceType":"module"}