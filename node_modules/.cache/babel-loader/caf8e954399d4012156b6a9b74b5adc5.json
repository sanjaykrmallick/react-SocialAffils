{"ast":null,"code":"import _classCallCheck from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/custom-data-table.jsx\";\nimport React, { Component } from \"react\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport \"../assets/css/Table.css\";\nimport { cloneDeep, mapValues, isEqual } from \"lodash\";\n\nvar CustomDataTable = /*#__PURE__*/function (_Component) {\n  _inherits(CustomDataTable, _Component);\n\n  var _super = _createSuper(CustomDataTable);\n\n  function CustomDataTable() {\n    var _this;\n\n    _classCallCheck(this, CustomDataTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      tableData: [],\n      showTableLoading: false,\n      options: {\n        page: 1,\n        // which page you want to show as default\n        sizePerPageList: [{\n          text: \"10\",\n          value: 10\n        }, {\n          text: \"20\",\n          value: 20\n        }, {\n          text: \"50\",\n          value: 50\n        }],\n        // you can change the dropdown list for size per page\n        sizePerPage: 10,\n        // which size per page you want to locate as default\n        pageStartIndex: 1,\n        // where to start counting the pages\n        paginationSize: 3,\n        // the pagination bar size.\n        prePage: \"Prev\",\n        // Previous page button text\n        nextPage: \"Next\",\n        // Next page button text\n        firstPage: \"First\",\n        // First page button text\n        lastPage: \"Last\",\n        // Last page button text\n        paginationShowsTotal: _this.renderShowsTotal,\n        // Accept bool or function\n        // paginationPosition: 'top'  // default is bottom, top and both is all available\n        hideSizePerPage: false,\n        // //You can hide the dropdown for sizePerPage\n        // alwaysShowAllBtns: true // Always show next and previous button\n        withFirstAndLast: true,\n        //> Hide the going to First and Last page button,\n        onPageChange: function onPageChange(page, sizePerPage) {\n          return _this.onPageChange(page, sizePerPage);\n        },\n        onSortChange: function onSortChange(sortName, sortOrder) {\n          return _this.onSortChange(sortName, sortOrder);\n        }\n      },\n      selectedRows: [],\n      selectRowProp: {\n        mode: \"checkbox\",\n        clickToSelect: false,\n        bgColor: \"rgb(238, 193, 213)\",\n        onSelect: function onSelect(row, isSelected) {\n          return _this.onRowSelect(row, isSelected);\n        },\n        onSelectAll: function onSelectAll(isSelected, currentDisplayAndSelectedData) {\n          return _this.onSelectAll(isSelected, currentDisplayAndSelectedData);\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(CustomDataTable, [{\n    key: \"onRowSelect\",\n    value: function onRowSelect(row, isSelected) {\n      // console.log('here=> :', row, isSelected);\n      var selectedRows = this.state.selectedRows;\n\n      if (isSelected) {\n        var item = selectedRows.find(function (each) {\n          return each === row.id;\n        });\n\n        if (!item) {\n          selectedRows.push(row.id);\n        } else {\n          selectedRows.splice(selectedRows.indexOf(row.id), 1);\n        }\n\n        console.log('The selection', row, isSelected, selectedRows);\n      } else {\n        selectedRows.splice(selectedRows.indexOf(row.id), 1); // console.log('The selection', row, isSelected, selectedRows);\n      }\n\n      this.setState({\n        selectedRows: selectedRows\n      });\n\n      if (this.props.setSelectedRows) {\n        this.props.setSelectedRows(selectedRows);\n      }\n    }\n  }, {\n    key: \"onSelectAll\",\n    value: function onSelectAll(isSelected, currentDisplayAndSelectedData) {\n      var selectedRows = this.state.selectedRows;\n\n      if (isSelected) {\n        selectedRows = currentDisplayAndSelectedData.map(function (each) {\n          return each.id;\n        });\n      } else {\n        selectedRows = [];\n      }\n\n      this.setState({\n        selectedRows: selectedRows\n      });\n\n      if (this.props.setSelectedRows) {\n        this.props.setSelectedRows(selectedRows);\n      }\n    }\n  }, {\n    key: \"renderShowsTotal\",\n    value: function renderShowsTotal(start, to, total) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: '#FF7300',\n          float: 'left',\n          marginRight: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, \"From \", start, \" to \", to, \", Out of \", total);\n    }\n  }, {\n    key: \"onSortChange\",\n    value: function onSortChange(sortName, sortOrder) {\n      console.log('sizePerPage :', sortName, sortOrder);\n      var options = this.state.options;\n      options.sortName = sortName;\n      options.sortOrder = sortOrder;\n      this.setState({\n        options: options\n      });\n      this.props.onSortChange(sortName, sortOrder);\n    }\n  }, {\n    key: \"onPageChange\",\n    value: function onPageChange(page, sizePerPage) {\n      console.log('page, sizePerPage :', page, sizePerPage); // const { options } = this.state;\n      // options.page = page;\n      // options.sizePerPage = sizePerPage;\n      // this.setState({ options });\n\n      this.props.onPaginate(page, sizePerPage); // setTimeout(()=>{\n      //   this.setState({ showTableLoading: true });\n      // },100)\n      // alert(`page: ${page}, sizePerPage: ${sizePerPage}`);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('componentDidMount.tableData :', this.state.tableData);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log('object :', this.props);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(BootstrapTable, {\n        data: this.props.tableData,\n        remote: true,\n        fetchInfo: {\n          dataTotalSize: this.props.totalCount\n        },\n        pagination: true,\n        options: this.state.options,\n        selectRow: this.props.rowSelection ? this.state.selectRowProp : {},\n        bodyContainerClass: \"adminTable\",\n        version: \"4\",\n        responsive: true,\n        hover: true,\n        ref: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, this.props.headerKeys.map(function (header) {\n        return /*#__PURE__*/React.createElement(TableHeaderColumn, {\n          dataField: header.id,\n          key: header.id,\n          isKey: header.id === \"id\",\n          dataAlign: \"left\",\n          dataSort: header.noSort ? false : true,\n          hidden: header.id === 'id',\n          dataFormat: function dataFormat(cell, row) {\n            return _this2.props.dataFormat(cell, row, header.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }\n        }, header.label);\n      })), this.props.showTableLoading && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-spin \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return CustomDataTable;\n}(Component);\n\nexport default CustomDataTable;","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/custom-data-table.jsx"],"names":["React","Component","BootstrapTable","TableHeaderColumn","cloneDeep","mapValues","isEqual","CustomDataTable","state","tableData","showTableLoading","options","page","sizePerPageList","text","value","sizePerPage","pageStartIndex","paginationSize","prePage","nextPage","firstPage","lastPage","paginationShowsTotal","renderShowsTotal","hideSizePerPage","withFirstAndLast","onPageChange","onSortChange","sortName","sortOrder","selectedRows","selectRowProp","mode","clickToSelect","bgColor","onSelect","row","isSelected","onRowSelect","onSelectAll","currentDisplayAndSelectedData","item","find","each","id","push","splice","indexOf","console","log","setState","props","setSelectedRows","map","start","to","total","color","float","marginRight","onPaginate","position","dataTotalSize","totalCount","rowSelection","headerKeys","header","noSort","cell","dataFormat","label"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport \"../assets/css/Table.css\";\nimport { \n  cloneDeep,\n   mapValues, isEqual } from \"lodash\";\nclass CustomDataTable extends Component {\n  \n  state = {\n    tableData:[],\n    showTableLoading: false,\n    options: {\n      page: 1, // which page you want to show as default\n      sizePerPageList: [\n        {\n          text: \"10\",\n          value: 10\n        },\n        {\n          text: \"20\",\n          value: 20\n        },\n        {\n          text: \"50\",\n          value: 50\n        }\n      ], // you can change the dropdown list for size per page\n      sizePerPage: 10, // which size per page you want to locate as default\n      pageStartIndex: 1, // where to start counting the pages\n      paginationSize: 3, // the pagination bar size.\n      prePage: \"Prev\", // Previous page button text\n      nextPage: \"Next\", // Next page button text\n      firstPage: \"First\", // First page button text\n      lastPage: \"Last\", // Last page button text\n      paginationShowsTotal: this.renderShowsTotal,  // Accept bool or function\n      // paginationPosition: 'top'  // default is bottom, top and both is all available\n      hideSizePerPage: false, // //You can hide the dropdown for sizePerPage\n      // alwaysShowAllBtns: true // Always show next and previous button\n      withFirstAndLast: true, //> Hide the going to First and Last page button,\n      onPageChange: (page, sizePerPage)=>this.onPageChange(page, sizePerPage),\n      onSortChange: (sortName, sortOrder)=>this.onSortChange(sortName, sortOrder)\n    },\n    selectedRows:[],\n    selectRowProp: {\n      mode: \"checkbox\",\n      clickToSelect: false,\n      bgColor: \"rgb(238, 193, 213)\" ,\n      onSelect: (row, isSelected)=>this.onRowSelect(row, isSelected),\n      onSelectAll: (isSelected, currentDisplayAndSelectedData)=>this.onSelectAll(isSelected, currentDisplayAndSelectedData)\n    }\n  };\n\n  onRowSelect(row, isSelected) {\n    // console.log('here=> :', row, isSelected);\n    const { selectedRows } = this.state;    \n    if (isSelected) {\n      let item = selectedRows.find((each)=>{return each===row.id});\n      if(!item){\n        selectedRows.push(row.id);\n      } else{\n        selectedRows.splice(selectedRows.indexOf(row.id),1);\n      }\n      console.log('The selection', row, isSelected, selectedRows);\n    } else{\n      selectedRows.splice(selectedRows.indexOf(row.id),1);\n      // console.log('The selection', row, isSelected, selectedRows);\n    }\n    this.setState({selectedRows});\n    if(this.props.setSelectedRows){\n      this.props.setSelectedRows(selectedRows)\n    }\n  }\n\n  onSelectAll(isSelected, currentDisplayAndSelectedData){\n    let { selectedRows } = this.state;\n    if(isSelected){\n      selectedRows = currentDisplayAndSelectedData.map((each)=>{\n        return each.id;\n      })\n    }else {\n      selectedRows = [];\n    }    \n    this.setState({selectedRows});\n    if(this.props.setSelectedRows){\n      this.props.setSelectedRows(selectedRows)\n    }   \n  }\n\n  renderShowsTotal(start, to, total) {\n    return (\n      <p style={ { color: '#FF7300',float:'left', marginRight:20 } }>\n        From { start } to { to }, Out of { total }\n      </p>\n    );\n  }\n\n  onSortChange(sortName, sortOrder) {\n    console.log('sizePerPage :', sortName, sortOrder);\n    const { options } = this.state;\n    options.sortName = sortName;\n    options.sortOrder = sortOrder;\n    this.setState({ options });\n    this.props.onSortChange(sortName, sortOrder);\n  }\n\n  onPageChange(page, sizePerPage) {\n    console.log('page, sizePerPage :', page, sizePerPage);\n    // const { options } = this.state;\n    // options.page = page;\n    // options.sizePerPage = sizePerPage;\n    // this.setState({ options });\n    this.props.onPaginate(page, sizePerPage);\n    // setTimeout(()=>{\n    //   this.setState({ showTableLoading: true });\n    // },100)\n    // alert(`page: ${page}, sizePerPage: ${sizePerPage}`);\n  }\n\n  componentDidMount(){\n    console.log('componentDidMount.tableData :', this.state.tableData);\n  }\n\n  \n\n  render() {\n    // console.log('object :', this.props);\n    return (\n      <div style={{position:'relative'}}>\n        <BootstrapTable\n          data={this.props.tableData}\n          remote={ true }\n          fetchInfo={ { dataTotalSize: this.props.totalCount } }\n          pagination\n          options={this.state.options}\n          selectRow={this.props.rowSelection ? this.state.selectRowProp : {}}\n          bodyContainerClass='adminTable'\n          version=\"4\"\n          responsive\n          hover={true}\n          ref='table'\n        >\n          {this.props.headerKeys.map(header => (\n            <TableHeaderColumn\n              dataField={header.id}\n              key={header.id}\n              isKey={header.id === \"id\"}\n              dataAlign=\"left\"\n              dataSort={ header.noSort ? false : true }\n              hidden={header.id === 'id'}\n              dataFormat={ (cell, row)=>this.props.dataFormat(cell, row, header.id) }\n            >\n              {header.label}\n            </TableHeaderColumn>\n          ))}\n        </BootstrapTable>\n        {this.props.showTableLoading && <div className=\"table-overlay\">\n          <div>\n            <i className=\"fa fa-spinner fa-spin \"></i>\n          </div>\n        </div>}\n      </div>\n    );\n  }\n}\n\nexport default CustomDataTable;\n"]},"metadata":{},"sourceType":"module"}