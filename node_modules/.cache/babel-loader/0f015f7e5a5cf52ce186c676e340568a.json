{"ast":null,"code":"import _classCallCheck from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/pages/Subscribers/order.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CustomDateRangePicker from \"../../components/date-range-picker\";\nimport { Container, Row, Col // Table,\n, Button, Input // FormGroup,\n// Label,\n// Modal,\n// ModalBody,\n// ModalFooter,\n// ModalHeader\n} from \"reactstrap\";\nimport CustomTable from \"../../components/custom-table\";\nimport { getAllSubscribers, changeUserStatus, sendMessage, getAllOrders, editSeller } from \"../../http/http-calls\";\nimport config from \"../../config\";\nimport { ToastsStore } from \"react-toasts\";\nimport SubscriptionListModal from \"../../components/subscription-list-modal\";\nimport OrderDetailModal from \"../../components/order-detail-modal\";\nimport TipsModal from \"../../components/tips-list-modal\";\nimport PpvListModal from \"../../components/ppv-list-modal\";\nimport CopyclipBoard from \"../../components/copy-clipboard\";\nimport { format } from \"date-fns\";\nimport TextEditor from \"../../components/text-editor\";\nimport { showToast, deepClone } from \"../../helper-methods\";\nimport CustomDataTable from \"../../components/custom-data-table\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\n\nvar Subscribers = /*#__PURE__*/function (_Component) {\n  _inherits(Subscribers, _Component);\n\n  var _super = _createSuper(Subscribers);\n\n  function Subscribers() {\n    var _this;\n\n    _classCallCheck(this, Subscribers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      modals: [false, false, false],\n      orderDetailModal: {\n        isOpen: false,\n        data: null\n      },\n      tipsModal: {\n        isOpen: false,\n        data: null\n      },\n      ppvModal: {\n        isOpen: false,\n        data: null\n      },\n      subscriberList: [{\n        orderid: 1234,\n        product: \"Mobile\",\n        quantity: 2,\n        amount: \"$20\",\n        buyer: \"rohan\",\n        seller: \"amazon\",\n        affiliate: \"shyam\",\n        status: \"pending\"\n      }],\n      subscriberListBackup: [],\n      orderList: [],\n      orderListBackup: [],\n      headerKeys: [{\n        id: \"id\",\n        label: \"id\"\n      }, {\n        id: \"orderId\",\n        label: \"Order Id\"\n      }, // { id: \"flag\", label: \"Flag\" },\n      {\n        id: \"product\",\n        label: \"Product\"\n      }, {\n        id: \"quantity\",\n        label: \"Quantity\"\n      }, {\n        id: \"amount\",\n        label: \"Amount\"\n      }, {\n        id: \"buyer\",\n        label: \"Buyer\"\n      }, {\n        id: \"seller\",\n        label: \"Seller\"\n      }, {\n        id: \"affiliate\",\n        label: \"Affiliate\"\n      }, {\n        id: \"status\",\n        label: \"Status\"\n      } // { id: \"action\", label: \"Action\", noSort: true }\n      ],\n      subscriptionCounts: config.subscriptionCounts,\n      spentCounts: config.productCount,\n      // filters: {\n      //   subscriptions: \"\",\n      //   status: \"\",\n      //   search: \"\",\n      //   spent: \"\",\n      // },\n      loading: {\n        loadingData: false,\n        changeStatusLoading: false,\n        sendingMessage: false\n      },\n      contact: {\n        via: \"email\",\n        message: \"\"\n      },\n      selectedSubscribers: [],\n      totalCount: 0,\n      subscriberFieldsKeyMap: {\n        name: \"name\",\n        email: \"email\",\n        phone: \"phone\",\n        subscriptions: \"spent\",\n        joinedAt: \"createdAt\",\n        tipAmount: \"tips\",\n        spent: \"spent\",\n        status: \"isActive\"\n      },\n      tableConfig: {\n        pageNumber: 1,\n        pageSize: 10,\n        sort: {\n          sortBy: \"createdAt\",\n          sortOrder: \"desc\"\n        },\n        filters: {}\n      },\n      filters: {\n        dateRange: {\n          startDate: null,\n          endDate: null,\n          focusedInput: null,\n          startDateId: \"startDate\",\n          endDateId: \"endDate\"\n        },\n        creator: \"\",\n        status: \"\",\n        search: \"\"\n      }\n    };\n\n    _this._formatDate = function (date) {\n      // console.log(\"TCL: Subscribers -> _formatDate -> date\", date);\n      return format(new Date(date), \"MMM d, yyyy\");\n    };\n\n    _this._onToggleSubscriptionModal = function (data) {\n      var _JSON$parse = JSON.parse(JSON.stringify(_this.state)),\n          orderDetailModal = _JSON$parse.orderDetailModal;\n\n      orderDetailModal.isOpen = !orderDetailModal.isOpen;\n      orderDetailModal.data = data;\n\n      _this.setState({\n        orderDetailModal: orderDetailModal\n      }, function () {\n        console.log(_this.state);\n      });\n    };\n\n    _this._onToggleTipsModal = function (data) {\n      var _JSON$parse2 = JSON.parse(JSON.stringify(_this.state)),\n          tipsModal = _JSON$parse2.tipsModal;\n\n      tipsModal.isOpen = !tipsModal.isOpen;\n      tipsModal.data = data;\n\n      _this.setState({\n        tipsModal: tipsModal\n      }, function () {\n        console.log(_this.state);\n      });\n    };\n\n    _this._onTogglePPVModal = function (data) {\n      var _JSON$parse3 = JSON.parse(JSON.stringify(_this.state)),\n          ppvModal = _JSON$parse3.ppvModal;\n\n      ppvModal.isOpen = !ppvModal.isOpen;\n      ppvModal.data = data;\n\n      _this.setState({\n        ppvModal: ppvModal\n      }, function () {\n        console.log(_this.state);\n      });\n    };\n\n    _this._manageLoading = function (key, value) {\n      var _this$state$loading = _this.state.loading,\n          loadingData = _this$state$loading.loadingData,\n          changeStatusLoading = _this$state$loading.changeStatusLoading,\n          sendingMessage = _this$state$loading.sendingMessage;\n\n      if (key === \"data\") {\n        loadingData = value;\n      } else if (key === \"change-status\") {\n        changeStatusLoading = value;\n      } else if (key === \"send-message\") {\n        sendingMessage = value;\n      }\n\n      _this.setState({\n        loading: {\n          loadingData: loadingData,\n          changeStatusLoading: changeStatusLoading,\n          sendingMessage: sendingMessage\n        }\n      });\n    };\n\n    _this._getAllOrders = function (data) {\n      var _deepClone = deepClone(_this.state),\n          orderList = _deepClone.orderList,\n          tableConfig = _deepClone.tableConfig;\n\n      if (!orderList.length) {\n        _this._manageLoading(\"data\", true);\n      }\n\n      getAllOrders(data).then(function (response) {\n        console.log(response);\n\n        _this._manageLoading(\"data\", false);\n\n        tableConfig.loading = false;\n\n        _this.setState({\n          tableConfig: tableConfig\n        });\n\n        var orderListResp = response.orders.map(function (each) {\n          return {\n            orderId: each.id,\n            product: each._product.category,\n            quantity: each.quantity,\n            amount: each._product.price,\n            buyer: each._buyer.name.last ? each._buyer.name.full : each._buyer.name.first,\n            seller: each._seller.name.last ? each._seller.name.full : each._seller.name.first,\n            affiliate: each._influencer.name.last ? each._influencer.name.full : each._influencer.name.first,\n            status: each.isActive ? \"Active\" : \"Inactive\"\n          };\n        });\n\n        _this.setState({\n          orderList: orderListResp,\n          orderListBackup: orderListResp,\n          totalCount: response.count\n        });\n      }, function (error) {\n        console.log(error);\n\n        _this._manageLoading(\"data\", false);\n\n        tableConfig.loading = false;\n\n        _this.setState({\n          tableConfig: tableConfig\n        }); // ToastsStore.error(error.reason, 3000);\n\n\n        showToast(error.reason && error.reason.length ? error.reason : \"Server error. Try again after sometime.\", \"error\");\n      });\n    };\n\n    _this._onStatusUpdate = function (data) {\n      var orderList = _this.state.orderList;\n      console.log(\"orderData: \", data);\n      var creatorData = orderList.find(function (each) {\n        return each.orderId === data.orderId;\n      }); // creatorData.status =\n      //   creatorData.status === \"Active\" ? \"Inactive\" : \"Active\";\n\n      _this.setState({\n        orderList: orderList,\n        orderListBackup: orderList\n      });\n\n      console.log(orderList);\n\n      _this._manageLoading(\"change-status\", true);\n\n      var status = {};\n\n      if (creatorData.status.toLowerCase() === \"active\") {\n        status[\"isActive\"] = false;\n        creatorData.status = \"Inactive\";\n      } else {\n        status[\"isActive\"] = true;\n        creatorData.status = \"Active\";\n      }\n\n      editSeller(status, data.orderId).then(function (response) {\n        console.log(response);\n\n        _this._manageLoading(\"change-status\", false);\n\n        ToastsStore.success(\"Status changed Successfully!\", 3000);\n      }, function (error) {\n        console.log(error);\n\n        _this._manageLoading(\"change-status\", false); // ToastsStore.error(error.reason, 3000);\n\n\n        showToast(error.reason && error.reason.length ? error.reason : \"Server error. Try again after sometime.\", \"error\");\n      });\n    };\n\n    _this._dataFormat = function (cell, row, header) {\n      if (header === \"name\") {\n        console.log(row);\n        return /*#__PURE__*/React.createElement(Link, {\n          to: \"/subscriber-view/\".concat(row.id),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex justify-content-start align-items-center\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"https://www.countryflags.io/\".concat(row.flag, \"/flat/24.png\"),\n          alt: \"flag\",\n          className: \"mr-2\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }\n        }), row.name));\n      } else if (header === \"orderId\") {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          onClick: function onClick() {\n            return _this._onToggleSubscriptionModal();\n          },\n          style: {\n            cursor: \"pointer\"\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 9\n          }\n        }, row.orderId);\n      } else if (header === \"phone\") {\n        return row.phone !== \"-\" ? /*#__PURE__*/React.createElement(CopyclipBoard, {\n          copiedValue: parsePhoneNumberFromString(row.phone).formatInternational(),\n          border: \"none\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 9\n          }\n        }) : \"-\";\n      } else if (header === \"joinedAt\") {\n        return cell ? _this._formatDate(cell) : \"-\";\n      } else if (header === \"subscriptions\") {\n        return cell && cell.length ? /*#__PURE__*/React.createElement(\"span\", {\n          onClick: function onClick() {\n            return _this._onToggleSubscriptionModal(row);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 9\n          }\n        }, cell.length) : 0;\n      } else if (header === \"status\") {\n        return /*#__PURE__*/React.createElement(Input, {\n          type: \"select\",\n          value: cell,\n          onChange: function onChange() {\n            return _this._onStatusUpdate(row);\n          } // disabled={this.state.loading.changeStatusLoading}\n          ,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Active\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 11\n          }\n        }, \"Active\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Inactive\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 11\n          }\n        }, \"Inactive\"));\n      } else if (header === \"action\") {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: \"/subscriber-view/\".concat(row.orderId),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"ghost-primary\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 11\n          }\n        }, \"View\"));\n      } else {\n        return cell;\n      }\n    };\n\n    _this._filterOnChange = function (_ref) {\n      var currentTarget = _ref.currentTarget;\n      var filters = _this.state.filters;\n      filters[currentTarget.name] = currentTarget.value;\n\n      _this.setState({\n        filters: filters\n      });\n\n      if (currentTarget.name !== \"search\") {\n        _this._filterSubscriberList(); // this._applyFilterChanges();\n\n      }\n    };\n\n    _this._filterSubscriberList = function () {\n      var filterConditions = []; // console.log(this.state);\n\n      var _this$state = _this.state,\n          filters = _this$state.filters,\n          orderListBackup = _this$state.orderListBackup,\n          orderList = _this$state.orderList;\n      Object.keys(filters).forEach(function (key) {\n        if (filters[key]) {\n          filterConditions.push(key);\n        }\n      });\n      console.log(filterConditions);\n      orderList = orderListBackup;\n\n      if (filterConditions.length) {\n        if (filters.subscriptions) {\n          console.log(filters.subscriptions);\n          var range = _this.state.subscriptionCounts[filters.subscriptions].value;\n          console.log(range);\n          orderList = orderList.filter(function (each) {\n            // console.log(\n            //   each.subscriptions,\n            //   each.subscriptions >= range.min,\n            //   each.subscriptions <= range.max\n            // );\n            if (range.min && !range.max) {\n              return each.subscriptions.length > range.min;\n            } else {\n              return each.subscriptions.length >= range.min && each.subscriptions.length <= range.max;\n            }\n          });\n        }\n\n        if (filters.status) {\n          orderList = orderList.filter(function (each) {\n            return each.status.toLowerCase() === filters.status.toLowerCase();\n          });\n        }\n\n        if (filters.search.trim().length) {\n          orderList = orderList.filter(function (each) {\n            return each.name.toLowerCase().includes(filters.search.toLowerCase()) || each.email.toLowerCase().includes(filters.search.toLowerCase()) || each.phone.toLowerCase().includes(filters.search.toLowerCase());\n          });\n        }\n\n        _this.setState({\n          orderList: orderList\n        });\n      } else {\n        _this.setState({\n          orderList: orderListBackup\n        });\n      }\n    };\n\n    _this._setSelectedRows = function (data) {\n      console.log(data);\n      var selectedSubscribers = _this.state.selectedSubscribers;\n      selectedSubscribers = data;\n\n      _this.setState({\n        selectedSubscribers: selectedSubscribers\n      });\n    };\n\n    _this._contactOnChange = function (_ref2) {\n      var currentTarget = _ref2.currentTarget;\n      var contact = _this.state.contact;\n      contact[currentTarget.name] = currentTarget.value;\n\n      _this.setState({\n        contact: contact\n      });\n    };\n\n    _this._setMessageContent = function (value, key) {\n      var contact = _this.state.contact;\n      contact[key] = value;\n\n      _this.setState({\n        contact: contact\n      });\n    };\n\n    _this._extractContent = function (s) {\n      var span = document.createElement(\"span\");\n      span.innerHTML = s;\n      return span.textContent || span.innerText;\n    };\n\n    _this._sendMessage = function () {\n      var _this$state2 = _this.state,\n          contact = _this$state2.contact,\n          selectedSubscribers = _this$state2.selectedSubscribers;\n      var data = {\n        idlist: selectedSubscribers,\n        text: contact.via === \"email\" ? contact.message : _this._extractContent(contact.message)\n      };\n\n      if (!data.idlist.length) {\n        ToastsStore.warning(\"Please select atleast one creator\", 3000);\n        return;\n      }\n\n      if (!data.text.trim().length) {\n        ToastsStore.warning(\"Please write some message\", 3000);\n        return;\n      }\n\n      console.log(data);\n\n      _this._manageLoading(\"send-message\", true);\n\n      sendMessage(contact.via, data).then(function (response) {\n        console.log(response);\n\n        _this._setMessageContent(\"\", \"message\");\n\n        _this._manageLoading(\"send-message\", false);\n\n        ToastsStore.success(\"Message sent Successfully!\", 3000);\n      }, function (error) {\n        console.log(error);\n\n        _this._manageLoading(\"send-message\", false); // ToastsStore.error(error.reason, 3000);\n\n\n        showToast(error.reason && error.reason.length ? error.reason : \"Server error. Try again after sometime.\", \"error\");\n      });\n    };\n\n    _this._paginate = function (pageNumber, pageSize) {\n      console.log(\"pageNumber, pageSize :\", pageNumber, pageSize);\n      var tableConfig = _this.state.tableConfig;\n      tableConfig.pageNumber = pageNumber;\n      tableConfig.pageSize = pageSize;\n      tableConfig.loading = true;\n      setTimeout(function () {\n        _this.setState({\n          tableConfig: tableConfig\n        }, function () {\n          _this._getAllOrders(_this.state.tableConfig);\n        });\n      }, 100);\n    };\n\n    _this._onSortChange = function (sortName, sortOrder) {\n      var _deepClone2 = deepClone(_this.state),\n          tableConfig = _deepClone2.tableConfig;\n\n      tableConfig.sort.sortBy = _this.state.subscriberFieldsKeyMap[sortName];\n      tableConfig.sort.sortOrder = sortOrder;\n      tableConfig.loading = true;\n\n      _this.setState({\n        tableConfig: tableConfig\n      }, function () {\n        _this._getAllOrders(tableConfig);\n      });\n\n      console.log(\"sortName, sortOrder :\", sortName, sortOrder);\n    };\n\n    _this._applyFilterChanges = function () {\n      var _deepClone3 = deepClone(_this.state),\n          filters = _deepClone3.filters,\n          tableConfig = _deepClone3.tableConfig;\n\n      console.log(\"filters :\", filters);\n      var data = {};\n\n      if (filters.subscriptions.length) {\n        data._subscriptions = {\n          lowerLimit: _this.state.subscriptionCounts[filters.subscriptions].value.min,\n          upperLimit: _this.state.subscriptionCounts[filters.subscriptions].value.max\n        };\n      }\n\n      if (filters.spent.length) {\n        data.spent = {\n          lowerLimit: _this.state.spentCounts[filters.spent].value.min,\n          upperLimit: _this.state.spentCounts[filters.spent].value.max\n        };\n      }\n\n      if (filters.status.length) {\n        data.isActive = filters.status === \"active\" ? true : false;\n      }\n\n      console.log(\"data :\", data);\n      tableConfig.filters = data;\n\n      if (filters.search.length) {\n        tableConfig.search = filters.search;\n      } else {\n        tableConfig.search = \"\";\n      }\n\n      tableConfig.loading = true;\n\n      _this.setState({\n        tableConfig: tableConfig\n      }, function () {\n        _this._getAllOrders(tableConfig);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Subscribers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._getAllOrders(this.state.tableConfig);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          filters = _this$state3.filters,\n          loading = _this$state3.loading,\n          subscriptionCounts = _this$state3.subscriptionCounts,\n          spentCounts = _this$state3.spentCounts,\n          contact = _this$state3.contact,\n          totalCount = _this$state3.totalCount,\n          tableConfig = _this$state3.tableConfig;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app TruFansPgBg animated fadeIn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"PgTitle justify-content-start align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 17\n        }\n      }, \"Orders\")), !loading.loadingData && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filterWrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-filter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(CustomDateRangePicker, {\n        dateRange: filters.dateRange,\n        onDatesChange: this._onDatesChange,\n        onFocusChange: this._onFocusChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"subscriptions\",\n        value: filters.subscriptions,\n        onChange: this._filterOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 25\n        }\n      }, \"Influencer\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"subscriptions\",\n        value: filters.subscriptions,\n        onChange: this._filterOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 25\n        }\n      }, \"Seller\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"spent\",\n        value: filters.spent,\n        onChange: this._filterOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 25\n        }\n      }, \"Product Category\"), spentCounts.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: index,\n          value: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 27\n          }\n        }, option.label);\n      })), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"status\",\n        value: filters.status,\n        onChange: this._filterOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 25\n        }\n      }, \"Active\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"inactive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 25\n        }\n      }, \"Inactive\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"search\",\n        name: \"search\",\n        placeholder: \"Search\",\n        autoComplete: \"off\",\n        className: \"ml-2\",\n        value: this.state.filters.search,\n        onChange: this._filterOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        className: \"ml-2\",\n        onClick: function onClick() {\n          return _this2._applyFilterChanges();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon-magnifier\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 25\n        }\n      })))), \" \", /*#__PURE__*/React.createElement(CustomDataTable, {\n        tableData: this.state.orderList,\n        headerKeys: this.state.headerKeys,\n        dataFormat: this._dataFormat,\n        totalCount: totalCount,\n        rowSelection: true,\n        onPaginate: function onPaginate(pageNumber, pageSize) {\n          return _this2._paginate(pageNumber, pageSize);\n        },\n        onSortChange: function onSortChange(sortName, sortOrder) {\n          return _this2._onSortChange(sortName, sortOrder);\n        },\n        setSelectedRows: function setSelectedRows(data) {\n          return _this2._setSelectedRows(data);\n        },\n        showTableLoading: tableConfig.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 19\n        }\n      })), loading.loadingData && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filterWrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading-section list-loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-spin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 21\n        }\n      }), \" \\xA0 Loading Subscribers..\")), /*#__PURE__*/React.createElement(OrderDetailModal, {\n        isOpen: this.state.orderDetailModal.isOpen,\n        data: this.state.orderDetailModal.data,\n        toggle: function toggle() {\n          return _this2._onToggleSubscriptionModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(TipsModal, {\n        isOpen: this.state.tipsModal.isOpen,\n        data: this.state.tipsModal.data,\n        toggle: function toggle() {\n          return _this2._onToggleTipsModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(PpvListModal, {\n        isOpen: this.state.ppvModal.isOpen,\n        data: this.state.ppvModal.data,\n        toggle: function toggle() {\n          return _this2._onTogglePPVModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return Subscribers;\n}(Component);\n\nexport default Subscribers;","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/pages/Subscribers/order.js"],"names":["React","Component","Link","CustomDateRangePicker","Container","Row","Col","Button","Input","CustomTable","getAllSubscribers","changeUserStatus","sendMessage","getAllOrders","editSeller","config","ToastsStore","SubscriptionListModal","OrderDetailModal","TipsModal","PpvListModal","CopyclipBoard","format","TextEditor","showToast","deepClone","CustomDataTable","parsePhoneNumberFromString","Subscribers","state","modals","orderDetailModal","isOpen","data","tipsModal","ppvModal","subscriberList","orderid","product","quantity","amount","buyer","seller","affiliate","status","subscriberListBackup","orderList","orderListBackup","headerKeys","id","label","subscriptionCounts","spentCounts","productCount","loading","loadingData","changeStatusLoading","sendingMessage","contact","via","message","selectedSubscribers","totalCount","subscriberFieldsKeyMap","name","email","phone","subscriptions","joinedAt","tipAmount","spent","tableConfig","pageNumber","pageSize","sort","sortBy","sortOrder","filters","dateRange","startDate","endDate","focusedInput","startDateId","endDateId","creator","search","_formatDate","date","Date","_onToggleSubscriptionModal","JSON","parse","stringify","setState","console","log","_onToggleTipsModal","_onTogglePPVModal","_manageLoading","key","value","_getAllOrders","length","then","response","orderListResp","orders","map","each","orderId","_product","category","price","_buyer","last","full","first","_seller","_influencer","isActive","count","error","reason","_onStatusUpdate","creatorData","find","toLowerCase","success","_dataFormat","cell","row","header","flag","cursor","formatInternational","_filterOnChange","currentTarget","_filterSubscriberList","filterConditions","Object","keys","forEach","push","range","filter","min","max","trim","includes","_setSelectedRows","_contactOnChange","_setMessageContent","_extractContent","s","span","document","createElement","innerHTML","textContent","innerText","_sendMessage","idlist","text","warning","_paginate","setTimeout","_onSortChange","sortName","_applyFilterChanges","_subscriptions","lowerLimit","upperLimit","_onDatesChange","_onFocusChange","option","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CustomDateRangePicker from \"../../components/date-range-picker\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  // Table,\n  Button,\n  Input,\n  // FormGroup,\n  // Label,\n  // Modal,\n  // ModalBody,\n  // ModalFooter,\n  // ModalHeader\n} from \"reactstrap\";\nimport CustomTable from \"../../components/custom-table\";\nimport {\n  getAllSubscribers,\n  changeUserStatus,\n  sendMessage,\n  getAllOrders,\n  editSeller,\n} from \"../../http/http-calls\";\nimport config from \"../../config\";\nimport { ToastsStore } from \"react-toasts\";\nimport SubscriptionListModal from \"../../components/subscription-list-modal\";\nimport OrderDetailModal from \"../../components/order-detail-modal\";\nimport TipsModal from \"../../components/tips-list-modal\";\nimport PpvListModal from \"../../components/ppv-list-modal\";\nimport CopyclipBoard from \"../../components/copy-clipboard\";\nimport { format } from \"date-fns\";\nimport TextEditor from \"../../components/text-editor\";\nimport { showToast, deepClone } from \"../../helper-methods\";\nimport CustomDataTable from \"../../components/custom-data-table\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\n\nclass Subscribers extends Component {\n  state = {\n    modals: [false, false, false],\n    orderDetailModal: {\n      isOpen: false,\n      data: null,\n    },\n    tipsModal: {\n      isOpen: false,\n      data: null,\n    },\n    ppvModal: {\n      isOpen: false,\n      data: null,\n    },\n    subscriberList: [\n      {\n        orderid: 1234,\n        product: \"Mobile\",\n        quantity: 2,\n        amount: \"$20\",\n        buyer: \"rohan\",\n        seller: \"amazon\",\n        affiliate: \"shyam\",\n        status: \"pending\",\n      },\n    ],\n    subscriberListBackup: [],\n    orderList: [],\n    orderListBackup: [],\n    headerKeys: [\n      { id: \"id\", label: \"id\" },\n      { id: \"orderId\", label: \"Order Id\" },\n      // { id: \"flag\", label: \"Flag\" },\n      { id: \"product\", label: \"Product\" },\n      { id: \"quantity\", label: \"Quantity\" },\n      { id: \"amount\", label: \"Amount\" },\n      { id: \"buyer\", label: \"Buyer\" },\n      { id: \"seller\", label: \"Seller\" },\n      { id: \"affiliate\", label: \"Affiliate\" },\n      { id: \"status\", label: \"Status\" },\n      // { id: \"action\", label: \"Action\", noSort: true }\n    ],\n    subscriptionCounts: config.subscriptionCounts,\n    spentCounts: config.productCount,\n    // filters: {\n    //   subscriptions: \"\",\n    //   status: \"\",\n    //   search: \"\",\n    //   spent: \"\",\n    // },\n    loading: {\n      loadingData: false,\n      changeStatusLoading: false,\n      sendingMessage: false,\n    },\n    contact: {\n      via: \"email\",\n      message: \"\",\n    },\n    selectedSubscribers: [],\n    totalCount: 0,\n    subscriberFieldsKeyMap: {\n      name: \"name\",\n      email: \"email\",\n      phone: \"phone\",\n      subscriptions: \"spent\",\n      joinedAt: \"createdAt\",\n      tipAmount: \"tips\",\n      spent: \"spent\",\n      status: \"isActive\",\n    },\n    tableConfig: {\n      pageNumber: 1,\n      pageSize: 10,\n      sort: {\n        sortBy: \"createdAt\",\n        sortOrder: \"desc\",\n      },\n      filters: {},\n    },\n    filters: {\n      dateRange: {\n        startDate: null,\n        endDate: null,\n        focusedInput: null,\n        startDateId: \"startDate\",\n        endDateId: \"endDate\",\n      },\n      creator: \"\",\n      status: \"\",\n      search: \"\",\n    },\n  };\n\n  _formatDate = (date) => {\n    // console.log(\"TCL: Subscribers -> _formatDate -> date\", date);\n    return format(new Date(date), \"MMM d, yyyy\");\n  };\n\n  _onToggleSubscriptionModal = (data) => {\n    let { orderDetailModal } = JSON.parse(JSON.stringify(this.state));\n    orderDetailModal.isOpen = !orderDetailModal.isOpen;\n    orderDetailModal.data = data;\n    this.setState(\n      {\n        orderDetailModal,\n      },\n      () => {\n        console.log(this.state);\n      }\n    );\n  };\n\n  _onToggleTipsModal = (data) => {\n    let { tipsModal } = JSON.parse(JSON.stringify(this.state));\n    tipsModal.isOpen = !tipsModal.isOpen;\n    tipsModal.data = data;\n    this.setState(\n      {\n        tipsModal,\n      },\n      () => {\n        console.log(this.state);\n      }\n    );\n  };\n\n  _onTogglePPVModal = (data) => {\n    let { ppvModal } = JSON.parse(JSON.stringify(this.state));\n    ppvModal.isOpen = !ppvModal.isOpen;\n    ppvModal.data = data;\n    this.setState(\n      {\n        ppvModal,\n      },\n      () => {\n        console.log(this.state);\n      }\n    );\n  };\n\n  _manageLoading = (key, value) => {\n    let {\n      loadingData,\n      changeStatusLoading,\n      sendingMessage,\n    } = this.state.loading;\n    if (key === \"data\") {\n      loadingData = value;\n    } else if (key === \"change-status\") {\n      changeStatusLoading = value;\n    } else if (key === \"send-message\") {\n      sendingMessage = value;\n    }\n    this.setState({\n      loading: { loadingData, changeStatusLoading, sendingMessage },\n    });\n  };\n\n  _getAllOrders = (data) => {\n    let { orderList, tableConfig } = deepClone(this.state);\n    if (!orderList.length) {\n      this._manageLoading(\"data\", true);\n    }\n    getAllOrders(data).then(\n      (response) => {\n        console.log(response);\n        this._manageLoading(\"data\", false);\n        tableConfig.loading = false;\n        this.setState({ tableConfig });\n        let orderListResp = response.orders.map((each) => {\n          return {\n            orderId: each.id,\n            product: each._product.category,\n            quantity: each.quantity,\n            amount: each._product.price,\n            buyer: each._buyer.name.last\n              ? each._buyer.name.full\n              : each._buyer.name.first,\n            seller: each._seller.name.last\n              ? each._seller.name.full\n              : each._seller.name.first,\n            affiliate: each._influencer.name.last\n              ? each._influencer.name.full\n              : each._influencer.name.first,\n            status: each.isActive ? \"Active\" : \"Inactive\",\n          };\n        });\n        this.setState({\n          orderList: orderListResp,\n          orderListBackup: orderListResp,\n          totalCount: response.count,\n        });\n      },\n      (error) => {\n        console.log(error);\n        this._manageLoading(\"data\", false);\n        tableConfig.loading = false;\n        this.setState({ tableConfig });\n        // ToastsStore.error(error.reason, 3000);\n        showToast(\n          error.reason && error.reason.length\n            ? error.reason\n            : \"Server error. Try again after sometime.\",\n          \"error\"\n        );\n      }\n    );\n  };\n\n  _onStatusUpdate = (data) => {\n    let { orderList } = this.state;\n    console.log(\"orderData: \",data)\n    let creatorData = orderList.find((each) => each.orderId === data.orderId);\n    // creatorData.status =\n    //   creatorData.status === \"Active\" ? \"Inactive\" : \"Active\";\n    this.setState({\n      orderList,\n      orderListBackup: orderList,\n    });\n    console.log(orderList);\n    this._manageLoading(\"change-status\", true);\n    let status = {};\n    if (creatorData.status.toLowerCase() === \"active\") {\n      status[\"isActive\"] = false;\n      creatorData.status = \"Inactive\";\n    } else {\n      status[\"isActive\"] = true;\n      creatorData.status = \"Active\";\n    }\n    editSeller(status, data.orderId).then(\n      (response) => {\n        console.log(response);\n        this._manageLoading(\"change-status\", false);\n        ToastsStore.success(\"Status changed Successfully!\", 3000);\n      },\n      (error) => {\n        console.log(error);\n        this._manageLoading(\"change-status\", false);\n        // ToastsStore.error(error.reason, 3000);\n        showToast(\n          error.reason && error.reason.length\n            ? error.reason\n            : \"Server error. Try again after sometime.\",\n          \"error\"\n        );\n      }\n    );\n  };\n\n  _dataFormat = (cell, row, header) => {\n    if (header === \"name\") {\n      console.log(row);\n      return (\n        <Link to={`/subscriber-view/${row.id}`}>\n          <div className='d-flex justify-content-start align-items-center'>\n            {/* <div className=\"personImgWrap\">\n              <img\n                className=\"personImg\"\n                src={row.profilePicture}\n                alt=\"Profile Thumbnail\"\n              />\n            </div>\n            {row.name} */}\n            <img\n              src={`https://www.countryflags.io/${row.flag}/flat/24.png`}\n              alt='flag'\n              className='mr-2'\n            />\n            {row.name}\n          </div>\n        </Link>\n      );\n    } else if (header === \"orderId\") {\n      return (\n        <div\n          onClick={() => this._onToggleSubscriptionModal()}\n          style={{ cursor: \"pointer\" }}>\n          {row.orderId}\n        </div>\n      );\n    } else if (header === \"phone\") {\n      return row.phone !== \"-\" ? (\n        <CopyclipBoard\n          copiedValue={parsePhoneNumberFromString(\n            row.phone\n          ).formatInternational()}\n          border='none'></CopyclipBoard>\n      ) : (\n        \"-\"\n      );\n    } else if (header === \"joinedAt\") {\n      return cell ? this._formatDate(cell) : \"-\";\n    } else if (header === \"subscriptions\") {\n      return cell && cell.length ? (\n        <span onClick={() => this._onToggleSubscriptionModal(row)}>\n          {cell.length}\n        </span>\n      ) : (\n        0\n      );\n    } else if (header === \"status\") {\n      return (\n        <Input\n          type='select'\n          value={cell}\n          onChange={() => this._onStatusUpdate(row)}\n          // disabled={this.state.loading.changeStatusLoading}\n        >\n          <option value='Active'>Active</option>\n          <option value='Inactive'>Inactive</option>\n        </Input>\n      );\n    } else if (header === \"action\") {\n      return (\n        <Link to={`/subscriber-view/${row.orderId}`}>\n          <Button color='ghost-primary'>View</Button>\n        </Link>\n      );\n    } else {\n      return cell;\n    }\n  };\n\n  _filterOnChange = ({ currentTarget }) => {\n    let { filters } = this.state;\n    filters[currentTarget.name] = currentTarget.value;\n    this.setState({ filters });\n    if (currentTarget.name !== \"search\") {\n      this._filterSubscriberList();\n      // this._applyFilterChanges();\n    }\n  };\n\n  // old function for frontend filtering - not using now\n  _filterSubscriberList = () => {\n    let filterConditions = [];\n    // console.log(this.state);\n    let { filters, orderListBackup, orderList } = this.state;\n    Object.keys(filters).forEach((key) => {\n      if (filters[key]) {\n        filterConditions.push(key);\n      }\n    });\n    console.log(filterConditions);\n    orderList = orderListBackup;\n    if (filterConditions.length) {\n      if (filters.subscriptions) {\n        console.log(filters.subscriptions);\n        let range = this.state.subscriptionCounts[filters.subscriptions].value;\n        console.log(range);\n        orderList = orderList.filter((each) => {\n          // console.log(\n          //   each.subscriptions,\n          //   each.subscriptions >= range.min,\n          //   each.subscriptions <= range.max\n          // );\n          if (range.min && !range.max) {\n            return each.subscriptions.length > range.min;\n          } else {\n            return (\n              each.subscriptions.length >= range.min &&\n              each.subscriptions.length <= range.max\n            );\n          }\n        });\n      }\n      if (filters.status) {\n        orderList = orderList.filter((each) => {\n          return each.status.toLowerCase() === filters.status.toLowerCase();\n        });\n      }\n      if (filters.search.trim().length) {\n        orderList = orderList.filter((each) => {\n          return (\n            each.name.toLowerCase().includes(filters.search.toLowerCase()) ||\n            each.email.toLowerCase().includes(filters.search.toLowerCase()) ||\n            each.phone.toLowerCase().includes(filters.search.toLowerCase())\n          );\n        });\n      }\n      this.setState({ orderList });\n    } else {\n      this.setState({ orderList: orderListBackup });\n    }\n  };\n\n  _setSelectedRows = (data) => {\n    console.log(data);\n    let { selectedSubscribers } = this.state;\n    selectedSubscribers = data;\n    this.setState({ selectedSubscribers });\n  };\n\n  _contactOnChange = ({ currentTarget }) => {\n    let { contact } = this.state;\n    contact[currentTarget.name] = currentTarget.value;\n    this.setState({ contact });\n  };\n\n  _setMessageContent = (value, key) => {\n    let { contact } = this.state;\n    contact[key] = value;\n    this.setState({ contact });\n  };\n\n  _extractContent = (s) => {\n    var span = document.createElement(\"span\");\n    span.innerHTML = s;\n    return span.textContent || span.innerText;\n  };\n\n  _sendMessage = () => {\n    let { contact, selectedSubscribers } = this.state;\n    let data = {\n      idlist: selectedSubscribers,\n      text:\n        contact.via === \"email\"\n          ? contact.message\n          : this._extractContent(contact.message),\n    };\n    if (!data.idlist.length) {\n      ToastsStore.warning(\"Please select atleast one creator\", 3000);\n      return;\n    }\n    if (!data.text.trim().length) {\n      ToastsStore.warning(\"Please write some message\", 3000);\n      return;\n    }\n    console.log(data);\n    this._manageLoading(\"send-message\", true);\n    sendMessage(contact.via, data).then(\n      (response) => {\n        console.log(response);\n        this._setMessageContent(\"\", \"message\");\n        this._manageLoading(\"send-message\", false);\n        ToastsStore.success(\"Message sent Successfully!\", 3000);\n      },\n      (error) => {\n        console.log(error);\n        this._manageLoading(\"send-message\", false);\n        // ToastsStore.error(error.reason, 3000);\n        showToast(\n          error.reason && error.reason.length\n            ? error.reason\n            : \"Server error. Try again after sometime.\",\n          \"error\"\n        );\n      }\n    );\n  };\n\n  _paginate = (pageNumber, pageSize) => {\n    console.log(\"pageNumber, pageSize :\", pageNumber, pageSize);\n    const { tableConfig } = this.state;\n    tableConfig.pageNumber = pageNumber;\n    tableConfig.pageSize = pageSize;\n    tableConfig.loading = true;\n    setTimeout(() => {\n      this.setState({ tableConfig }, () => {\n        this._getAllOrders(this.state.tableConfig);\n      });\n    }, 100);\n  };\n\n  _onSortChange = (sortName, sortOrder) => {\n    const { tableConfig } = deepClone(this.state);\n    tableConfig.sort.sortBy = this.state.subscriberFieldsKeyMap[sortName];\n    tableConfig.sort.sortOrder = sortOrder;\n    tableConfig.loading = true;\n    this.setState({ tableConfig }, () => {\n      this._getAllOrders(tableConfig);\n    });\n    console.log(\"sortName, sortOrder :\", sortName, sortOrder);\n  };\n\n  _applyFilterChanges = () => {\n    const { filters, tableConfig } = deepClone(this.state);\n    console.log(\"filters :\", filters);\n    let data = {};\n    if (filters.subscriptions.length) {\n      data._subscriptions = {\n        lowerLimit: this.state.subscriptionCounts[filters.subscriptions].value\n          .min,\n        upperLimit: this.state.subscriptionCounts[filters.subscriptions].value\n          .max,\n      };\n    }\n    if (filters.spent.length) {\n      data.spent = {\n        lowerLimit: this.state.spentCounts[filters.spent].value.min,\n        upperLimit: this.state.spentCounts[filters.spent].value.max,\n      };\n    }\n    if (filters.status.length) {\n      data.isActive = filters.status === \"active\" ? true : false;\n    }\n    console.log(\"data :\", data);\n    tableConfig.filters = data;\n    if (filters.search.length) {\n      tableConfig.search = filters.search;\n    } else {\n      tableConfig.search = \"\";\n    }\n    tableConfig.loading = true;\n    this.setState({ tableConfig }, () => {\n      this._getAllOrders(tableConfig);\n    });\n  };\n\n  componentDidMount() {\n    this._getAllOrders(this.state.tableConfig);\n  }\n\n  render() {\n    const {\n      filters,\n      loading,\n      subscriptionCounts,\n      spentCounts,\n      contact,\n      totalCount,\n      tableConfig,\n    } = this.state;\n\n    return (\n      <div className='app TruFansPgBg animated fadeIn'>\n        <Container fluid>\n          <Row>\n            <Col xs='12'>\n              <div className='PgTitle justify-content-start align-items-center'>\n                {/* on clicking the below btn, it should take back the user to the previous page in history */}\n                {/* <Button color=\"ghost-dark\" className=\"customBackBtn\">\n                  <i className=\"fa fa-arrow-left\"></i>\n                </Button> */}\n\n                <h2>Orders</h2>\n              </div>\n              {/* filters */}\n              {!loading.loadingData && (\n                <div>\n                  <div className='filterWrap'>\n                    <div className='d-flex align-items-center'>\n                      <i className='fa fa-filter'></i>\n                      <div className='ml-2'>\n                        <CustomDateRangePicker\n                          dateRange={filters.dateRange}\n                          onDatesChange={this._onDatesChange}\n                          onFocusChange={\n                            this._onFocusChange\n                          }></CustomDateRangePicker>\n                      </div>\n                      <Input\n                        type='select'\n                        name='subscriptions'\n                        value={filters.subscriptions}\n                        onChange={this._filterOnChange}>\n                        <option value=''>Influencer</option>\n                        {/* {subscriptionCounts.map((option, index) => (\n                          <option key={index} value={index}>\n                            {option.label}\n                          </option>\n                        ))} */}\n                      </Input>\n                      <Input\n                        type='select'\n                        name='subscriptions'\n                        value={filters.subscriptions}\n                        onChange={this._filterOnChange}>\n                        <option value=''>Seller</option>\n                        {/* {subscriptionCounts.map((option, index) => (\n                          <option key={index} value={index}>\n                            {option.label}\n                          </option>\n                        ))} */}\n                      </Input>\n                      <Input\n                        type='select'\n                        name='spent'\n                        value={filters.spent}\n                        onChange={this._filterOnChange}>\n                        <option value=''>Product Category</option>\n                        {spentCounts.map((option, index) => (\n                          <option key={index} value={index}>\n                            {option.label}\n                          </option>\n                        ))}\n                      </Input>\n                      <Input\n                        type='select'\n                        name='status'\n                        value={filters.status}\n                        onChange={this._filterOnChange}>\n                        <option value=''>Status</option>\n                        <option value='active'>Active</option>\n                        <option value='inactive'>Inactive</option>\n                      </Input>\n                    </div>\n\n                    <div className='d-flex align-items-center'>\n                      <Input\n                        type='text'\n                        id='search'\n                        name='search'\n                        placeholder='Search'\n                        autoComplete='off'\n                        className='ml-2'\n                        value={this.state.filters.search}\n                        onChange={this._filterOnChange}\n                      />\n\n                      <Button\n                        color='secondary'\n                        className='ml-2'\n                        onClick={() => this._applyFilterChanges()}>\n                        <i className='icon-magnifier'></i>\n                      </Button>\n                    </div>\n                  </div>{\" \"}\n                  {/* filterWrap */}\n                  {/* <CustomTable\n                    tableData={this.state.subscriberList}\n                    headerKeys={this.state.headerKeys}\n                    dataFormat={this._dataFormat}\n                    rowSelection={true}\n                    setSelectedRows={data => this._setSelectedRows(data)}\n                  ></CustomTable> */}\n                  <CustomDataTable\n                    tableData={this.state.orderList}\n                    headerKeys={this.state.headerKeys}\n                    dataFormat={this._dataFormat}\n                    totalCount={totalCount}\n                    rowSelection={true}\n                    onPaginate={(pageNumber, pageSize) =>\n                      this._paginate(pageNumber, pageSize)\n                    }\n                    onSortChange={(sortName, sortOrder) =>\n                      this._onSortChange(sortName, sortOrder)\n                    }\n                    setSelectedRows={(data) => this._setSelectedRows(data)}\n                    showTableLoading={tableConfig.loading}></CustomDataTable>\n                </div>\n              )}\n              {loading.loadingData && (\n                <div className='filterWrap'>\n                  <div className='loading-section list-loading'>\n                    <i className='fa fa-spinner fa-spin'></i> &nbsp; Loading\n                    Subscribers..\n                  </div>\n                </div>\n              )}\n              {/* The below div will appear after the user selects row(s) from the above table */}\n              {/* <div className=\"d-flex my-5 flex-column w-75 mx-auto\">\n                <h2 className=\"text-center mb-3\">Contact</h2>\n                <div className=\"d-flex justify-content-between\">\n                  <Input\n                    type=\"select\"\n                    style={{ width: \"175px\" }}\n                    className=\"mr-3\"\n                    name=\"via\"\n                    value={contact.via}\n                    onChange={this._contactOnChange}\n                  >\n                    <option value=\"email\" defaultValue>\n                      Email\n                    </option>\n                    <option value=\"sms\">SMS</option>\n                  </Input>\n\n                  <div style={{ flex: 1 }}>\n                    there will be a \"WYSIWYG\" editor below in place of a textarea  \n                    <Input\n                      type=\"textarea\"\n                      id=\"\"\n                      rows=\"6\"\n                      placeholder=\"Enter your message here..\"\n                      name=\"message\"\n                      value={contact.message}\n                      onChange={this._contactOnChange}\n                    />\n                    <TextEditor\n                      content={contact.message}\n                      onChange={(e) => this._setMessageContent(e, \"message\")}\n                    ></TextEditor>\n\n                    <Button\n                      className=\"BtnPurple mt-4 d-block mx-auto\"\n                      style={{ padding: \"8px 25px\" }}\n                      disabled={loading.sendingMessage}\n                      onClick={this._sendMessage}\n                    >\n                      {loading.sendingMessage ? (\n                        <>\n                          <i className=\"fa fa-spinner fa-spin mr5\" />\n                          &nbsp;\n                        </>\n                      ) : null}\n                      Send\n                    </Button>\n                  </div>\n                </div>\n              </div> */}\n              {/* Modal for \"Subscriptions\" */}\n              <OrderDetailModal\n                isOpen={this.state.orderDetailModal.isOpen}\n                data={this.state.orderDetailModal.data}\n                toggle={() =>\n                  this._onToggleSubscriptionModal()\n                }></OrderDetailModal>\n\n              {/* Modal for \"Tips\" */}\n              <TipsModal\n                isOpen={this.state.tipsModal.isOpen}\n                data={this.state.tipsModal.data}\n                toggle={() => this._onToggleTipsModal()}></TipsModal>\n              {/* Modal for \"PPV\" */}\n              <PpvListModal\n                isOpen={this.state.ppvModal.isOpen}\n                data={this.state.ppvModal.data}\n                toggle={() => this._onTogglePPVModal()}></PpvListModal>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Subscribers;\n"]},"metadata":{},"sourceType":"module"}