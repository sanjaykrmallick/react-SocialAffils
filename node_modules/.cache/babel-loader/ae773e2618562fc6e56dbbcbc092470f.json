{"ast":null,"code":"import _classCallCheck from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/subscriber-activity-list.jsx\";\nimport React, { Component } from \"react\";\nimport { Col, Input, Label, Row } from \"reactstrap\";\nimport { deepClone, showToast, sortedThreads } from \"../helper-methods/index\";\nimport { getSubscriberActivity } from \"../http/http-calls\";\nimport Loader from \"./loader\";\nimport SubscriberFeedViewer from \"./subscriber-feed-viewer\";\n\nvar SubscriberActivityList = /*#__PURE__*/function (_Component) {\n  _inherits(SubscriberActivityList, _Component);\n\n  var _super = _createSuper(SubscriberActivityList);\n\n  function SubscriberActivityList(props) {\n    var _this;\n\n    _classCallCheck(this, SubscriberActivityList);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      activities: [],\n      isLoading: true,\n      filterText: \"\",\n      filteredActivities: []\n    };\n\n    _this._fetchActivities = function () {\n      _this.setState({\n        isLoading: true\n      }, function () {\n        getSubscriberActivity(_this.props.match.params.id).then(function (resp) {\n          _this.setState({\n            activities: resp.activities,\n            isLoading: false,\n            filteredActivities: _this._filterActvities(resp.activities)\n          });\n        }).catch(function (err) {\n          _this.setState({\n            isLoading: false\n          });\n\n          showToast(err.reason && err.reason.length ? err.reason : \"Server error. Try again after sometime.\", \"error\");\n        });\n      });\n    };\n\n    _this._changeFilter = function (filterText) {\n      var _deepClone = deepClone(_this.state),\n          activities = _deepClone.activities;\n\n      _this.setState({\n        isLoading: true\n      }, function () {\n        _this.setState({\n          filterText: filterText\n        }, function () {\n          _this.setState({\n            filteredActivities: _this._filterActvities(activities)\n          }, function () {\n            _this.setState({\n              isLoading: false\n            });\n          });\n        });\n      });\n    };\n\n    _this._filterActvities = function (arr) {\n      var _deepClone2 = deepClone(_this.state),\n          filterText = _deepClone2.filterText;\n\n      return arr.filter(function (item) {\n        return !filterText.length || filterText.length && item.activityType == filterText;\n      });\n    };\n\n    _this._fetchActivities = _this._fetchActivities.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SubscriberActivityList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.updateRef(this._fetchActivities);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _deepClone3 = deepClone(this.state),\n          isLoading = _deepClone3.isLoading,\n          filterText = _deepClone3.filterText,\n          filteredActivities = _deepClone3.filteredActivities;\n\n      var user = this.props.user;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        sm: \"4\",\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, isLoading ? /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 26\n        }\n      }) : null), /*#__PURE__*/React.createElement(Col, {\n        sm: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"150px\",\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"status\",\n        id: \"\",\n        style: {\n          minWidth: \"150px\"\n        },\n        value: filterText,\n        onChange: function onChange(e) {\n          return _this2._changeFilter(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"comment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, \"Comment\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"like\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"ppv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, \"Pay Per View\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"tips\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, \"Tips\"))))), filteredActivities && filteredActivities.length ? filteredActivities.map(function (activity, index) {\n        return /*#__PURE__*/React.createElement(SubscriberFeedViewer, Object.assign({\n          key: index,\n          feed: activity,\n          user: user\n        }, _this2.props, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }\n        }));\n      }) : !isLoading ? /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, \"No activity found yet\") : null);\n    }\n  }]);\n\n  return SubscriberActivityList;\n}(Component);\n\nexport default SubscriberActivityList;","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/subscriber-activity-list.jsx"],"names":["React","Component","Col","Input","Label","Row","deepClone","showToast","sortedThreads","getSubscriberActivity","Loader","SubscriberFeedViewer","SubscriberActivityList","props","state","activities","isLoading","filterText","filteredActivities","_fetchActivities","setState","match","params","id","then","resp","_filterActvities","catch","err","reason","length","_changeFilter","arr","filter","item","activityType","bind","updateRef","user","display","justifyContent","width","float","minWidth","e","target","value","map","activity","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Input, Label, Row } from \"reactstrap\";\nimport { deepClone, showToast, sortedThreads } from \"../helper-methods/index\";\nimport { getSubscriberActivity } from \"../http/http-calls\";\nimport Loader from \"./loader\";\nimport SubscriberFeedViewer from \"./subscriber-feed-viewer\";\n\nclass SubscriberActivityList extends Component {\n  state = {\n    activities: [],\n    isLoading: true,\n    filterText: \"\",\n    filteredActivities: []\n  };\n\n  constructor(props) {\n    super(props);\n    this._fetchActivities = this._fetchActivities.bind(this);\n  }\n  componentDidMount() {\n    this.props.updateRef(this._fetchActivities);\n  }\n\n  _fetchActivities = () => {\n    this.setState({ isLoading: true }, () => {\n      getSubscriberActivity(this.props.match.params.id)\n        .then(resp => {\n          this.setState({\n            activities: resp.activities,\n            isLoading: false,\n            filteredActivities: this._filterActvities(resp.activities)\n          });\n        })\n        .catch(err => {\n          this.setState({ isLoading: false });\n          showToast(\n            err.reason && err.reason.length\n              ? err.reason\n              : \"Server error. Try again after sometime.\",\n            \"error\"\n          );\n        });\n    });\n  };\n\n  _changeFilter = filterText => {\n    const { activities } = deepClone(this.state);\n    this.setState({ isLoading: true }, () => {\n      this.setState({ filterText }, () => {\n        this.setState(\n          { filteredActivities: this._filterActvities(activities) },\n          () => {\n            this.setState({ isLoading: false });\n          }\n        );\n      });\n    });\n  };\n\n  _filterActvities = arr => {\n    const { filterText } = deepClone(this.state);\n    return arr.filter(item => {\n      return (\n        !filterText.length ||\n        (filterText.length && item.activityType == filterText)\n      );\n    });\n  };\n\n  render() {\n    const { isLoading, filterText, filteredActivities } = deepClone(this.state);\n    const { user } = this.props;\n\n    return (\n      <>\n        <Row>\n          <Col sm=\"4\" />\n          <Col sm=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n            {isLoading ? <Loader /> : null}\n          </Col>\n          <Col sm=\"4\">\n            <div style={{ width: \"150px\", float: \"right\" }}>\n              <Input\n                type=\"select\"\n                name=\"status\"\n                id=\"\"\n                style={{ minWidth: \"150px\" }}\n                value={filterText}\n                onChange={e => this._changeFilter(e.target.value)}\n              >\n                <option value=\"\">All</option>\n                <option value=\"comment\">Comment</option>\n                <option value=\"like\">Like</option>\n                <option value=\"ppv\">Pay Per View</option>\n                <option value=\"tips\">Tips</option>\n              </Input>\n            </div>\n          </Col>\n        </Row>\n        {filteredActivities && filteredActivities.length ? (\n          filteredActivities.map((activity, index) => (\n            <SubscriberFeedViewer\n              key={index}\n              feed={activity}\n              user={user}\n              {...this.props}\n            />\n          ))\n        ) : !isLoading ? (\n          <Label>No activity found yet</Label>\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default SubscriberActivityList;\n"]},"metadata":{},"sourceType":"module"}