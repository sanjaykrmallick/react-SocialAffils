{"ast":null,"code":"import _classCallCheck from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/post-earnings-modal.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Label, Modal, ModalBody, ModalFooter, ModalHeader, Table } from \"reactstrap\";\nimport { deepClone, showToast } from \"../helper-methods\";\nimport moment from \"moment\";\n\nvar PostEarningsModal = /*#__PURE__*/function (_Component) {\n  _inherits(PostEarningsModal, _Component);\n\n  var _super = _createSuper(PostEarningsModal);\n\n  function PostEarningsModal() {\n    var _this;\n\n    _classCallCheck(this, PostEarningsModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n\n    _this._calculateTotalTipAmount = function () {\n      var _deepClone = deepClone(_this.props),\n          tipArr = _deepClone.tipArr;\n\n      if (tipArr && tipArr.length) {\n        var totalTipsAmt = tipArr.reduce(function (acc, each) {\n          return acc = acc + each.amount;\n        }, 0);\n        return totalTipsAmt;\n      } else {\n        return 0;\n      }\n    };\n\n    _this._calculateTotalPPVAmount = function () {\n      var _deepClone2 = deepClone(_this.props),\n          ppvArr = _deepClone2.ppvArr;\n\n      if (ppvArr && ppvArr.length) {\n        var totalAmt = ppvArr.reduce(function (acc, each) {\n          return acc = acc + each.amount;\n        }, 0);\n        return totalAmt;\n      } else {\n        return 0;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(PostEarningsModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          isVisible = _this$props.isVisible,\n          feed = _this$props.feed,\n          tipArr = _this$props.tipArr,\n          ppvArr = _this$props.ppvArr;\n      return /*#__PURE__*/React.createElement(Modal, {\n        isOpen: isVisible,\n        toggle: function toggle() {\n          return _this2.props.close();\n        },\n        className: \"modal-dialog-centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this2.props.close();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, \"Post Earnings\"), /*#__PURE__*/React.createElement(ModalBody, {\n        className: \"py-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, isVisible ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, \"Tips:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"#1F1F1F\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, \"$\", this._calculateTotalTipAmount())), /*#__PURE__*/React.createElement(Table, {\n        responsive: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, \"Tip\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, tipArr.length ? tipArr.map(function (tip, tipIndex) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: tipIndex,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex justify-content-start align-items-center\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fansImgWrap\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"fansImg\",\n          src: tip._from.hasOwnProperty(\"profilePicture\") && tip._from.profilePicture && tip._from.profilePicture.length ? tip._from.profilePicture : \"http://www.clipartpanda.com/clipart_images/user-66327738/download\",\n          alt: \"Profile Thumbnail\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }\n        })), tip._from.name.full)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 27\n          }\n        }, moment(tip.time).format(\"DD MMM, YYYY LT\")), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 27\n          }\n        }, \"$\", tip.amount));\n      }) : null)), !tipArr.length ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-danger\",\n        style: {\n          fontSize: \"16px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }\n      }, \"No tip got yet\")) : null, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }, \"PPV:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"#1F1F1F\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, \"$\", this._calculateTotalPPVAmount())), /*#__PURE__*/React.createElement(Table, {\n        responsive: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, ppvArr.length ? ppvArr.map(function (ppv, ppvIndex) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: ppvIndex,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex justify-content-start align-items-center\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fansImgWrap\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"fansImg\",\n          src: ppv._from.hasOwnProperty(\"profilePicture\") && ppv._from.profilePicture && ppv._from.profilePicture.length ? ppv._from.profilePicture : \"http://www.clipartpanda.com/clipart_images/user-66327738/download\",\n          alt: \"Profile Thumbnail\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }\n        })), ppv._from.name.full)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 27\n          }\n        }, moment(ppv.time).format(\"DD MMM, YYYY LT\")), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 27\n          }\n        }, null));\n      }) : null)), !ppvArr.length ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-danger\",\n        style: {\n          fontSize: \"16px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 19\n        }\n      }, \"No ppv amount got yet\")) : null) : null), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn-pill btn btn-outline-dark\",\n        onClick: function onClick() {\n          return _this2.props.close();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }, \"Close\")));\n    }\n  }]);\n\n  return PostEarningsModal;\n}(Component);\n\nexport default PostEarningsModal;","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/post-earnings-modal.jsx"],"names":["React","Component","Button","Label","Modal","ModalBody","ModalFooter","ModalHeader","Table","deepClone","showToast","moment","PostEarningsModal","state","_calculateTotalTipAmount","props","tipArr","length","totalTipsAmt","reduce","acc","each","amount","_calculateTotalPPVAmount","ppvArr","totalAmt","isVisible","feed","close","color","map","tip","tipIndex","_from","hasOwnProperty","profilePicture","name","full","time","format","fontSize","ppv","ppvIndex"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Table\n} from \"reactstrap\";\nimport { deepClone, showToast } from \"../helper-methods\";\nimport moment from \"moment\";\n\nclass PostEarningsModal extends Component {\n  state = {};\n\n  _calculateTotalTipAmount = () => {\n    const { tipArr } = deepClone(this.props);\n    if (tipArr && tipArr.length) {\n      let totalTipsAmt = tipArr.reduce((acc, each) => {\n        return (acc = acc + each.amount);\n      }, 0);\n      return totalTipsAmt;\n    } else {\n      return 0;\n    }\n  };\n\n  _calculateTotalPPVAmount = () => {\n    const { ppvArr } = deepClone(this.props);\n    if (ppvArr && ppvArr.length) {\n      let totalAmt = ppvArr.reduce((acc, each) => {\n        return (acc = acc + each.amount);\n      }, 0);\n      return totalAmt;\n    } else {\n      return 0;\n    }\n  };\n\n  render() {\n    const { isVisible, feed, tipArr, ppvArr } = this.props;\n\n    return (\n      <Modal\n        isOpen={isVisible}\n        toggle={() => this.props.close()}\n        className=\"modal-dialog-centered\"\n      >\n        <ModalHeader toggle={() => this.props.close()}>\n          Post Earnings\n        </ModalHeader>\n        <ModalBody className=\"py-2\">\n          {isVisible ? (\n            <>\n              <h4>\n                Tips:{\" \"}\n                <span style={{ color: \"#1F1F1F\" }}>\n                  ${this._calculateTotalTipAmount()}\n                </span>\n              </h4>\n\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Date</th>\n                    <th>Tip</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {tipArr.length\n                    ? tipArr.map((tip, tipIndex) => (\n                        <tr key={tipIndex}>\n                          <td>\n                            <div className=\"d-flex justify-content-start align-items-center\">\n                              <div className=\"fansImgWrap\">\n                                <img\n                                  className=\"fansImg\"\n                                  src={\n                                    tip._from.hasOwnProperty(\n                                      \"profilePicture\"\n                                    ) &&\n                                    tip._from.profilePicture &&\n                                    tip._from.profilePicture.length\n                                      ? tip._from.profilePicture\n                                      : \"http://www.clipartpanda.com/clipart_images/user-66327738/download\"\n                                  }\n                                  alt=\"Profile Thumbnail\"\n                                />\n                              </div>\n                              {tip._from.name.full}\n                            </div>\n                          </td>\n\n                          <td>{moment(tip.time).format(\"DD MMM, YYYY LT\")}</td>\n                          <td>${tip.amount}</td>\n                        </tr>\n                      ))\n                    : null}\n                </tbody>\n              </Table>\n              {!tipArr.length ? (\n                <div>\n                  <p className=\"text-danger\" style={{ fontSize: \"16px\" }}>\n                    No tip got yet\n                  </p>\n                </div>\n              ) : null}\n\n              <hr />\n              {/* For PPV */}\n              <h4>\n                PPV:{\" \"}\n                <span style={{ color: \"#1F1F1F\" }}>\n                  ${this._calculateTotalPPVAmount()}\n                </span>\n              </h4>\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Date</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {ppvArr.length\n                    ? ppvArr.map((ppv, ppvIndex) => (\n                        <tr key={ppvIndex}>\n                          <td>\n                            <div className=\"d-flex justify-content-start align-items-center\">\n                              <div className=\"fansImgWrap\">\n                                <img\n                                  className=\"fansImg\"\n                                  src={\n                                    ppv._from.hasOwnProperty(\n                                      \"profilePicture\"\n                                    ) &&\n                                    ppv._from.profilePicture &&\n                                    ppv._from.profilePicture.length\n                                      ? ppv._from.profilePicture\n                                      : \"http://www.clipartpanda.com/clipart_images/user-66327738/download\"\n                                  }\n                                  alt=\"Profile Thumbnail\"\n                                />\n                              </div>\n                              {ppv._from.name.full}\n                            </div>\n                          </td>\n\n                          <td>{moment(ppv.time).format(\"DD MMM, YYYY LT\")}</td>\n                          <td>{null}</td>\n                        </tr>\n                      ))\n                    : null}\n                </tbody>\n              </Table>\n              {!ppvArr.length ? (\n                <div>\n                  <p className=\"text-danger\" style={{ fontSize: \"16px\" }}>\n                    No ppv amount got yet\n                  </p>\n                </div>\n              ) : null}\n            </>\n          ) : null}\n        </ModalBody>\n        <ModalFooter>\n          <button\n            type=\"button\"\n            className=\"btn-pill btn btn-outline-dark\"\n            onClick={() => this.props.close()}\n          >\n            Close\n          </button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nexport default PostEarningsModal;\n"]},"metadata":{},"sourceType":"module"}