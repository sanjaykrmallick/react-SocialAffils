{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport hardSet from \"redux-persist/es/stateReconciler/hardSet\";\nimport storage from 'redux-persist/lib/storage'; // import thunk from 'redux-thunk';\n\nimport logger from \"redux-logger\";\nimport { userAuthTokenReducer } from './reducers';\nvar rootReducers = combineReducers({\n  socialAffilAdmin: userAuthTokenReducer\n});\nvar persistConfig = {\n  key: 'root',\n  storage: storage,\n  keyPrefix: '',\n  blacklist: [],\n  stateReconciler: hardSet\n};\nvar pReducer = persistReducer(persistConfig, rootReducers);\nvar middleware = applyMiddleware(logger);\nexport var store = createStore(pReducer, undefined, middleware);\nexport var persistor = persistStore(store);","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","persistStore","persistReducer","hardSet","storage","logger","userAuthTokenReducer","rootReducers","socialAffilAdmin","persistConfig","key","keyPrefix","blacklist","stateReconciler","pReducer","middleware","store","undefined","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,oBAAT,QAAqC,YAArC;AAEA,IAAMC,YAAY,GAAGR,eAAe,CAAC;AACjCS,EAAAA,gBAAgB,EAAEF;AADe,CAAD,CAApC;AAIA,IAAMG,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBN,EAAAA,OAAO,EAAPA,OAFkB;AAGlBO,EAAAA,SAAS,EAAE,EAHO;AAIlBC,EAAAA,SAAS,EAAE,EAJO;AAKlBC,EAAAA,eAAe,EAAEV;AALC,CAAtB;AAQA,IAAMW,QAAQ,GAAGZ,cAAc,CAACO,aAAD,EAAgBF,YAAhB,CAA/B;AAEA,IAAMQ,UAAU,GAAGf,eAAe,CAACK,MAAD,CAAlC;AAEA,OAAO,IAAMW,KAAK,GAAGlB,WAAW,CAC5BgB,QAD4B,EAE5BG,SAF4B,EAG5BF,UAH4B,CAAzB;AAMP,OAAO,IAAMG,SAAS,GAAGjB,YAAY,CAACe,KAAD,CAA9B","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport hardSet from \"redux-persist/es/stateReconciler/hardSet\";\nimport storage from 'redux-persist/lib/storage';\n// import thunk from 'redux-thunk';\nimport logger from \"redux-logger\";\n\nimport { userAuthTokenReducer } from './reducers';\n\nconst rootReducers = combineReducers({\n    socialAffilAdmin: userAuthTokenReducer\n});\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    keyPrefix: '',\n    blacklist: [],\n    stateReconciler: hardSet\n}\n\nconst pReducer = persistReducer(persistConfig, rootReducers);\n\nconst middleware = applyMiddleware(logger);\n\nexport const store = createStore(\n    pReducer,\n    undefined,\n    middleware\n);\n\nexport const persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}