{"ast":null,"code":"import _regeneratorRuntime from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/add-influencer-modal.jsx\";\nimport React, { Component } from \"react\";\nimport { Modal, ModalBody, ModalFooter, ModalHeader // Table,\n, Button // Badge,\n// Container,\n, Row, Col, Input, Label, FormGroup, Form } from \"reactstrap\";\nimport { createAdmin, uploadImageOnCloudinary, createInfluencer, getInfluencerById, editInfluencer } from \"../http/http-calls\"; // import config from '../config/index';\n\nimport { ToastsStore } from \"react-toasts\";\nimport { showToast } from \"../helper-methods\";\nimport { countryCodes } from \"../config/country-codes\";\nimport config from \"../config\";\n\nvar AddInfluencerModal = /*#__PURE__*/function (_Component) {\n  _inherits(AddInfluencerModal, _Component);\n\n  var _super = _createSuper(AddInfluencerModal);\n\n  function AddInfluencerModal() {\n    var _this;\n\n    _classCallCheck(this, AddInfluencerModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      influencer: {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        countryCode: \"+1\",\n        product: \"\",\n        profileLink: \"\",\n        // commission: \"\",\n        sales: \"\",\n        profilePicture: \"\"\n      },\n      errors: {},\n      isDirty: {\n        name: false,\n        email: false,\n        phone: false,\n        profilePicture: false,\n        profileLink: false\n      },\n      loading: false\n    };\n\n    _this._closeModal = function () {\n      var _this$state = _this.state,\n          influencer = _this$state.influencer,\n          errors = _this$state.errors,\n          isDirty = _this$state.isDirty;\n      influencer = {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        countryCode: \"+1\",\n        product: \"\",\n        profileLink: \"\",\n        // commission: \"\",\n        sales: \"\",\n        profilePicture: \"\"\n      };\n      isDirty = {\n        name: false,\n        email: false,\n        phone: false,\n        profilePicture: false,\n        profileLink: false\n      };\n      errors = {};\n\n      _this.setState({\n        influencer: influencer,\n        errors: errors,\n        isDirty: isDirty\n      }, function () {\n        console.log(influencer, errors);\n\n        _this.props.toggle();\n      });\n    };\n\n    _this._saveUser = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var Influencerdata, formData, uploadImgRes;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"save user\", _this.state.influencer);\n\n              _this.setState({\n                loading: true\n              });\n\n              Influencerdata = {\n                name: {\n                  first: _this.state.influencer.name.split(\" \")[0],\n                  last: _this.state.influencer.name.split(\" \")[1] ? _this.state.influencer.name.split(\" \")[1] : ' '\n                },\n                email: _this.state.influencer.email,\n                url: _this.state.influencer.profileLink,\n                profileLink: _this.state.influencer.profileLink,\n                profilePicture: _this.state.influencer.profilePicture,\n                phoneCountry: _this.state.influencer.countryCode ? countryCodes.find(function (e) {\n                  return _this.state.influencer.countryCode === e.dial_code;\n                }).code : 'US',\n                phone: \"(\" + _this.state.influencer.countryCode + \")\" + _this.state.influencer.phone\n              };\n\n              if (!_this.state.influencer.profilePicture) {\n                _context.next = 17;\n                break;\n              }\n\n              formData = new FormData();\n              formData.append('file', _this.state.influencer.profilePictureObj);\n              _context.next = 8;\n              return uploadImageOnCloudinary(formData);\n\n            case 8:\n              uploadImgRes = _context.sent;\n              console.log('uploadImgRes: ', uploadImgRes);\n\n              if (!(uploadImgRes && uploadImgRes.url)) {\n                _context.next = 14;\n                break;\n              }\n\n              _this.state.influencerDetails.profilePicture = uploadImgRes.url;\n              _context.next = 17;\n              break;\n\n            case 14:\n              ToastsStore.error('Somthing went wrong, Try again!', 3000);\n\n              _this._closeModal();\n\n              return _context.abrupt(\"return\");\n\n            case 17:\n              if (_this.props.type === \"add\" && !_this.props.data) {\n                createInfluencer(Influencerdata).then(function (response) {\n                  console.log(response);\n\n                  _this.setState({\n                    loading: false\n                  });\n\n                  ToastsStore.success(\"Influencer user added Successfully.\", 3000);\n\n                  _this.props.reloadSellerList();\n\n                  _this._closeModal();\n                }, function (error) {\n                  console.log(error); // ToastsStore.error(error.reason, 3000);\n\n                  showToast(error.reason && error.reason.length ? error.reason : \"Server error. Try again after sometime.\", \"error\");\n\n                  _this.setState({\n                    loading: false\n                  });\n                });\n              } else if (_this.props.type === \"edit\" && _this.props.data.id) {\n                editInfluencer(Influencerdata, _this.props.data.id).then(function (response) {\n                  console.log(response);\n\n                  _this.setState({\n                    loading: false\n                  });\n\n                  ToastsStore.success(\"Influencer user updated Successfully.\", 3000);\n\n                  _this.props.reloadInfluencerList();\n\n                  _this._closeModal();\n                }, function (error) {\n                  console.log(error); // ToastsStore.error(error.reason, 3000);\n\n                  showToast(error.reason && error.reason.length ? error.reason : \"Server error. Try again after sometime.\", \"error\");\n\n                  _this.setState({\n                    loading: false\n                  });\n                });\n              } else {\n                ToastsStore.error('Somthing went wrong, Try again!', 3000);\n\n                _this._closeModal();\n              }\n\n              ;\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this._handleOnChange = function (_ref2) {\n      var currentTarget = _ref2.currentTarget;\n      // console.log(currentTarget);\n      var _this$state2 = _this.state,\n          influencer = _this$state2.influencer,\n          isDirty = _this$state2.isDirty;\n      influencer[currentTarget.name] = currentTarget.value;\n      isDirty[currentTarget.name] = true;\n\n      _this.setState({\n        influencer: influencer\n      });\n\n      _this._validateForm();\n    };\n\n    _this._handleOnSubmit = function (event) {\n      event.preventDefault();\n      var isDirty = _this.state.isDirty;\n      isDirty.name = true;\n      isDirty.email = true;\n      isDirty.phone = true;\n      isDirty.profileLink = true;\n\n      _this.setState({\n        isDirty: isDirty\n      });\n\n      console.log(_this.state.isDirty);\n\n      var errors = _this._validateForm();\n\n      console.log(errors);\n\n      if (!errors) {\n        console.log(\"Make API call\"); // this._saveUser();\n      }\n\n      console.log(_this.state.influencer);\n    };\n\n    _this._updateCountryCode = function (value) {\n      var influencer = _this.state.influencer;\n      influencer[\"countryCode\"] = value;\n\n      _this.setState({\n        influencer: influencer\n      });\n    };\n\n    _this._makeModalHeader = function () {\n      switch (_this.props.type) {\n        case \"add\":\n          return \"Add Influencer\";\n\n        case \"edit\":\n          return \"Edit Influencer\";\n\n        case \"view\":\n          return \"Influencer Details\";\n          break;\n\n        default: // code block\n\n      }\n    };\n\n    _this._resetForm = function () {\n      var influencer = {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        countryCode: \"+1\",\n        product: \"\",\n        profileLink: \"\",\n        commission: \"\",\n        sales: \"\"\n      };\n\n      _this.setState({\n        influencer: influencer\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddInfluencerModal, [{\n    key: \"_validateForm\",\n\n    /**\n     * To Validate the form and show the error messages\n     */\n    value: function _validateForm() {\n      var _this$state3 = this.state,\n          influencer = _this$state3.influencer,\n          errors = _this$state3.errors,\n          isDirty = _this$state3.isDirty; // console.log(influencer, isDirty);\n\n      Object.keys(influencer).forEach(function (each) {\n        if (each === \"email\" && isDirty.email) {\n          if (!influencer.email.trim().length) {\n            errors.email = \"Email is Required\";\n          } else if (influencer.email.trim().length && !new RegExp(\"^[a-zA-Z0-9]{1}[a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,3}$\").test(influencer.email)) {\n            errors.email = \"Please enter valid Email\";\n          } else {\n            delete errors[each];\n            isDirty.email = false;\n          }\n        } else if (each === \"name\" && isDirty.name) {\n          if (!influencer.name.trim().length) {\n            // console.log(admin.password);\n            errors[each] = \"Name is Required\";\n          } else {\n            delete errors[each];\n            isDirty.name = false;\n          }\n        } else if (each === \"phone\" && isDirty.phone) {\n          if (!influencer.phone.trim().length) {\n            // console.log(admin.password);\n            errors[each] = \"Phone is Required\";\n          } else if (!config.regexConfig.phone.test(String(influencer.phone).toLowerCase())) {\n            errors[each] = \"Enter valid phone number\";\n          } else {\n            delete errors[each];\n            isDirty.phone = false;\n          }\n        } else if (each === \"profileLink\" && isDirty.profileLink) {\n          if (!influencer.profileLink.trim().length) {\n            // console.log(admin.password);\n            errors[each] = \"ProfileLink is Required\";\n          } else if (!new RegExp(config.regexConfig.profileLink).test(String(influencer.profileLink).toLowerCase())) {\n            errors[each] = \"Enter valid Profile Link, i.e. https://facebook.com\";\n          } else {\n            delete errors[each];\n            isDirty.profileLink = false;\n          }\n        }\n      });\n      console.log(errors);\n      this.setState({\n        errors: errors\n      });\n      return Object.keys(errors).length ? errors : null;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(previousProps, previousState) {\n      // influencer: {\n      //   name: \"\",\n      //   email: \"\",\n      //   phone: \"\",\n      //   countryCode: \"+1\",\n      //   product: \"\",\n      //   profileLink: \"\",\n      //   commission: \"\",\n      //   sales: \"\",\n      // },\n      // console.log('previousProps :', previousProps, this.props);\n      if (this.props.data && previousProps.isOpen !== this.props.isOpen) {\n        console.log(\"object :\", this.props.data);\n\n        if (this.props.type !== \"add\" && this.props.data) {\n          var influencer = this.state.influencer;\n          influencer.name = this.props.data.name;\n          influencer.email = this.props.data.email;\n          influencer.phone = this.props.data.phone;\n          influencer.product = this.props.data.product;\n          influencer.profileLink = this.props.data.profileLink;\n          influencer.commission = this.props.data.commission;\n          influencer.sales = this.props.data.sales;\n          this.setState({\n            influencer: influencer\n          });\n        } else if (this.props.type === \"add\") {\n          console.log(\"here in add mode :\");\n\n          this._resetForm();\n        }\n      } else if (!this.props.data && previousProps.isOpen !== this.props.isOpen) {\n        this._resetForm();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state4 = this.state,\n          influencer = _this$state4.influencer,\n          loading = _this$state4.loading;\n      return /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.props.isOpen,\n        toggle: function toggle() {\n          return _this2._closeModal();\n        },\n        className: \"modal-dialog-centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this._handleOnSubmit,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this2._closeModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }\n      }, this._makeModalHeader()), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 19\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Enter\",\n        name: \"name\",\n        value: influencer.name,\n        onChange: this._handleOnChange,\n        className: this.state.errors && this.state.errors.name ? \"validation-error\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 19\n        }\n      }), this.state.errors && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"validation-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }\n      }, this.state.errors.name)), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 19\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"email\",\n        placeholder: \"Enter\",\n        name: \"email\",\n        value: influencer.email,\n        onChange: this._handleOnChange,\n        className: this.state.errors && this.state.errors.email ? \"validation-error\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 19\n        }\n      }), this.state.errors && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"validation-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }\n      }, this.state.errors.email))), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        accept: \".jpg\",\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        xs: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"phone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 19\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"selectCountryCode\",\n        id: \"selectCountryCode\",\n        onChange: function onChange(e) {\n          return _this2._updateCountryCode(e.target.value);\n        },\n        value: influencer.countryCode.value,\n        style: {\n          maxWidth: \"105px\",\n          padding: \"4px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }\n      }, countryCodes.map(function (countryCode, countryIndex) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: countryIndex,\n          value: countryCode.dial_code,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 25\n          }\n        }, countryCode.code, \" (\", countryCode.dial_code, \")\");\n      })), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"phone\",\n        placeholder: \"Enter\",\n        name: \"phone\",\n        value: influencer.phone,\n        onChange: this._handleOnChange,\n        className: this.state.errors && this.state.errors.phone ? \"validation-error\" : \"\",\n        style: {\n          maxWidth: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }\n      })), this.state.errors && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"validation-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 21\n        }\n      }, this.state.errors.phone)), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"profileLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 19\n        }\n      }, \"Profile Link\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"profileLink\",\n        placeholder: \"Enter\",\n        name: \"profileLink\",\n        value: influencer.profileLink,\n        onChange: this._handleOnChange,\n        className: this.state.errors && this.state.errors.profileLink ? \"validation-error\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 19\n        }\n      }), this.state.errors && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"validation-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 21\n        }\n      }, this.state.errors.profileLink)), \" \"), this.props.type !== \"add\" ? /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"product\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }\n      }, \"Product\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 21\n        }\n      }, \"20\")), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"commission\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 21\n        }\n      }, \"Commission\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"Number\",\n        id: \"commission\",\n        placeholder: \"Enter\",\n        name: \"commission\",\n        value: influencer.commission,\n        onChange: this._handleOnChange,\n        className: this.state.errors && this.state.errors.commission ? \"validation-error\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 21\n        }\n      }), this.state.errors && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"validation-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 23\n        }\n      }, this.state.errors.commission)), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"sales\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }\n      }, \"Sales\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }\n      }, influencer.sales))) : null)), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"dark\",\n        outline: true,\n        type: \"button\",\n        className: \"btn-pill\",\n        onClick: function onClick() {\n          return _this2._closeModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }\n      }, \"Cancel\"), this.props.type == \"add\" ? /*#__PURE__*/React.createElement(Button, {\n        className: \"BtnPurple\",\n        type: \"submit\",\n        disabled: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 15\n        }\n      }, loading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-spin mr5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 21\n        }\n      }), \"\\xA0\") : null, \"Add Influencer\") : this.props.type == \"edit\" ? /*#__PURE__*/React.createElement(Button, {\n        className: \"BtnPurple\",\n        type: \"submit\",\n        disabled: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 15\n        }\n      }, loading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-spin mr5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 21\n        }\n      }), \"\\xA0\") : null, \"Update Influencer\") : null)));\n    }\n  }]);\n\n  return AddInfluencerModal;\n}(Component);\n\nexport default AddInfluencerModal;","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/add-influencer-modal.jsx"],"names":["React","Component","Modal","ModalBody","ModalFooter","ModalHeader","Button","Row","Col","Input","Label","FormGroup","Form","createAdmin","uploadImageOnCloudinary","createInfluencer","getInfluencerById","editInfluencer","ToastsStore","showToast","countryCodes","config","AddInfluencerModal","state","influencer","name","email","phone","countryCode","product","profileLink","sales","profilePicture","errors","isDirty","loading","_closeModal","setState","console","log","props","toggle","_saveUser","Influencerdata","first","split","last","url","phoneCountry","find","e","dial_code","code","formData","FormData","append","profilePictureObj","uploadImgRes","influencerDetails","error","type","data","then","response","success","reloadSellerList","reason","length","id","reloadInfluencerList","_handleOnChange","currentTarget","value","_validateForm","_handleOnSubmit","event","preventDefault","_updateCountryCode","_makeModalHeader","_resetForm","commission","Object","keys","forEach","each","trim","RegExp","test","regexConfig","String","toLowerCase","previousProps","previousState","isOpen","display","target","maxWidth","padding","map","countryIndex"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,WAJF,CAKE;AALF,EAMEC,MANF,CAOE;AACA;AARF,EASEC,GATF,EAUEC,GAVF,EAWEC,KAXF,EAYEC,KAZF,EAaEC,SAbF,EAcEC,IAdF,QAeO,YAfP;AAgBA,SAASC,WAAT,EAAsBC,uBAAtB,EAA8CC,gBAA9C,EACEC,iBADF,EAEEC,cAFF,QAEyB,oBAFzB,C,CAGA;;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;IAEMC,kB;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE;AACVC,QAAAA,IAAI,EAAE,EADI;AAEVC,QAAAA,KAAK,EAAE,EAFG;AAGVC,QAAAA,KAAK,EAAE,EAHG;AAIVC,QAAAA,WAAW,EAAE,IAJH;AAKVC,QAAAA,OAAO,EAAE,EALC;AAMVC,QAAAA,WAAW,EAAE,EANH;AAOV;AACAC,QAAAA,KAAK,EAAE,EARG;AASVC,QAAAA,cAAc,EAAE;AATN,OADN;AAYNC,MAAAA,MAAM,EAAE,EAZF;AAaNC,MAAAA,OAAO,EAAE;AACPT,QAAAA,IAAI,EAAE,KADC;AAEPC,QAAAA,KAAK,EAAE,KAFA;AAGPC,QAAAA,KAAK,EAAE,KAHA;AAIPK,QAAAA,cAAc,EAAC,KAJR;AAKPF,QAAAA,WAAW,EAAC;AALL,OAbH;AAoBNK,MAAAA,OAAO,EAAE;AApBH,K;;UAuBRC,W,GAAc,YAAM;AAAA,wBACoB,MAAKb,KADzB;AAAA,UACZC,UADY,eACZA,UADY;AAAA,UACAS,MADA,eACAA,MADA;AAAA,UACQC,OADR,eACQA,OADR;AAElBV,MAAAA,UAAU,GAAG;AACXC,QAAAA,IAAI,EAAE,EADK;AAEXC,QAAAA,KAAK,EAAE,EAFI;AAGXC,QAAAA,KAAK,EAAE,EAHI;AAIXC,QAAAA,WAAW,EAAE,IAJF;AAKXC,QAAAA,OAAO,EAAE,EALE;AAMXC,QAAAA,WAAW,EAAE,EANF;AAOX;AACAC,QAAAA,KAAK,EAAE,EARI;AASXC,QAAAA,cAAc,EAAE;AATL,OAAb;AAWAE,MAAAA,OAAO,GAAG;AACRT,QAAAA,IAAI,EAAE,KADE;AAERC,QAAAA,KAAK,EAAE,KAFC;AAGRC,QAAAA,KAAK,EAAE,KAHC;AAIRK,QAAAA,cAAc,EAAC,KAJP;AAKRF,QAAAA,WAAW,EAAC;AALJ,OAAV;AAOAG,MAAAA,MAAM,GAAG,EAAT;;AACA,YAAKI,QAAL,CAAc;AAAEb,QAAAA,UAAU,EAAVA,UAAF;AAAcS,QAAAA,MAAM,EAANA,MAAd;AAAsBC,QAAAA,OAAO,EAAPA;AAAtB,OAAd,EAA+C,YAAM;AACnDI,QAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ,EAAwBS,MAAxB;;AACA,cAAKO,KAAL,CAAWC,MAAX;AACD,OAHD;AAID,K;;UAEDC,S,yEAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AACRJ,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,MAAKhB,KAAL,CAAWC,UAApC;;AACA,oBAAKa,QAAL,CAAc;AAAEF,gBAAAA,OAAO,EAAE;AAAX,eAAd;;AACIQ,cAAAA,cAHI,GAGa;AACnBlB,gBAAAA,IAAI,EAAE;AACJmB,kBAAAA,KAAK,EAAE,MAAKrB,KAAL,CAAWC,UAAX,CAAsBC,IAAtB,CAA2BoB,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CADH;AAEJC,kBAAAA,IAAI,EAAE,MAAKvB,KAAL,CAAWC,UAAX,CAAsBC,IAAtB,CAA2BoB,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,IAA0C,MAAKtB,KAAL,CAAWC,UAAX,CAAsBC,IAAtB,CAA2BoB,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAA1C,GAAqF;AAFvF,iBADa;AAKnBnB,gBAAAA,KAAK,EAAE,MAAKH,KAAL,CAAWC,UAAX,CAAsBE,KALV;AAMnBqB,gBAAAA,GAAG,EAAE,MAAKxB,KAAL,CAAWC,UAAX,CAAsBM,WANR;AAOnBA,gBAAAA,WAAW,EAAE,MAAKP,KAAL,CAAWC,UAAX,CAAsBM,WAPhB;AASnBE,gBAAAA,cAAc,EAAE,MAAKT,KAAL,CAAWC,UAAX,CAAsBQ,cATnB;AAUnBgB,gBAAAA,YAAY,EAAE,MAAKzB,KAAL,CAAWC,UAAX,CAAsBI,WAAtB,GAAoCR,YAAY,CAAC6B,IAAb,CAAkB,UAAAC,CAAC;AAAA,yBAAI,MAAK3B,KAAL,CAAWC,UAAX,CAAsBI,WAAtB,KAAsCsB,CAAC,CAACC,SAA5C;AAAA,iBAAnB,EAA0EC,IAA9G,GAAqH,IAVhH;AAWnBzB,gBAAAA,KAAK,EACH,MACA,MAAKJ,KAAL,CAAWC,UAAX,CAAsBI,WADtB,GAEA,GAFA,GAGA,MAAKL,KAAL,CAAWC,UAAX,CAAsBG;AAfL,eAHb;;AAAA,mBAoBL,MAAKJ,KAAL,CAAWC,UAAX,CAAsBQ,cApBjB;AAAA;AAAA;AAAA;;AAqBAqB,cAAAA,QArBA,GAqBW,IAAIC,QAAJ,EArBX;AAsBND,cAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuB,MAAKhC,KAAL,CAAWC,UAAX,CAAsBgC,iBAA7C;AAtBM;AAAA,qBAuBqB1C,uBAAuB,CAACuC,QAAD,CAvB5C;;AAAA;AAuBAI,cAAAA,YAvBA;AAwBNnB,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BkB,YAA7B;;AAxBM,oBAyBHA,YAAY,IAAIA,YAAY,CAACV,GAzB1B;AAAA;AAAA;AAAA;;AA0BJ,oBAAKxB,KAAL,CAAWmC,iBAAX,CAA6B1B,cAA7B,GAA8CyB,YAAY,CAACV,GAA3D;AA1BI;AAAA;;AAAA;AA4BF7B,cAAAA,WAAW,CAACyC,KAAZ,CAAkB,iCAAlB,EAAqD,IAArD;;AACA,oBAAKvB,WAAL;;AA7BE;;AAAA;AAiCV,kBAAI,MAAKI,KAAL,CAAWoB,IAAX,KAAoB,KAApB,IAA6B,CAAC,MAAKpB,KAAL,CAAWqB,IAA7C,EAAmD;AACjD9C,gBAAAA,gBAAgB,CAAC4B,cAAD,CAAhB,CAAiCmB,IAAjC,CACE,UAACC,QAAD,EAAc;AACZzB,kBAAAA,OAAO,CAACC,GAAR,CAAYwB,QAAZ;;AACA,wBAAK1B,QAAL,CAAc;AAAEF,oBAAAA,OAAO,EAAE;AAAX,mBAAd;;AACAjB,kBAAAA,WAAW,CAAC8C,OAAZ,CAAoB,qCAApB,EAA2D,IAA3D;;AACA,wBAAKxB,KAAL,CAAWyB,gBAAX;;AACA,wBAAK7B,WAAL;AACD,iBAPH,EAQE,UAACuB,KAAD,EAAW;AACTrB,kBAAAA,OAAO,CAACC,GAAR,CAAYoB,KAAZ,EADS,CAET;;AACAxC,kBAAAA,SAAS,CACPwC,KAAK,CAACO,MAAN,IAAgBP,KAAK,CAACO,MAAN,CAAaC,MAA7B,GACIR,KAAK,CAACO,MADV,GAEI,yCAHG,EAIP,OAJO,CAAT;;AAMA,wBAAK7B,QAAL,CAAc;AAAEF,oBAAAA,OAAO,EAAE;AAAX,mBAAd;AACD,iBAlBH;AAmBE,eApBJ,MAoBU,IAAI,MAAKK,KAAL,CAAWoB,IAAX,KAAoB,MAApB,IAA8B,MAAKpB,KAAL,CAAWqB,IAAX,CAAgBO,EAAlD,EAAsD;AAC5DnD,gBAAAA,cAAc,CAAC0B,cAAD,EAAiB,MAAKH,KAAL,CAAWqB,IAAX,CAAgBO,EAAjC,CAAd,CACCN,IADD,CAEE,UAACC,QAAD,EAAc;AACZzB,kBAAAA,OAAO,CAACC,GAAR,CAAYwB,QAAZ;;AACA,wBAAK1B,QAAL,CAAc;AAAEF,oBAAAA,OAAO,EAAE;AAAX,mBAAd;;AACAjB,kBAAAA,WAAW,CAAC8C,OAAZ,CAAoB,uCAApB,EAA6D,IAA7D;;AACA,wBAAKxB,KAAL,CAAW6B,oBAAX;;AACA,wBAAKjC,WAAL;AACD,iBARH,EASE,UAACuB,KAAD,EAAW;AACTrB,kBAAAA,OAAO,CAACC,GAAR,CAAYoB,KAAZ,EADS,CAET;;AACAxC,kBAAAA,SAAS,CACPwC,KAAK,CAACO,MAAN,IAAgBP,KAAK,CAACO,MAAN,CAAaC,MAA7B,GACIR,KAAK,CAACO,MADV,GAEI,yCAHG,EAIP,OAJO,CAAT;;AAMA,wBAAK7B,QAAL,CAAc;AAAEF,oBAAAA,OAAO,EAAE;AAAX,mBAAd;AACD,iBAnBH;AAqBH,eAtBS,MAsBH;AACHjB,gBAAAA,WAAW,CAACyC,KAAZ,CAAkB,iCAAlB,EAAqD,IAArD;;AACA,sBAAKvB,WAAL;AACH;;AAAA;;AA9ES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAiFVkC,e,GAAkB,iBAAuB;AAAA,UAApBC,aAAoB,SAApBA,aAAoB;AACvC;AADuC,yBAEP,MAAKhD,KAFE;AAAA,UAE/BC,UAF+B,gBAE/BA,UAF+B;AAAA,UAEnBU,OAFmB,gBAEnBA,OAFmB;AAGvCV,MAAAA,UAAU,CAAC+C,aAAa,CAAC9C,IAAf,CAAV,GAAiC8C,aAAa,CAACC,KAA/C;AACAtC,MAAAA,OAAO,CAACqC,aAAa,CAAC9C,IAAf,CAAP,GAA8B,IAA9B;;AACA,YAAKY,QAAL,CAAc;AAAEb,QAAAA,UAAU,EAAVA;AAAF,OAAd;;AACA,YAAKiD,aAAL;AACD,K;;UAKDC,e,GAAkB,UAACC,KAAD,EAAW;AAC3BA,MAAAA,KAAK,CAACC,cAAN;AAD2B,UAEnB1C,OAFmB,GAEP,MAAKX,KAFE,CAEnBW,OAFmB;AAG3BA,MAAAA,OAAO,CAACT,IAAR,GAAe,IAAf;AACAS,MAAAA,OAAO,CAACR,KAAR,GAAgB,IAAhB;AACAQ,MAAAA,OAAO,CAACP,KAAR,GAAgB,IAAhB;AACAO,MAAAA,OAAO,CAACJ,WAAR,GAAsB,IAAtB;;AACA,YAAKO,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAPA;AAAF,OAAd;;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKhB,KAAL,CAAWW,OAAvB;;AACA,UAAID,MAAM,GAAG,MAAKwC,aAAL,EAAb;;AACAnC,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;;AACA,UAAI,CAACA,MAAL,EAAa;AACXK,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EADW,CAEX;AACD;;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKhB,KAAL,CAAWC,UAAvB;AACD,K;;UAiEDqD,kB,GAAqB,UAACL,KAAD,EAAW;AAAA,UACtBhD,UADsB,GACP,MAAKD,KADE,CACtBC,UADsB;AAE9BA,MAAAA,UAAU,CAAC,aAAD,CAAV,GAA4BgD,KAA5B;;AACA,YAAKnC,QAAL,CAAc;AAAEb,QAAAA,UAAU,EAAVA;AAAF,OAAd;AACD,K;;UAmCDsD,gB,GAAmB,YAAM;AACvB,cAAQ,MAAKtC,KAAL,CAAWoB,IAAnB;AACE,aAAK,KAAL;AACE,iBAAO,gBAAP;;AACF,aAAK,MAAL;AACE,iBAAO,iBAAP;;AACF,aAAK,MAAL;AACE,iBAAO,oBAAP;AACA;;AACF,gBARF,CASE;;AATF;AAWD,K;;UACDmB,U,GAAa,YAAM;AACjB,UAAIvD,UAAU,GAAG;AACfC,QAAAA,IAAI,EAAE,EADS;AAEfC,QAAAA,KAAK,EAAE,EAFQ;AAGfC,QAAAA,KAAK,EAAE,EAHQ;AAIfC,QAAAA,WAAW,EAAE,IAJE;AAKfC,QAAAA,OAAO,EAAE,EALM;AAMfC,QAAAA,WAAW,EAAE,EANE;AAOfkD,QAAAA,UAAU,EAAE,EAPG;AAQfjD,QAAAA,KAAK,EAAE;AARQ,OAAjB;;AAWA,YAAKM,QAAL,CAAc;AAAEb,QAAAA,UAAU,EAAVA;AAAF,OAAd;AACD,K;;;;;;;;AAhID;;;oCAGgB;AAAA,yBAC0B,KAAKD,KAD/B;AAAA,UACNC,UADM,gBACNA,UADM;AAAA,UACMS,MADN,gBACMA,MADN;AAAA,UACcC,OADd,gBACcA,OADd,EAEd;;AACA+C,MAAAA,MAAM,CAACC,IAAP,CAAY1D,UAAZ,EAAwB2D,OAAxB,CAAgC,UAACC,IAAD,EAAU;AACxC,YAAIA,IAAI,KAAK,OAAT,IAAoBlD,OAAO,CAACR,KAAhC,EAAuC;AACrC,cAAI,CAACF,UAAU,CAACE,KAAX,CAAiB2D,IAAjB,GAAwBlB,MAA7B,EAAqC;AACnClC,YAAAA,MAAM,CAACP,KAAP,GAAe,mBAAf;AACD,WAFD,MAEO,IACLF,UAAU,CAACE,KAAX,CAAiB2D,IAAjB,GAAwBlB,MAAxB,IACA,CAAC,IAAImB,MAAJ,CACC,iEADD,EAECC,IAFD,CAEM/D,UAAU,CAACE,KAFjB,CAFI,EAKL;AACAO,YAAAA,MAAM,CAACP,KAAP,GAAe,0BAAf;AACD,WAPM,MAOA;AACL,mBAAOO,MAAM,CAACmD,IAAD,CAAb;AACAlD,YAAAA,OAAO,CAACR,KAAR,GAAgB,KAAhB;AACD;AACF,SAdD,MAcO,IAAI0D,IAAI,KAAK,MAAT,IAAmBlD,OAAO,CAACT,IAA/B,EAAqC;AAC1C,cAAI,CAACD,UAAU,CAACC,IAAX,CAAgB4D,IAAhB,GAAuBlB,MAA5B,EAAoC;AAClC;AACAlC,YAAAA,MAAM,CAACmD,IAAD,CAAN,GAAe,kBAAf;AACD,WAHD,MAGO;AACL,mBAAOnD,MAAM,CAACmD,IAAD,CAAb;AACAlD,YAAAA,OAAO,CAACT,IAAR,GAAe,KAAf;AACD;AACF,SARM,MAQA,IAAI2D,IAAI,KAAK,OAAT,IAAoBlD,OAAO,CAACP,KAAhC,EAAuC;AAC5C,cAAI,CAACH,UAAU,CAACG,KAAX,CAAiB0D,IAAjB,GAAwBlB,MAA7B,EAAqC;AACnC;AACAlC,YAAAA,MAAM,CAACmD,IAAD,CAAN,GAAe,mBAAf;AACD,WAHD,MAGO,IACL,CAAC/D,MAAM,CAACmE,WAAP,CAAmB7D,KAAnB,CAAyB4D,IAAzB,CAA8BE,MAAM,CAACjE,UAAU,CAACG,KAAZ,CAAN,CAAyB+D,WAAzB,EAA9B,CADI,EAEL;AACAzD,YAAAA,MAAM,CAACmD,IAAD,CAAN,GAAe,0BAAf;AACD,WAJM,MAIA;AACL,mBAAOnD,MAAM,CAACmD,IAAD,CAAb;AACAlD,YAAAA,OAAO,CAACP,KAAR,GAAgB,KAAhB;AACD;AACF,SAZM,MAYD,IAAIyD,IAAI,KAAK,aAAT,IAA0BlD,OAAO,CAACJ,WAAtC,EAAmD;AACvD,cAAI,CAACN,UAAU,CAACM,WAAX,CAAuBuD,IAAvB,GAA8BlB,MAAnC,EAA2C;AACzC;AACAlC,YAAAA,MAAM,CAACmD,IAAD,CAAN,GAAe,yBAAf;AACD,WAHD,MAGO,IACL,CAAC,IAAIE,MAAJ,CACCjE,MAAM,CAACmE,WAAP,CAAmB1D,WADpB,EAGAyD,IAHA,CAGKE,MAAM,CAACjE,UAAU,CAACM,WAAZ,CAAN,CAA+B4D,WAA/B,EAHL,CADI,EAKL;AACAzD,YAAAA,MAAM,CAACmD,IAAD,CAAN,GAAe,qDAAf;AACD,WAPM,MAOA;AACL,mBAAOnD,MAAM,CAACmD,IAAD,CAAb;AACAlD,YAAAA,OAAO,CAACJ,WAAR,GAAsB,KAAtB;AACD;AACF;AACF,OAnDD;AAoDAQ,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAANA;AAAF,OAAd;AACA,aAAOgD,MAAM,CAACC,IAAP,CAAYjD,MAAZ,EAAoBkC,MAApB,GAA6BlC,MAA7B,GAAsC,IAA7C;AACD;;;uCAQkB0D,a,EAAeC,a,EAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAI,KAAKpD,KAAL,CAAWqB,IAAX,IAAmB8B,aAAa,CAACE,MAAd,KAAyB,KAAKrD,KAAL,CAAWqD,MAA3D,EAAmE;AACjEvD,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKC,KAAL,CAAWqB,IAAnC;;AACA,YAAI,KAAKrB,KAAL,CAAWoB,IAAX,KAAoB,KAApB,IAA6B,KAAKpB,KAAL,CAAWqB,IAA5C,EAAkD;AAAA,cAC1CrC,UAD0C,GAC3B,KAAKD,KADsB,CAC1CC,UAD0C;AAEhDA,UAAAA,UAAU,CAACC,IAAX,GAAkB,KAAKe,KAAL,CAAWqB,IAAX,CAAgBpC,IAAlC;AACAD,UAAAA,UAAU,CAACE,KAAX,GAAmB,KAAKc,KAAL,CAAWqB,IAAX,CAAgBnC,KAAnC;AACAF,UAAAA,UAAU,CAACG,KAAX,GAAmB,KAAKa,KAAL,CAAWqB,IAAX,CAAgBlC,KAAnC;AACAH,UAAAA,UAAU,CAACK,OAAX,GAAqB,KAAKW,KAAL,CAAWqB,IAAX,CAAgBhC,OAArC;AACAL,UAAAA,UAAU,CAACM,WAAX,GAAyB,KAAKU,KAAL,CAAWqB,IAAX,CAAgB/B,WAAzC;AACAN,UAAAA,UAAU,CAACwD,UAAX,GAAwB,KAAKxC,KAAL,CAAWqB,IAAX,CAAgBmB,UAAxC;AACAxD,UAAAA,UAAU,CAACO,KAAX,GAAmB,KAAKS,KAAL,CAAWqB,IAAX,CAAgB9B,KAAnC;AAEA,eAAKM,QAAL,CAAc;AAAEb,YAAAA,UAAU,EAAVA;AAAF,WAAd;AACD,SAXD,MAWO,IAAI,KAAKgB,KAAL,CAAWoB,IAAX,KAAoB,KAAxB,EAA+B;AACpCtB,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,eAAKwC,UAAL;AACD;AACF,OAjBD,MAiBO,IAAI,CAAC,KAAKvC,KAAL,CAAWqB,IAAZ,IAAoB8B,aAAa,CAACE,MAAd,KAAyB,KAAKrD,KAAL,CAAWqD,MAA5D,EAAoE;AACzE,aAAKd,UAAL;AACD;AACF;;;6BA4BQ;AAAA;;AAAA,yBACuB,KAAKxD,KAD5B;AAAA,UACDC,UADC,gBACDA,UADC;AAAA,UACWW,OADX,gBACWA,OADX;AAEP,0BACE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAE,KAAKK,KAAL,CAAWqD,MADrB;AAEE,QAAA,MAAM,EAAE;AAAA,iBAAM,MAAI,CAACzD,WAAL,EAAN;AAAA,SAFV;AAGE,QAAA,SAAS,EAAC,uBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKsC,eAArB;AAAsC,QAAA,UAAU,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAE;AAAA,iBAAM,MAAI,CAACtC,WAAL,EAAN;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,KAAK0C,gBAAL,EAFH,CADF,eAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,KAAK,EAAEtD,UAAU,CAACC,IALpB;AAME,QAAA,QAAQ,EAAE,KAAK6C,eANjB;AAOE,QAAA,SAAS,EACP,KAAK/C,KAAL,CAAWU,MAAX,IAAqB,KAAKV,KAAL,CAAWU,MAAX,CAAkBR,IAAvC,GACI,kBADJ,GAEI,EAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAeG,KAAKF,KAAL,CAAWU,MAAX,iBACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,KAAL,CAAWU,MAAX,CAAkBR,IADrB,CAhBJ,CADF,eAsBE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,KAAK,EAAED,UAAU,CAACE,KALpB;AAME,QAAA,QAAQ,EAAE,KAAK4C,eANjB;AAOE,QAAA,SAAS,EACP,KAAK/C,KAAL,CAAWU,MAAX,IAAqB,KAAKV,KAAL,CAAWU,MAAX,CAAkBP,KAAvC,GACI,kBADJ,GAEI,EAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAeG,KAAKH,KAAL,CAAWU,MAAX,iBACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,KAAL,CAAWU,MAAX,CAAkBP,KADrB,CAhBJ,CAtBF,CADF,eA6CE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,MAAM,EAAC,MAA1B;AAAiC,QAAA,SAAS,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CA7CF,eA0DE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAK,QAAA,KAAK,EAAE;AAAEoE,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,IAAI,EAAC,mBAFP;AAGE,QAAA,EAAE,EAAC,mBAHL;AAIE,QAAA,QAAQ,EAAE,kBAAC5C,CAAD;AAAA,iBAAO,MAAI,CAAC2B,kBAAL,CAAwB3B,CAAC,CAAC6C,MAAF,CAASvB,KAAjC,CAAP;AAAA,SAJZ;AAKE,QAAA,KAAK,EAAEhD,UAAU,CAACI,WAAX,CAAuB4C,KALhC;AAME,QAAA,KAAK,EAAE;AAAEwB,UAAAA,QAAQ,EAAE,OAAZ;AAAqBC,UAAAA,OAAO,EAAE;AAA9B,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQG7E,YAAY,CAAC8E,GAAb,CAAiB,UAACtE,WAAD,EAAcuE,YAAd;AAAA,4BAChB;AACE,UAAA,GAAG,EAAEA,YADP;AAEE,UAAA,KAAK,EAAEvE,WAAW,CAACuB,SAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIGvB,WAAW,CAACwB,IAJf,QAIuBxB,WAAW,CAACuB,SAJnC,MADgB;AAAA,OAAjB,CARH,CADF,eAkBE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,KAAK,EAAE3B,UAAU,CAACG,KALpB;AAME,QAAA,QAAQ,EAAE,KAAK2C,eANjB;AAOE,QAAA,SAAS,EACP,KAAK/C,KAAL,CAAWU,MAAX,IAAqB,KAAKV,KAAL,CAAWU,MAAX,CAAkBN,KAAvC,GACI,kBADJ,GAEI,EAVR;AAYE,QAAA,KAAK,EAAE;AAAEqE,UAAAA,QAAQ,EAAE;AAAZ,SAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,CAFF,EAmCG,KAAKzE,KAAL,CAAWU,MAAX,iBACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,KAAL,CAAWU,MAAX,CAAkBN,KADrB,CApCJ,CADF,eA0CE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,aAFL;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,IAAI,EAAC,aAJP;AAKE,QAAA,KAAK,EAAEH,UAAU,CAACM,WALpB;AAME,QAAA,QAAQ,EAAE,KAAKwC,eANjB;AAOE,QAAA,SAAS,EACP,KAAK/C,KAAL,CAAWU,MAAX,IAAqB,KAAKV,KAAL,CAAWU,MAAX,CAAkBH,WAAvC,GACI,kBADJ,GAEI,EAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAeG,KAAKP,KAAL,CAAWU,MAAX,iBACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,KAAL,CAAWU,MAAX,CAAkBH,WADrB,CAhBJ,CA1CF,EA8De,GA9Df,CA1DF,EA0HG,KAAKU,KAAL,CAAWoB,IAAX,KAAoB,KAApB,gBACC,0CACG,GADH,eAEE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,CAFF,eAgBE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,EAAE,EAAC,YAFL;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,IAAI,EAAC,YAJP;AAKE,QAAA,KAAK,EAAEpC,UAAU,CAACwD,UALpB;AAME,QAAA,QAAQ,EAAE,KAAKV,eANjB;AAOE,QAAA,SAAS,EACP,KAAK/C,KAAL,CAAWU,MAAX,IAAqB,KAAKV,KAAL,CAAWU,MAAX,CAAkB+C,UAAvC,GACI,kBADJ,GAEI,EAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAeG,KAAKzD,KAAL,CAAWU,MAAX,iBACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,KAAL,CAAWU,MAAX,CAAkB+C,UADrB,CAhBJ,CAhBF,eAqCE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIxD,UAAU,CAACO,KAAf,CAXF,CArCF,CADD,GAoDG,IA9KN,CADF,CALF,eAuLE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,OAAO,MAFT;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,SAAS,EAAC,UAJZ;AAKE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACK,WAAL,EAAN;AAAA,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAUG,KAAKI,KAAL,CAAWoB,IAAX,IAAmB,KAAnB,gBACC,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAA4C,QAAA,QAAQ,EAAEzB,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,OAAO,gBACN,uDACE;AAAG,QAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,SADM,GAKJ,IANN,mBADD,GAUG,KAAKK,KAAL,CAAWoB,IAAX,IAAmB,MAAnB,gBACF,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAA4C,QAAA,QAAQ,EAAEzB,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,OAAO,gBACN,uDACE;AAAG,QAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,SADM,GAKJ,IANN,sBADE,GAUA,IA9BN,CAvLF,CALF,CADF;AAgOD;;;;EArgB8BlC,S;;AAwgBjC,eAAeqB,kBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  // Table,\n  Button,\n  // Badge,\n  // Container,\n  Row,\n  Col,\n  Input,\n  Label,\n  FormGroup,\n  Form,\n} from \"reactstrap\";\nimport { createAdmin ,uploadImageOnCloudinary,createInfluencer, \n  getInfluencerById,\n  editInfluencer, } from \"../http/http-calls\";\n// import config from '../config/index';\nimport { ToastsStore } from \"react-toasts\";\nimport { showToast } from \"../helper-methods\";\nimport { countryCodes } from \"../config/country-codes\";\nimport config from \"../config\";\n\nclass AddInfluencerModal extends Component {\n  state = {\n    influencer: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      countryCode: \"+1\",\n      product: \"\",\n      profileLink: \"\",\n      // commission: \"\",\n      sales: \"\",\n      profilePicture: \"\",\n    },\n    errors: {},\n    isDirty: {\n      name: false,\n      email: false,\n      phone: false,\n      profilePicture:false,\n      profileLink:false,\n    },\n    loading: false,\n  };\n\n  _closeModal = () => {\n    let { influencer, errors, isDirty } = this.state;\n    influencer = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      countryCode: \"+1\",\n      product: \"\",\n      profileLink: \"\",\n      // commission: \"\",\n      sales: \"\",\n      profilePicture: \"\",\n    };\n    isDirty = {\n      name: false,\n      email: false,\n      phone: false,\n      profilePicture:false,\n      profileLink:false,\n    };\n    errors = {};\n    this.setState({ influencer, errors, isDirty }, () => {\n      console.log(influencer, errors);\n      this.props.toggle();\n    });\n  };\n\n  _saveUser=async()=> {\n    console.log(\"save user\", this.state.influencer);\n    this.setState({ loading: true });\n    let Influencerdata = {\n      name: {\n        first: this.state.influencer.name.split(\" \")[0],\n        last: this.state.influencer.name.split(\" \")[1]? this.state.influencer.name.split(\" \")[1] : ' ',\n      },\n      email: this.state.influencer.email,\n      url: this.state.influencer.profileLink,\n      profileLink: this.state.influencer.profileLink,\n\n      profilePicture: this.state.influencer.profilePicture,\n      phoneCountry: this.state.influencer.countryCode ? countryCodes.find(e => this.state.influencer.countryCode === e.dial_code).code : 'US',\n      phone:\n        \"(\" +\n        this.state.influencer.countryCode +\n        \")\" +\n        this.state.influencer.phone,\n    };\n    if(this.state.influencer.profilePicture) {\n      const formData = new FormData();\n      formData.append('file',this.state.influencer.profilePictureObj)\n      const uploadImgRes = await uploadImageOnCloudinary(formData);\n      console.log('uploadImgRes: ',uploadImgRes)\n      if(uploadImgRes && uploadImgRes.url) {\n        this.state.influencerDetails.profilePicture = uploadImgRes.url;\n      } else {\n          ToastsStore.error('Somthing went wrong, Try again!', 3000);\n          this._closeModal();\n          return;\n      }\n  }\n  if (this.props.type === \"add\" && !this.props.data) {\n    createInfluencer(Influencerdata).then(\n      (response) => {\n        console.log(response);\n        this.setState({ loading: false });\n        ToastsStore.success(\"Influencer user added Successfully.\", 3000);\n        this.props.reloadSellerList();\n        this._closeModal();\n      },\n      (error) => {\n        console.log(error);\n        // ToastsStore.error(error.reason, 3000);\n        showToast(\n          error.reason && error.reason.length\n            ? error.reason\n            : \"Server error. Try again after sometime.\",\n          \"error\"\n        );\n        this.setState({ loading: false });\n      }\n    )} else if (this.props.type === \"edit\" && this.props.data.id) {\n      editInfluencer(Influencerdata, this.props.data.id)\n      .then(\n        (response) => {\n          console.log(response);\n          this.setState({ loading: false });\n          ToastsStore.success(\"Influencer user updated Successfully.\", 3000);\n          this.props.reloadInfluencerList();\n          this._closeModal();\n        },\n        (error) => {\n          console.log(error);\n          // ToastsStore.error(error.reason, 3000);\n          showToast(\n            error.reason && error.reason.length\n              ? error.reason\n              : \"Server error. Try again after sometime.\",\n            \"error\"\n          );\n          this.setState({ loading: false });\n        }\n      );\n  } else {\n      ToastsStore.error('Somthing went wrong, Try again!', 3000);\n      this._closeModal();\n  };\n  }\n\n  _handleOnChange = ({ currentTarget }) => {\n    // console.log(currentTarget);\n    const { influencer, isDirty } = this.state;\n    influencer[currentTarget.name] = currentTarget.value;\n    isDirty[currentTarget.name] = true;\n    this.setState({ influencer });\n    this._validateForm();\n  };\n\n  /**\n   * To handle submit of the form and validate it\n   */\n  _handleOnSubmit = (event) => {\n    event.preventDefault();\n    const { isDirty } = this.state;\n    isDirty.name = true;\n    isDirty.email = true;\n    isDirty.phone = true;\n    isDirty.profileLink = true;\n    this.setState({ isDirty });\n    console.log(this.state.isDirty);\n    let errors = this._validateForm();\n    console.log(errors);\n    if (!errors) {\n      console.log(\"Make API call\");\n      // this._saveUser();\n    }\n    console.log(this.state.influencer);\n  };\n\n  /**\n   * To Validate the form and show the error messages\n   */\n  _validateForm() {\n    const { influencer, errors, isDirty } = this.state;\n    // console.log(influencer, isDirty);\n    Object.keys(influencer).forEach((each) => {\n      if (each === \"email\" && isDirty.email) {\n        if (!influencer.email.trim().length) {\n          errors.email = \"Email is Required\";\n        } else if (\n          influencer.email.trim().length &&\n          !new RegExp(\n            \"^[a-zA-Z0-9]{1}[a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,3}$\"\n          ).test(influencer.email)\n        ) {\n          errors.email = \"Please enter valid Email\";\n        } else {\n          delete errors[each];\n          isDirty.email = false;\n        }\n      } else if (each === \"name\" && isDirty.name) {\n        if (!influencer.name.trim().length) {\n          // console.log(admin.password);\n          errors[each] = \"Name is Required\";\n        } else {\n          delete errors[each];\n          isDirty.name = false;\n        }\n      } else if (each === \"phone\" && isDirty.phone) {\n        if (!influencer.phone.trim().length) {\n          // console.log(admin.password);\n          errors[each] = \"Phone is Required\";\n        } else if (\n          !config.regexConfig.phone.test(String(influencer.phone).toLowerCase())\n        ) {\n          errors[each] = \"Enter valid phone number\";\n        } else {\n          delete errors[each];\n          isDirty.phone = false;\n        }\n      }else if (each === \"profileLink\" && isDirty.profileLink) {\n        if (!influencer.profileLink.trim().length) {\n          // console.log(admin.password);\n          errors[each] = \"ProfileLink is Required\";\n        } else if (\n          !new RegExp(\n            config.regexConfig.profileLink\n          )\n          .test(String(influencer.profileLink).toLowerCase())\n        ) {\n          errors[each] = \"Enter valid Profile Link, i.e. https://facebook.com\";\n        } else {\n          delete errors[each];\n          isDirty.profileLink = false;\n        }\n      }\n    });\n    console.log(errors);\n    this.setState({ errors });\n    return Object.keys(errors).length ? errors : null;\n  }\n\n  _updateCountryCode = (value) => {\n    const { influencer } = this.state;\n    influencer[\"countryCode\"] = value;\n    this.setState({ influencer });\n  };\n\n  componentDidUpdate(previousProps, previousState) {\n    // influencer: {\n    //   name: \"\",\n    //   email: \"\",\n    //   phone: \"\",\n    //   countryCode: \"+1\",\n    //   product: \"\",\n    //   profileLink: \"\",\n    //   commission: \"\",\n    //   sales: \"\",\n    // },\n    // console.log('previousProps :', previousProps, this.props);\n    if (this.props.data && previousProps.isOpen !== this.props.isOpen) {\n      console.log(\"object :\", this.props.data);\n      if (this.props.type !== \"add\" && this.props.data) {\n        let { influencer } = this.state;\n        influencer.name = this.props.data.name;\n        influencer.email = this.props.data.email;\n        influencer.phone = this.props.data.phone;\n        influencer.product = this.props.data.product;\n        influencer.profileLink = this.props.data.profileLink;\n        influencer.commission = this.props.data.commission;\n        influencer.sales = this.props.data.sales;\n\n        this.setState({ influencer });\n      } else if (this.props.type === \"add\") {\n        console.log(\"here in add mode :\");\n        this._resetForm();\n      }\n    } else if (!this.props.data && previousProps.isOpen !== this.props.isOpen) {\n      this._resetForm();\n    }\n  }\n  _makeModalHeader = () => {\n    switch (this.props.type) {\n      case \"add\":\n        return \"Add Influencer\";\n      case \"edit\":\n        return \"Edit Influencer\";\n      case \"view\":\n        return \"Influencer Details\";\n        break;\n      default:\n      // code block\n    }\n  };\n  _resetForm = () => {\n    let influencer = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      countryCode: \"+1\",\n      product: \"\",\n      profileLink: \"\",\n      commission: \"\",\n      sales: \"\",\n    };\n\n    this.setState({ influencer });\n  };\n  render() {\n    let { influencer, loading } = this.state;\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n        toggle={() => this._closeModal()}\n        className=\"modal-dialog-centered\"\n      >\n        <Form onSubmit={this._handleOnSubmit} noValidate>\n          <ModalHeader toggle={() => this._closeModal()}>\n            {/* Add Influencer */}\n            {this._makeModalHeader()}\n          </ModalHeader>\n          <ModalBody>\n            <Row>\n              <Col xs=\"6\">\n                <FormGroup className=\"px-3\">\n                  <Label htmlFor=\"name\">Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"name\"\n                    placeholder=\"Enter\"\n                    name=\"name\"\n                    value={influencer.name}\n                    onChange={this._handleOnChange}\n                    className={\n                      this.state.errors && this.state.errors.name\n                        ? \"validation-error\"\n                        : \"\"\n                    }\n                  />\n                  {this.state.errors && (\n                    <div className=\"validation-error\">\n                      {this.state.errors.name}\n                    </div>\n                  )}\n                </FormGroup>\n                <FormGroup className=\"px-3\">\n                  <Label htmlFor=\"email\">Email</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"email\"\n                    placeholder=\"Enter\"\n                    name=\"email\"\n                    value={influencer.email}\n                    onChange={this._handleOnChange}\n                    className={\n                      this.state.errors && this.state.errors.email\n                        ? \"validation-error\"\n                        : \"\"\n                    }\n                  />\n                  {this.state.errors && (\n                    <div className=\"validation-error\">\n                      {this.state.errors.email}\n                    </div>\n                  )}\n                </FormGroup>\n              </Col>\n              <FormGroup className=\"px-3\">\n                {/* <Input\n                  type=\"\"\n                  id=\"sellerStore\"\n                  placeholder=\"Enter\"\n                  name=\"sellerStore\"\n                  value={seller.sellerStore}\n                  onChange={this._handleOnChange}\n                /> */}\n                <input type=\"file\" accept=\".jpg\" className=\"mt-4\" />\n\n                {/* <img alt=\"Logo\" style={{ height: \"100px\", width: \"200px\" }} /> */}\n              </FormGroup>\n              <Col xs=\"12\">\n                <FormGroup className=\"px-3\">\n                  <Label htmlFor=\"phone\">Phone</Label>\n                  <div style={{ display: \"flex\" }}>\n                    <Input\n                      type=\"select\"\n                      name=\"selectCountryCode\"\n                      id=\"selectCountryCode\"\n                      onChange={(e) => this._updateCountryCode(e.target.value)}\n                      value={influencer.countryCode.value}\n                      style={{ maxWidth: \"105px\", padding: \"4px\" }}\n                    >\n                      {countryCodes.map((countryCode, countryIndex) => (\n                        <option\n                          key={countryIndex}\n                          value={countryCode.dial_code}\n                        >\n                          {countryCode.code} ({countryCode.dial_code})\n                        </option>\n                      ))}\n                    </Input>\n                    <Input\n                      type=\"text\"\n                      id=\"phone\"\n                      placeholder=\"Enter\"\n                      name=\"phone\"\n                      value={influencer.phone}\n                      onChange={this._handleOnChange}\n                      className={\n                        this.state.errors && this.state.errors.phone\n                          ? \"validation-error\"\n                          : \"\"\n                      }\n                      style={{ maxWidth: \"100%\" }}\n                    />\n                  </div>\n                  {this.state.errors && (\n                    <div className=\"validation-error\">\n                      {this.state.errors.phone}\n                    </div>\n                  )}\n                </FormGroup>\n                <FormGroup className=\"px-3\">\n                  <Label htmlFor=\"profileLink\">Profile Link</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"profileLink\"\n                    placeholder=\"Enter\"\n                    name=\"profileLink\"\n                    value={influencer.profileLink}\n                    onChange={this._handleOnChange}\n                    className={\n                      this.state.errors && this.state.errors.profileLink\n                        ? \"validation-error\"\n                        : \"\"\n                    }\n                  />\n                  {this.state.errors && (\n                    <div className=\"validation-error\">\n                      {this.state.errors.profileLink}\n                    </div>\n                  )}\n                </FormGroup>{\" \"}\n              </Col>\n              {this.props.type !== \"add\" ? (\n                <>\n                  {\" \"}\n                  <FormGroup className=\"px-3\">\n                    <Label htmlFor=\"product\">Product</Label>\n                    {/* <Input\n                      type=\"text\"\n                      id=\"product\"\n                      placeholder=\"Enter\"\n                      name=\"product\"\n                      value={influencer.product}\n                      onChange={this._handleOnChange}\n                      disabled={loading}\n                    /> */}\n                    {/* <p>{influencer.product}</p> */}\n                    <p>20</p>\n                  </FormGroup>\n                  <FormGroup className=\"px-3\">\n                    <Label htmlFor=\"commission\">Commission</Label>\n                    <Input\n                      type=\"Number\"\n                      id=\"commission\"\n                      placeholder=\"Enter\"\n                      name=\"commission\"\n                      value={influencer.commission}\n                      onChange={this._handleOnChange}\n                      className={\n                        this.state.errors && this.state.errors.commission\n                          ? \"validation-error\"\n                          : \"\"\n                      }\n                    />\n                    {this.state.errors && (\n                      <div className=\"validation-error\">\n                        {this.state.errors.commission}\n                      </div>\n                    )}\n                  </FormGroup>\n                  <FormGroup className=\"px-3\">\n                    <Label htmlFor=\"sales\">Sales</Label>\n                    {/* <Input\n                      type=\"Number\"\n                      id=\"sales\"\n                      placeholder=\"Enter\"\n                      name=\"sales\"\n                      value={influencer.sales}\n                      onChange={this._handleOnChange}\n                      disabled={loading}\n                    /> */}\n                    <p>{influencer.sales}</p>\n                  </FormGroup>\n                </>\n              ) : null}\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"dark\"\n              outline\n              type=\"button\"\n              className=\"btn-pill\"\n              onClick={() => this._closeModal()}\n            >\n              Cancel\n            </Button>\n            {this.props.type == \"add\" ? (\n              <Button className=\"BtnPurple\" type=\"submit\" disabled={loading}>\n                {loading ? (\n                  <>\n                    <i className=\"fa fa-spinner fa-spin mr5\" />\n                    &nbsp;\n                  </>\n                ) : null}\n                Add Influencer\n              </Button>\n            ) : this.props.type == \"edit\" ? (\n              <Button className=\"BtnPurple\" type=\"submit\" disabled={loading}>\n                {loading ? (\n                  <>\n                    <i className=\"fa fa-spinner fa-spin mr5\" />\n                    &nbsp;\n                  </>\n                ) : null}\n                Update Influencer\n              </Button>\n            ) : null}\n          </ModalFooter>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default AddInfluencerModal;\n"]},"metadata":{},"sourceType":"module"}