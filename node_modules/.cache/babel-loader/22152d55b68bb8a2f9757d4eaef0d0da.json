{"ast":null,"code":"import _classCallCheck from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/pages/product.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col // Table,\n, Button, Input // FormGroup,\n// Label,\n// Modal,\n// ModalBody,\n// ModalFooter,\n// ModalHeader\n} from \"reactstrap\";\nimport CustomTable from \"../components/custom-table\";\nimport CustomDateRangePicker from \"../components/date-range-picker\";\nimport { getAllSubscribers, changeUserStatus, sendMessage, getAllProducts } from \"../http/http-calls\";\nimport config from \"../config\";\nimport { ToastsStore } from \"react-toasts\";\nimport SubscriptionListModal from \"../components/subscription-list-modal\";\nimport TipsModal from \"../components/tips-list-modal\";\nimport PpvListModal from \"../components/ppv-list-modal\"; // import CopyclipBoard from \"../../components/copy-clipboard\";\n\nimport CopyclipBoard from \"../components/copy-clipboard\";\nimport { format } from \"date-fns\";\nimport TextEditor from \"../components/text-editor\";\nimport { showToast, deepClone } from \"../helper-methods\";\nimport CustomDataTable from \"../components/custom-data-table\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\n\nvar Shoutout = /*#__PURE__*/function (_Component) {\n  _inherits(Shoutout, _Component);\n\n  var _super = _createSuper(Shoutout);\n\n  function Shoutout() {\n    var _this;\n\n    _classCallCheck(this, Shoutout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      modals: [false, false, false],\n      subscriptionModal: {\n        isOpen: false,\n        data: null\n      },\n      tipsModal: {\n        isOpen: false,\n        data: null\n      },\n      ppvModal: {\n        isOpen: false,\n        data: null\n      },\n      subscriberList: [{\n        productid: 12345,\n        productname: \"Samsung Mobile\",\n        category: \"Mobile\",\n        seller: \"Abc\",\n        influencers: 2,\n        cost: \"$150\",\n        orders: 4,\n        status: \"active\"\n      }],\n      subscriberListBackup: [],\n      productList: [],\n      productListBackup: [],\n      headerKeys: [{\n        id: \"id\",\n        label: \"id\"\n      }, {\n        id: \"productid\",\n        label: \"Product Id\"\n      }, {\n        id: \"productname\",\n        label: \"Product Name\"\n      }, {\n        id: \"category\",\n        label: \"Category\"\n      }, {\n        id: \"seller\",\n        label: \"Seller\"\n      }, {\n        id: \"influencers\",\n        label: \"Influencers\"\n      }, {\n        id: \"cost\",\n        label: \"Cost\"\n      }, {\n        id: \"orders\",\n        label: \"Orders\"\n      }, {\n        id: \"status\",\n        label: \"Status\"\n      } // { id: \"name\", label: \"Name\" },\n      // { id: \"flag\", label: \"Flag\" },\n      // { id: \"email\", label: \"Email\" },\n      // { id: \"phone\", label: \"Phone\" },\n      // { id: \"joinedAt\", label: \"Joined\" },\n      // { id: \"subscriptions\", label: \"Subscriptions\" },\n      // { id: \"tipAmount\", label: \"Tips\" },\n      // { id: \"spent\", label: \"Lifetime Spend\" },\n      // { id: \"status\", label: \"Status\" },\n      // { id: \"action\", label: \"Action\", noSort: true }\n      ],\n      subscriptionCounts: config.subscriptionCounts,\n      spentCounts: config.spentCounts,\n      filters: {\n        dateRange: {\n          startDate: null,\n          endDate: null,\n          focusedInput: null,\n          startDateId: \"startDate\",\n          endDateId: \"endDate\"\n        },\n        subscriptions: \"\",\n        status: \"\",\n        search: \"\",\n        spent: \"\"\n      },\n      loading: {\n        loadingData: false,\n        changeStatusLoading: false,\n        sendingMessage: false\n      },\n      contact: {\n        via: \"email\",\n        message: \"\"\n      },\n      selectedSubscribers: [],\n      totalCount: 0,\n      subscriberFieldsKeyMap: {\n        name: \"name\",\n        email: \"email\",\n        phone: \"phone\",\n        subscriptions: \"spent\",\n        joinedAt: \"createdAt\",\n        tipAmount: \"tips\",\n        spent: \"spent\",\n        status: \"isActive\"\n      },\n      tableConfig: {\n        pageNumber: 1,\n        pageSize: 10,\n        sort: {\n          sortBy: \"createdAt\",\n          sortOrder: \"desc\"\n        },\n        filters: {}\n      }\n    };\n\n    _this._formatDate = function (date) {\n      // console.log(\"TCL: Subscribers -> _formatDate -> date\", date);\n      return format(new Date(date), \"MMM d, yyyy\");\n    };\n\n    _this._onToggleSubscriptionModal = function (data) {\n      var _JSON$parse = JSON.parse(JSON.stringify(_this.state)),\n          subscriptionModal = _JSON$parse.subscriptionModal;\n\n      subscriptionModal.isOpen = !subscriptionModal.isOpen;\n      subscriptionModal.data = data;\n\n      _this.setState({\n        subscriptionModal: subscriptionModal\n      }, function () {\n        console.log(_this.state);\n      });\n    };\n\n    _this._onToggleTipsModal = function (data) {\n      var _JSON$parse2 = JSON.parse(JSON.stringify(_this.state)),\n          tipsModal = _JSON$parse2.tipsModal;\n\n      tipsModal.isOpen = !tipsModal.isOpen;\n      tipsModal.data = data;\n\n      _this.setState({\n        tipsModal: tipsModal\n      }, function () {\n        console.log(_this.state);\n      });\n    };\n\n    _this._onTogglePPVModal = function (data) {\n      var _JSON$parse3 = JSON.parse(JSON.stringify(_this.state)),\n          ppvModal = _JSON$parse3.ppvModal;\n\n      ppvModal.isOpen = !ppvModal.isOpen;\n      ppvModal.data = data;\n\n      _this.setState({\n        ppvModal: ppvModal\n      }, function () {\n        console.log(_this.state);\n      });\n    };\n\n    _this._manageLoading = function (key, value) {\n      var _this$state$loading = _this.state.loading,\n          loadingData = _this$state$loading.loadingData,\n          changeStatusLoading = _this$state$loading.changeStatusLoading,\n          sendingMessage = _this$state$loading.sendingMessage;\n\n      if (key === \"data\") {\n        loadingData = value;\n      } else if (key === \"change-status\") {\n        changeStatusLoading = value;\n      } else if (key === \"send-message\") {\n        sendingMessage = value;\n      }\n\n      _this.setState({\n        loading: {\n          loadingData: loadingData,\n          changeStatusLoading: changeStatusLoading,\n          sendingMessage: sendingMessage\n        }\n      });\n    };\n\n    _this._getAllProducts = function (data) {\n      var _deepClone = deepClone(_this.state),\n          subscriberList = _deepClone.subscriberList,\n          tableConfig = _deepClone.tableConfig;\n\n      if (!subscriberList.length) {\n        _this._manageLoading(\"data\", true);\n      }\n\n      getAllProducts(data).then(function (response) {\n        console.log(response);\n\n        _this._manageLoading(\"data\", false);\n\n        tableConfig.loading = false;\n\n        _this.setState({\n          tableConfig: tableConfig\n        }); // let subscriberListResp = response.fans.map((each) => {\n        //   return {\n        //     name: each.name.last ? each.name.full : each.name.first,\n        //     id: each.id,\n        //     flag: each.country ? each.country : null,\n        //     email: each.email,\n        //     phone: each.phone || \"-\",\n        //     profilePicture: each.profilePicture || config.defaultUserPicture,\n        //     joinedAt: each.createdAt,\n        //     subscriptions: each.subscriptions,\n        //     spent: each.spent,\n        //     status: each.isActive ? \"Active\" : \"Inactive\",\n        //   };\n        // });\n        // this.setState({\n        //   // subscriberList: subscriberListResp,\n        //   subscriberListBackup: subscriberListResp,\n        //   totalCount: response.count,\n        // });\n\n      }, function (error) {\n        console.log(error);\n\n        _this._manageLoading(\"data\", false);\n\n        tableConfig.loading = false;\n\n        _this.setState({\n          tableConfig: tableConfig\n        }); // ToastsStore.error(error.reason, 3000);\n\n\n        showToast(error.reason && error.reason.length ? error.reason : \"Server error. Try again after sometime.\", \"error\");\n      });\n    };\n\n    _this._onStatusUpdate = function (data) {\n      var subscriberList = _this.state.subscriberList;\n      var creatorData = subscriberList.find(function (each) {\n        return each.id === data.id;\n      });\n      creatorData.status = creatorData.status === \"Active\" ? \"Inactive\" : \"Active\";\n\n      _this.setState({\n        subscriberList: subscriberList,\n        subscriberListBackup: subscriberList\n      });\n\n      console.log(subscriberList);\n\n      _this._manageLoading(\"change-status\", true);\n\n      changeUserStatus(data.id).then(function (response) {\n        console.log(response);\n\n        _this._manageLoading(\"change-status\", false);\n\n        ToastsStore.success(\"Status changed Successfully!\", 3000);\n      }, function (error) {\n        console.log(error);\n\n        _this._manageLoading(\"change-status\", false); // ToastsStore.error(error.reason, 3000);\n\n\n        showToast(error.reason && error.reason.length ? error.reason : \"Server error. Try again after sometime.\", \"error\");\n      });\n    };\n\n    _this._dataFormat = function (cell, row, header) {\n      if (header === \"productid\") {\n        console.log(row);\n        return (\n          /*#__PURE__*/\n          // <Link to={`/product-view/${row.id}`}>\n          React.createElement(Link, {\n            to: \"/product-view/5f791cf9db0d183d82b4c142\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex justify-content-start align-items-center\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 11\n            }\n          }, row.productid))\n        );\n      } else if (header === \"email\") {\n        return /*#__PURE__*/React.createElement(CopyclipBoard, {\n          copiedValue: row.email,\n          border: \"none\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 9\n          }\n        });\n      } else if (header === \"phone\") {\n        return row.phone !== \"-\" ? /*#__PURE__*/React.createElement(CopyclipBoard, {\n          copiedValue: parsePhoneNumberFromString(row.phone).formatInternational(),\n          border: \"none\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 9\n          }\n        }) : \"-\";\n      } else if (header === \"joinedAt\") {\n        return cell ? _this._formatDate(cell) : \"-\";\n      } else if (header === \"sales\") {\n        return cell && cell.length ? /*#__PURE__*/React.createElement(\"span\", {\n          onClick: function onClick() {\n            return _this._onToggleSubscriptionModal(row);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 9\n          }\n        }, cell.length) : 0;\n      } else if (header === \"status\") {\n        return /*#__PURE__*/React.createElement(Input, {\n          type: \"select\",\n          value: cell,\n          onChange: function onChange() {\n            return _this._onStatusUpdate(row);\n          } // disabled={this.state.loading.changeStatusLoading}\n          ,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Active\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 11\n          }\n        }, \"Active\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Inactive\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 11\n          }\n        }, \"Inactive\"));\n      } else if (header === \"action\") {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: \"/subscriber-view/\".concat(row.id),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"ghost-primary\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 11\n          }\n        }, \"View\"));\n      } else {\n        return cell;\n      }\n    };\n\n    _this._filterOnChange = function (_ref) {\n      var currentTarget = _ref.currentTarget;\n      var filters = _this.state.filters;\n      filters[currentTarget.name] = currentTarget.value;\n\n      _this.setState({\n        filters: filters\n      });\n\n      if (currentTarget.name !== \"search\") {\n        // this._filterSubscriberList();\n        _this._applyFilterChanges();\n      }\n    };\n\n    _this._filterSubscriberList = function () {\n      var filterConditions = []; // console.log(this.state);\n\n      var _this$state = _this.state,\n          filters = _this$state.filters,\n          subscriberListBackup = _this$state.subscriberListBackup,\n          subscriberList = _this$state.subscriberList;\n      Object.keys(filters).forEach(function (key) {\n        if (filters[key]) {\n          filterConditions.push(key);\n        }\n      });\n      console.log(filterConditions);\n      subscriberList = subscriberListBackup;\n\n      if (filterConditions.length) {\n        if (filters.subscriptions) {\n          console.log(filters.subscriptions);\n          var range = _this.state.subscriptionCounts[filters.subscriptions].value;\n          console.log(range);\n          subscriberList = subscriberList.filter(function (each) {\n            // console.log(\n            //   each.subscriptions,\n            //   each.subscriptions >= range.min,\n            //   each.subscriptions <= range.max\n            // );\n            if (range.min && !range.max) {\n              return each.subscriptions.length > range.min;\n            } else {\n              return each.subscriptions.length >= range.min && each.subscriptions.length <= range.max;\n            }\n          });\n        }\n\n        if (filters.status) {\n          subscriberList = subscriberList.filter(function (each) {\n            return each.status.toLowerCase() === filters.status.toLowerCase();\n          });\n        }\n\n        if (filters.search.trim().length) {\n          subscriberList = subscriberList.filter(function (each) {\n            return each.name.toLowerCase().includes(filters.search.toLowerCase()) || each.email.toLowerCase().includes(filters.search.toLowerCase()) || each.phone.toLowerCase().includes(filters.search.toLowerCase());\n          });\n        }\n\n        _this.setState({\n          subscriberList: subscriberList\n        });\n      } else {\n        _this.setState({\n          subscriberList: subscriberListBackup\n        });\n      }\n    };\n\n    _this._setSelectedRows = function (data) {\n      console.log(data);\n      var selectedSubscribers = _this.state.selectedSubscribers;\n      selectedSubscribers = data;\n\n      _this.setState({\n        selectedSubscribers: selectedSubscribers\n      });\n    };\n\n    _this._contactOnChange = function (_ref2) {\n      var currentTarget = _ref2.currentTarget;\n      var contact = _this.state.contact;\n      contact[currentTarget.name] = currentTarget.value;\n\n      _this.setState({\n        contact: contact\n      });\n    };\n\n    _this._setMessageContent = function (value, key) {\n      var contact = _this.state.contact;\n      contact[key] = value;\n\n      _this.setState({\n        contact: contact\n      });\n    };\n\n    _this._extractContent = function (s) {\n      var span = document.createElement(\"span\");\n      span.innerHTML = s;\n      return span.textContent || span.innerText;\n    };\n\n    _this._sendMessage = function () {\n      var _this$state2 = _this.state,\n          contact = _this$state2.contact,\n          selectedSubscribers = _this$state2.selectedSubscribers;\n      var data = {\n        idlist: selectedSubscribers,\n        text: contact.via === \"email\" ? contact.message : _this._extractContent(contact.message)\n      };\n\n      if (!data.idlist.length) {\n        ToastsStore.warning(\"Please select atleast one creator\", 3000);\n        return;\n      }\n\n      if (!data.text.trim().length) {\n        ToastsStore.warning(\"Please write some message\", 3000);\n        return;\n      }\n\n      console.log(data);\n\n      _this._manageLoading(\"send-message\", true);\n\n      sendMessage(contact.via, data).then(function (response) {\n        console.log(response);\n\n        _this._setMessageContent(\"\", \"message\");\n\n        _this._manageLoading(\"send-message\", false);\n\n        ToastsStore.success(\"Message sent Successfully!\", 3000);\n      }, function (error) {\n        console.log(error);\n\n        _this._manageLoading(\"send-message\", false); // ToastsStore.error(error.reason, 3000);\n\n\n        showToast(error.reason && error.reason.length ? error.reason : \"Server error. Try again after sometime.\", \"error\");\n      });\n    };\n\n    _this._paginate = function (pageNumber, pageSize) {\n      console.log(\"pageNumber, pageSize :\", pageNumber, pageSize);\n      var tableConfig = _this.state.tableConfig;\n      tableConfig.pageNumber = pageNumber;\n      tableConfig.pageSize = pageSize;\n      tableConfig.loading = true;\n      setTimeout(function () {\n        _this.setState({\n          tableConfig: tableConfig\n        }, function () {\n          _this._getAllProducts(_this.state.tableConfig);\n        });\n      }, 100);\n    };\n\n    _this._onSortChange = function (sortName, sortOrder) {\n      var _deepClone2 = deepClone(_this.state),\n          tableConfig = _deepClone2.tableConfig;\n\n      tableConfig.sort.sortBy = _this.state.subscriberFieldsKeyMap[sortName];\n      tableConfig.sort.sortOrder = sortOrder;\n      tableConfig.loading = true;\n\n      _this.setState({\n        tableConfig: tableConfig\n      }, function () {\n        _this._getAllProducts(tableConfig);\n      });\n\n      console.log(\"sortName, sortOrder :\", sortName, sortOrder);\n    };\n\n    _this._applyFilterChanges = function () {\n      var _deepClone3 = deepClone(_this.state),\n          filters = _deepClone3.filters,\n          tableConfig = _deepClone3.tableConfig;\n\n      console.log(\"filters :\", filters);\n      var data = {};\n\n      if (filters.subscriptions.length) {\n        data._subscriptions = {\n          lowerLimit: _this.state.subscriptionCounts[filters.subscriptions].value.min,\n          upperLimit: _this.state.subscriptionCounts[filters.subscriptions].value.max\n        };\n      }\n\n      if (filters.spent.length) {\n        data.spent = {\n          lowerLimit: _this.state.spentCounts[filters.spent].value.min,\n          upperLimit: _this.state.spentCounts[filters.spent].value.max\n        };\n      }\n\n      if (filters.status.length) {\n        data.isActive = filters.status === \"active\" ? true : false;\n      }\n\n      console.log(\"data :\", data);\n      tableConfig.filters = data;\n\n      if (filters.search.length) {\n        tableConfig.search = filters.search;\n      } else {\n        tableConfig.search = \"\";\n      }\n\n      tableConfig.loading = true;\n\n      _this.setState({\n        tableConfig: tableConfig\n      }, function () {\n        _this._getAllProducts(tableConfig);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Shoutout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._getAllProducts(this.state.tableConfig);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          filters = _this$state3.filters,\n          loading = _this$state3.loading,\n          subscriptionCounts = _this$state3.subscriptionCounts,\n          spentCounts = _this$state3.spentCounts,\n          contact = _this$state3.contact,\n          totalCount = _this$state3.totalCount,\n          tableConfig = _this$state3.tableConfig;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app TruFansPgBg animated fadeIn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"PgTitle justify-content-start align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 17\n        }\n      }, \"Products\")), !loading.loadingData && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filterWrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-filter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"creator\",\n        value: filters.creator,\n        onChange: this._filterOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 25\n        }\n      }, \"Category\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"creator\",\n        value: filters.creator,\n        onChange: this._filterOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 25\n        }\n      }, \"Seller\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"creator\",\n        value: filters.creator,\n        onChange: this._filterOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 25\n        }\n      }, \"Influencer\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"sales\",\n        value: filters.sales,\n        onChange: this._filterOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 25\n        }\n      }, \"Price\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"search\",\n        name: \"search\",\n        placeholder: \"Search\",\n        autoComplete: \"off\",\n        className: \"ml-2\",\n        value: this.state.filters.search,\n        onChange: this._filterOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        className: \"ml-2\",\n        onClick: function onClick() {\n          return _this2._applyFilterChanges();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon-magnifier\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 25\n        }\n      })))), \" \", /*#__PURE__*/React.createElement(CustomDataTable, {\n        tableData: this.state.subscriberList,\n        headerKeys: this.state.headerKeys,\n        dataFormat: this._dataFormat,\n        totalCount: totalCount,\n        rowSelection: true,\n        onPaginate: function onPaginate(pageNumber, pageSize) {\n          return _this2._paginate(pageNumber, pageSize);\n        },\n        onSortChange: function onSortChange(sortName, sortOrder) {\n          return _this2._onSortChange(sortName, sortOrder);\n        },\n        setSelectedRows: function setSelectedRows(data) {\n          return _this2._setSelectedRows(data);\n        },\n        showTableLoading: tableConfig.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 19\n        }\n      })), loading.loadingData && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filterWrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading-section list-loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-spin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 21\n        }\n      }), \" \\xA0 Loading Subscribers..\")), /*#__PURE__*/React.createElement(SubscriptionListModal, {\n        isOpen: this.state.subscriptionModal.isOpen,\n        data: this.state.subscriptionModal.data,\n        toggle: function toggle() {\n          return _this2._onToggleSubscriptionModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(TipsModal, {\n        isOpen: this.state.tipsModal.isOpen,\n        data: this.state.tipsModal.data,\n        toggle: function toggle() {\n          return _this2._onToggleTipsModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(PpvListModal, {\n        isOpen: this.state.ppvModal.isOpen,\n        data: this.state.ppvModal.data,\n        toggle: function toggle() {\n          return _this2._onTogglePPVModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return Shoutout;\n}(Component);\n\nexport default Shoutout;","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/pages/product.js"],"names":["React","Component","Link","Container","Row","Col","Button","Input","CustomTable","CustomDateRangePicker","getAllSubscribers","changeUserStatus","sendMessage","getAllProducts","config","ToastsStore","SubscriptionListModal","TipsModal","PpvListModal","CopyclipBoard","format","TextEditor","showToast","deepClone","CustomDataTable","parsePhoneNumberFromString","Shoutout","state","modals","subscriptionModal","isOpen","data","tipsModal","ppvModal","subscriberList","productid","productname","category","seller","influencers","cost","orders","status","subscriberListBackup","productList","productListBackup","headerKeys","id","label","subscriptionCounts","spentCounts","filters","dateRange","startDate","endDate","focusedInput","startDateId","endDateId","subscriptions","search","spent","loading","loadingData","changeStatusLoading","sendingMessage","contact","via","message","selectedSubscribers","totalCount","subscriberFieldsKeyMap","name","email","phone","joinedAt","tipAmount","tableConfig","pageNumber","pageSize","sort","sortBy","sortOrder","_formatDate","date","Date","_onToggleSubscriptionModal","JSON","parse","stringify","setState","console","log","_onToggleTipsModal","_onTogglePPVModal","_manageLoading","key","value","_getAllProducts","length","then","response","error","reason","_onStatusUpdate","creatorData","find","each","success","_dataFormat","cell","row","header","formatInternational","_filterOnChange","currentTarget","_applyFilterChanges","_filterSubscriberList","filterConditions","Object","keys","forEach","push","range","filter","min","max","toLowerCase","trim","includes","_setSelectedRows","_contactOnChange","_setMessageContent","_extractContent","s","span","document","createElement","innerHTML","textContent","innerText","_sendMessage","idlist","text","warning","_paginate","setTimeout","_onSortChange","sortName","_subscriptions","lowerLimit","upperLimit","isActive","creator","sales"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,SADF,EAEEC,GAFF,EAGEC,GAHF,CAIE;AAJF,EAKEC,MALF,EAMEC,KANF,CAOE;AACA;AACA;AACA;AACA;AACA;AAZF,OAaO,YAbP;AAcA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,WAHF,EAIEC,cAJF,QAKO,oBALP;AAMA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,mBAArC;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,SAASC,0BAAT,QAA2C,mBAA3C;;IAEMC,Q;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CADF;AAENC,MAAAA,iBAAiB,EAAE;AACjBC,QAAAA,MAAM,EAAE,KADS;AAEjBC,QAAAA,IAAI,EAAE;AAFW,OAFb;AAMNC,MAAAA,SAAS,EAAE;AACTF,QAAAA,MAAM,EAAE,KADC;AAETC,QAAAA,IAAI,EAAE;AAFG,OANL;AAUNE,MAAAA,QAAQ,EAAE;AACRH,QAAAA,MAAM,EAAE,KADA;AAERC,QAAAA,IAAI,EAAE;AAFE,OAVJ;AAcNG,MAAAA,cAAc,EAAE,CACd;AACEC,QAAAA,SAAS,EAAE,KADb;AAEEC,QAAAA,WAAW,EAAE,gBAFf;AAGEC,QAAAA,QAAQ,EAAE,QAHZ;AAIEC,QAAAA,MAAM,EAAE,KAJV;AAKEC,QAAAA,WAAW,EAAE,CALf;AAMEC,QAAAA,IAAI,EAAE,MANR;AAOEC,QAAAA,MAAM,EAAE,CAPV;AAQEC,QAAAA,MAAM,EAAE;AARV,OADc,CAdV;AA0BNC,MAAAA,oBAAoB,EAAE,EA1BhB;AA2BNC,MAAAA,WAAW,EAAC,EA3BN;AA4BNC,MAAAA,iBAAiB,EAAC,EA5BZ;AA6BNC,MAAAA,UAAU,EAAE,CACV;AAAEC,QAAAA,EAAE,EAAE,IAAN;AAAYC,QAAAA,KAAK,EAAE;AAAnB,OADU,EAEV;AAAED,QAAAA,EAAE,EAAE,WAAN;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAFU,EAGV;AAAED,QAAAA,EAAE,EAAE,aAAN;AAAqBC,QAAAA,KAAK,EAAE;AAA5B,OAHU,EAIV;AAAED,QAAAA,EAAE,EAAE,UAAN;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAJU,EAKV;AAAED,QAAAA,EAAE,EAAE,QAAN;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OALU,EAMV;AAAED,QAAAA,EAAE,EAAE,aAAN;AAAqBC,QAAAA,KAAK,EAAE;AAA5B,OANU,EAOV;AAAED,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,KAAK,EAAE;AAArB,OAPU,EAQV;AAAED,QAAAA,EAAE,EAAE,QAAN;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OARU,EASV;AAAED,QAAAA,EAAE,EAAE,QAAN;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OATU,CAUV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBU,OA7BN;AAkDNC,MAAAA,kBAAkB,EAAEnC,MAAM,CAACmC,kBAlDrB;AAmDNC,MAAAA,WAAW,EAAEpC,MAAM,CAACoC,WAnDd;AAoDNC,MAAAA,OAAO,EAAE;AACPC,QAAAA,SAAS,EAAE;AACTC,UAAAA,SAAS,EAAE,IADF;AAETC,UAAAA,OAAO,EAAE,IAFA;AAGTC,UAAAA,YAAY,EAAE,IAHL;AAITC,UAAAA,WAAW,EAAE,WAJJ;AAKTC,UAAAA,SAAS,EAAE;AALF,SADJ;AAQPC,QAAAA,aAAa,EAAE,EARR;AASPhB,QAAAA,MAAM,EAAE,EATD;AAUPiB,QAAAA,MAAM,EAAE,EAVD;AAWPC,QAAAA,KAAK,EAAE;AAXA,OApDH;AAiENC,MAAAA,OAAO,EAAE;AACPC,QAAAA,WAAW,EAAE,KADN;AAEPC,QAAAA,mBAAmB,EAAE,KAFd;AAGPC,QAAAA,cAAc,EAAE;AAHT,OAjEH;AAsENC,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE,OADE;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAtEH;AA0ENC,MAAAA,mBAAmB,EAAE,EA1Ef;AA2ENC,MAAAA,UAAU,EAAE,CA3EN;AA4ENC,MAAAA,sBAAsB,EAAE;AACtBC,QAAAA,IAAI,EAAE,MADgB;AAEtBC,QAAAA,KAAK,EAAE,OAFe;AAGtBC,QAAAA,KAAK,EAAE,OAHe;AAItBf,QAAAA,aAAa,EAAE,OAJO;AAKtBgB,QAAAA,QAAQ,EAAE,WALY;AAMtBC,QAAAA,SAAS,EAAE,MANW;AAOtBf,QAAAA,KAAK,EAAE,OAPe;AAQtBlB,QAAAA,MAAM,EAAE;AARc,OA5ElB;AAsFNkC,MAAAA,WAAW,EAAE;AACXC,QAAAA,UAAU,EAAE,CADD;AAEXC,QAAAA,QAAQ,EAAE,EAFC;AAGXC,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,WADJ;AAEJC,UAAAA,SAAS,EAAE;AAFP,SAHK;AAOX9B,QAAAA,OAAO,EAAE;AAPE;AAtFP,K;;UAiGR+B,W,GAAc,UAACC,IAAD,EAAU;AACtB;AACA,aAAO/D,MAAM,CAAC,IAAIgE,IAAJ,CAASD,IAAT,CAAD,EAAiB,aAAjB,CAAb;AACD,K;;UAEDE,0B,GAA6B,UAACtD,IAAD,EAAU;AAAA,wBACTuD,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,MAAK7D,KAApB,CAAX,CADS;AAAA,UAC/BE,iBAD+B,eAC/BA,iBAD+B;;AAErCA,MAAAA,iBAAiB,CAACC,MAAlB,GAA2B,CAACD,iBAAiB,CAACC,MAA9C;AACAD,MAAAA,iBAAiB,CAACE,IAAlB,GAAyBA,IAAzB;;AACA,YAAK0D,QAAL,CACE;AACE5D,QAAAA,iBAAiB,EAAjBA;AADF,OADF,EAIE,YAAM;AACJ6D,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKhE,KAAjB;AACD,OANH;AAQD,K;;UAEDiE,kB,GAAqB,UAAC7D,IAAD,EAAU;AAAA,yBACTuD,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,MAAK7D,KAApB,CAAX,CADS;AAAA,UACvBK,SADuB,gBACvBA,SADuB;;AAE7BA,MAAAA,SAAS,CAACF,MAAV,GAAmB,CAACE,SAAS,CAACF,MAA9B;AACAE,MAAAA,SAAS,CAACD,IAAV,GAAiBA,IAAjB;;AACA,YAAK0D,QAAL,CACE;AACEzD,QAAAA,SAAS,EAATA;AADF,OADF,EAIE,YAAM;AACJ0D,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKhE,KAAjB;AACD,OANH;AAQD,K;;UAEDkE,iB,GAAoB,UAAC9D,IAAD,EAAU;AAAA,yBACTuD,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,MAAK7D,KAApB,CAAX,CADS;AAAA,UACtBM,QADsB,gBACtBA,QADsB;;AAE5BA,MAAAA,QAAQ,CAACH,MAAT,GAAkB,CAACG,QAAQ,CAACH,MAA5B;AACAG,MAAAA,QAAQ,CAACF,IAAT,GAAgBA,IAAhB;;AACA,YAAK0D,QAAL,CACE;AACExD,QAAAA,QAAQ,EAARA;AADF,OADF,EAIE,YAAM;AACJyD,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKhE,KAAjB;AACD,OANH;AAQD,K;;UAEDmE,c,GAAiB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAAA,gCAK3B,MAAKrE,KAAL,CAAWkC,OALgB;AAAA,UAE7BC,WAF6B,uBAE7BA,WAF6B;AAAA,UAG7BC,mBAH6B,uBAG7BA,mBAH6B;AAAA,UAI7BC,cAJ6B,uBAI7BA,cAJ6B;;AAM/B,UAAI+B,GAAG,KAAK,MAAZ,EAAoB;AAClBjC,QAAAA,WAAW,GAAGkC,KAAd;AACD,OAFD,MAEO,IAAID,GAAG,KAAK,eAAZ,EAA6B;AAClChC,QAAAA,mBAAmB,GAAGiC,KAAtB;AACD,OAFM,MAEA,IAAID,GAAG,KAAK,cAAZ,EAA4B;AACjC/B,QAAAA,cAAc,GAAGgC,KAAjB;AACD;;AACD,YAAKP,QAAL,CAAc;AACZ5B,QAAAA,OAAO,EAAE;AAAEC,UAAAA,WAAW,EAAXA,WAAF;AAAeC,UAAAA,mBAAmB,EAAnBA,mBAAf;AAAoCC,UAAAA,cAAc,EAAdA;AAApC;AADG,OAAd;AAGD,K;;UAEDiC,e,GAAkB,UAAClE,IAAD,EAAU;AAAA,uBACYR,SAAS,CAAC,MAAKI,KAAN,CADrB;AAAA,UACpBO,cADoB,cACpBA,cADoB;AAAA,UACJ0C,WADI,cACJA,WADI;;AAE1B,UAAI,CAAC1C,cAAc,CAACgE,MAApB,EAA4B;AAC1B,cAAKJ,cAAL,CAAoB,MAApB,EAA4B,IAA5B;AACD;;AACDjF,MAAAA,cAAc,CAACkB,IAAD,CAAd,CAAqBoE,IAArB,CACE,UAACC,QAAD,EAAc;AACZV,QAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;;AACA,cAAKN,cAAL,CAAoB,MAApB,EAA4B,KAA5B;;AACAlB,QAAAA,WAAW,CAACf,OAAZ,GAAsB,KAAtB;;AACA,cAAK4B,QAAL,CAAc;AAAEb,UAAAA,WAAW,EAAXA;AAAF,SAAd,EAJY,CAKZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,OAzBH,EA0BE,UAACyB,KAAD,EAAW;AACTX,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;;AACA,cAAKP,cAAL,CAAoB,MAApB,EAA4B,KAA5B;;AACAlB,QAAAA,WAAW,CAACf,OAAZ,GAAsB,KAAtB;;AACA,cAAK4B,QAAL,CAAc;AAAEb,UAAAA,WAAW,EAAXA;AAAF,SAAd,EAJS,CAKT;;;AACAtD,QAAAA,SAAS,CACP+E,KAAK,CAACC,MAAN,IAAgBD,KAAK,CAACC,MAAN,CAAaJ,MAA7B,GACIG,KAAK,CAACC,MADV,GAEI,yCAHG,EAIP,OAJO,CAAT;AAMD,OAtCH;AAwCD,K;;UAEDC,e,GAAkB,UAACxE,IAAD,EAAU;AAAA,UACpBG,cADoB,GACD,MAAKP,KADJ,CACpBO,cADoB;AAE1B,UAAIsE,WAAW,GAAGtE,cAAc,CAACuE,IAAf,CAAoB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAAC3D,EAAL,KAAYhB,IAAI,CAACgB,EAA3B;AAAA,OAApB,CAAlB;AACAyD,MAAAA,WAAW,CAAC9D,MAAZ,GACE8D,WAAW,CAAC9D,MAAZ,KAAuB,QAAvB,GAAkC,UAAlC,GAA+C,QADjD;;AAEA,YAAK+C,QAAL,CAAc;AACZvD,QAAAA,cAAc,EAAdA,cADY;AAEZS,QAAAA,oBAAoB,EAAET;AAFV,OAAd;;AAIAwD,MAAAA,OAAO,CAACC,GAAR,CAAYzD,cAAZ;;AACA,YAAK4D,cAAL,CAAoB,eAApB,EAAqC,IAArC;;AACAnF,MAAAA,gBAAgB,CAACoB,IAAI,CAACgB,EAAN,CAAhB,CAA0BoD,IAA1B,CACE,UAACC,QAAD,EAAc;AACZV,QAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;;AACA,cAAKN,cAAL,CAAoB,eAApB,EAAqC,KAArC;;AACA/E,QAAAA,WAAW,CAAC4F,OAAZ,CAAoB,8BAApB,EAAoD,IAApD;AACD,OALH,EAME,UAACN,KAAD,EAAW;AACTX,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;;AACA,cAAKP,cAAL,CAAoB,eAApB,EAAqC,KAArC,EAFS,CAGT;;;AACAxE,QAAAA,SAAS,CACP+E,KAAK,CAACC,MAAN,IAAgBD,KAAK,CAACC,MAAN,CAAaJ,MAA7B,GACIG,KAAK,CAACC,MADV,GAEI,yCAHG,EAIP,OAJO,CAAT;AAMD,OAhBH;AAkBD,K;;UAEDM,W,GAAc,UAACC,IAAD,EAAOC,GAAP,EAAYC,MAAZ,EAAuB;AACnC,UAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1BrB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACA;AAAA;AACE;AACA,8BAAC,IAAD;AAAM,YAAA,EAAE,0CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAK,YAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGA,GAAG,CAAC3E,SADP,CADF;AAFF;AAQD,OAVD,MAUO,IAAI4E,MAAM,KAAK,OAAf,EAAwB;AAC7B,4BACE,oBAAC,aAAD;AAAe,UAAA,WAAW,EAAED,GAAG,CAACtC,KAAhC;AAAuC,UAAA,MAAM,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJM,MAIA,IAAIuC,MAAM,KAAK,OAAf,EAAwB;AAC7B,eAAOD,GAAG,CAACrC,KAAJ,KAAc,GAAd,gBACL,oBAAC,aAAD;AACE,UAAA,WAAW,EAAEhD,0BAA0B,CACrCqF,GAAG,CAACrC,KADiC,CAA1B,CAEXuC,mBAFW,EADf;AAIE,UAAA,MAAM,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,GAQL,GARF;AAUD,OAXM,MAWA,IAAID,MAAM,KAAK,UAAf,EAA2B;AAChC,eAAOF,IAAI,GAAG,MAAK3B,WAAL,CAAiB2B,IAAjB,CAAH,GAA4B,GAAvC;AACD,OAFM,MAEA,IAAIE,MAAM,KAAK,OAAf,EAAwB;AAC7B,eAAOF,IAAI,IAAIA,IAAI,CAACX,MAAb,gBACL;AAAM,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAKb,0BAAL,CAAgCyB,GAAhC,CAAN;AAAA,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,IAAI,CAACX,MADR,CADK,GAKL,CALF;AAOD,OARM,MAQA,IAAIa,MAAM,KAAK,QAAf,EAAyB;AAC9B,4BACE,oBAAC,KAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAEF,IAFT;AAGE,UAAA,QAAQ,EAAE;AAAA,mBAAM,MAAKN,eAAL,CAAqBO,GAArB,CAAN;AAAA,WAHZ,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAME;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAQ,UAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,CADF;AAWD,OAZM,MAYA,IAAIC,MAAM,KAAK,QAAf,EAAyB;AAC9B,4BACE,oBAAC,IAAD;AAAM,UAAA,EAAE,6BAAsBD,GAAG,CAAC/D,EAA1B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAKD,OANM,MAMA;AACL,eAAO8D,IAAP;AACD;AACF,K;;UAEDI,e,GAAkB,gBAAuB;AAAA,UAApBC,aAAoB,QAApBA,aAAoB;AAAA,UACjC/D,OADiC,GACrB,MAAKxB,KADgB,CACjCwB,OADiC;AAEvCA,MAAAA,OAAO,CAAC+D,aAAa,CAAC3C,IAAf,CAAP,GAA8B2C,aAAa,CAAClB,KAA5C;;AACA,YAAKP,QAAL,CAAc;AAAEtC,QAAAA,OAAO,EAAPA;AAAF,OAAd;;AACA,UAAI+D,aAAa,CAAC3C,IAAd,KAAuB,QAA3B,EAAqC;AACnC;AACA,cAAK4C,mBAAL;AACD;AACF,K;;UAGDC,qB,GAAwB,YAAM;AAC5B,UAAIC,gBAAgB,GAAG,EAAvB,CAD4B,CAE5B;;AAF4B,wBAG4B,MAAK1F,KAHjC;AAAA,UAGtBwB,OAHsB,eAGtBA,OAHsB;AAAA,UAGbR,oBAHa,eAGbA,oBAHa;AAAA,UAGST,cAHT,eAGSA,cAHT;AAI5BoF,MAAAA,MAAM,CAACC,IAAP,CAAYpE,OAAZ,EAAqBqE,OAArB,CAA6B,UAACzB,GAAD,EAAS;AACpC,YAAI5C,OAAO,CAAC4C,GAAD,CAAX,EAAkB;AAChBsB,UAAAA,gBAAgB,CAACI,IAAjB,CAAsB1B,GAAtB;AACD;AACF,OAJD;AAKAL,MAAAA,OAAO,CAACC,GAAR,CAAY0B,gBAAZ;AACAnF,MAAAA,cAAc,GAAGS,oBAAjB;;AACA,UAAI0E,gBAAgB,CAACnB,MAArB,EAA6B;AAC3B,YAAI/C,OAAO,CAACO,aAAZ,EAA2B;AACzBgC,UAAAA,OAAO,CAACC,GAAR,CAAYxC,OAAO,CAACO,aAApB;AACA,cAAIgE,KAAK,GAAG,MAAK/F,KAAL,CAAWsB,kBAAX,CAA8BE,OAAO,CAACO,aAAtC,EAAqDsC,KAAjE;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAY+B,KAAZ;AACAxF,UAAAA,cAAc,GAAGA,cAAc,CAACyF,MAAf,CAAsB,UAACjB,IAAD,EAAU;AAC/C;AACA;AACA;AACA;AACA;AACA,gBAAIgB,KAAK,CAACE,GAAN,IAAa,CAACF,KAAK,CAACG,GAAxB,EAA6B;AAC3B,qBAAOnB,IAAI,CAAChD,aAAL,CAAmBwC,MAAnB,GAA4BwB,KAAK,CAACE,GAAzC;AACD,aAFD,MAEO;AACL,qBACElB,IAAI,CAAChD,aAAL,CAAmBwC,MAAnB,IAA6BwB,KAAK,CAACE,GAAnC,IACAlB,IAAI,CAAChD,aAAL,CAAmBwC,MAAnB,IAA6BwB,KAAK,CAACG,GAFrC;AAID;AACF,WAdgB,CAAjB;AAeD;;AACD,YAAI1E,OAAO,CAACT,MAAZ,EAAoB;AAClBR,UAAAA,cAAc,GAAGA,cAAc,CAACyF,MAAf,CAAsB,UAACjB,IAAD,EAAU;AAC/C,mBAAOA,IAAI,CAAChE,MAAL,CAAYoF,WAAZ,OAA8B3E,OAAO,CAACT,MAAR,CAAeoF,WAAf,EAArC;AACD,WAFgB,CAAjB;AAGD;;AACD,YAAI3E,OAAO,CAACQ,MAAR,CAAeoE,IAAf,GAAsB7B,MAA1B,EAAkC;AAChChE,UAAAA,cAAc,GAAGA,cAAc,CAACyF,MAAf,CAAsB,UAACjB,IAAD,EAAU;AAC/C,mBACEA,IAAI,CAACnC,IAAL,CAAUuD,WAAV,GAAwBE,QAAxB,CAAiC7E,OAAO,CAACQ,MAAR,CAAemE,WAAf,EAAjC,KACApB,IAAI,CAAClC,KAAL,CAAWsD,WAAX,GAAyBE,QAAzB,CAAkC7E,OAAO,CAACQ,MAAR,CAAemE,WAAf,EAAlC,CADA,IAEApB,IAAI,CAACjC,KAAL,CAAWqD,WAAX,GAAyBE,QAAzB,CAAkC7E,OAAO,CAACQ,MAAR,CAAemE,WAAf,EAAlC,CAHF;AAKD,WANgB,CAAjB;AAOD;;AACD,cAAKrC,QAAL,CAAc;AAAEvD,UAAAA,cAAc,EAAdA;AAAF,SAAd;AACD,OApCD,MAoCO;AACL,cAAKuD,QAAL,CAAc;AAAEvD,UAAAA,cAAc,EAAES;AAAlB,SAAd;AACD;AACF,K;;UAEDsF,gB,GAAmB,UAAClG,IAAD,EAAU;AAC3B2D,MAAAA,OAAO,CAACC,GAAR,CAAY5D,IAAZ;AAD2B,UAErBqC,mBAFqB,GAEG,MAAKzC,KAFR,CAErByC,mBAFqB;AAG3BA,MAAAA,mBAAmB,GAAGrC,IAAtB;;AACA,YAAK0D,QAAL,CAAc;AAAErB,QAAAA,mBAAmB,EAAnBA;AAAF,OAAd;AACD,K;;UAED8D,gB,GAAmB,iBAAuB;AAAA,UAApBhB,aAAoB,SAApBA,aAAoB;AAAA,UAClCjD,OADkC,GACtB,MAAKtC,KADiB,CAClCsC,OADkC;AAExCA,MAAAA,OAAO,CAACiD,aAAa,CAAC3C,IAAf,CAAP,GAA8B2C,aAAa,CAAClB,KAA5C;;AACA,YAAKP,QAAL,CAAc;AAAExB,QAAAA,OAAO,EAAPA;AAAF,OAAd;AACD,K;;UAEDkE,kB,GAAqB,UAACnC,KAAD,EAAQD,GAAR,EAAgB;AAAA,UAC7B9B,OAD6B,GACjB,MAAKtC,KADY,CAC7BsC,OAD6B;AAEnCA,MAAAA,OAAO,CAAC8B,GAAD,CAAP,GAAeC,KAAf;;AACA,YAAKP,QAAL,CAAc;AAAExB,QAAAA,OAAO,EAAPA;AAAF,OAAd;AACD,K;;UAEDmE,e,GAAkB,UAACC,CAAD,EAAO;AACvB,UAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AACAF,MAAAA,IAAI,CAACG,SAAL,GAAiBJ,CAAjB;AACA,aAAOC,IAAI,CAACI,WAAL,IAAoBJ,IAAI,CAACK,SAAhC;AACD,K;;UAEDC,Y,GAAe,YAAM;AAAA,yBACoB,MAAKjH,KADzB;AAAA,UACbsC,OADa,gBACbA,OADa;AAAA,UACJG,mBADI,gBACJA,mBADI;AAEnB,UAAIrC,IAAI,GAAG;AACT8G,QAAAA,MAAM,EAAEzE,mBADC;AAET0E,QAAAA,IAAI,EACF7E,OAAO,CAACC,GAAR,KAAgB,OAAhB,GACID,OAAO,CAACE,OADZ,GAEI,MAAKiE,eAAL,CAAqBnE,OAAO,CAACE,OAA7B;AALG,OAAX;;AAOA,UAAI,CAACpC,IAAI,CAAC8G,MAAL,CAAY3C,MAAjB,EAAyB;AACvBnF,QAAAA,WAAW,CAACgI,OAAZ,CAAoB,mCAApB,EAAyD,IAAzD;AACA;AACD;;AACD,UAAI,CAAChH,IAAI,CAAC+G,IAAL,CAAUf,IAAV,GAAiB7B,MAAtB,EAA8B;AAC5BnF,QAAAA,WAAW,CAACgI,OAAZ,CAAoB,2BAApB,EAAiD,IAAjD;AACA;AACD;;AACDrD,MAAAA,OAAO,CAACC,GAAR,CAAY5D,IAAZ;;AACA,YAAK+D,cAAL,CAAoB,cAApB,EAAoC,IAApC;;AACAlF,MAAAA,WAAW,CAACqD,OAAO,CAACC,GAAT,EAAcnC,IAAd,CAAX,CAA+BoE,IAA/B,CACE,UAACC,QAAD,EAAc;AACZV,QAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;;AACA,cAAK+B,kBAAL,CAAwB,EAAxB,EAA4B,SAA5B;;AACA,cAAKrC,cAAL,CAAoB,cAApB,EAAoC,KAApC;;AACA/E,QAAAA,WAAW,CAAC4F,OAAZ,CAAoB,4BAApB,EAAkD,IAAlD;AACD,OANH,EAOE,UAACN,KAAD,EAAW;AACTX,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;;AACA,cAAKP,cAAL,CAAoB,cAApB,EAAoC,KAApC,EAFS,CAGT;;;AACAxE,QAAAA,SAAS,CACP+E,KAAK,CAACC,MAAN,IAAgBD,KAAK,CAACC,MAAN,CAAaJ,MAA7B,GACIG,KAAK,CAACC,MADV,GAEI,yCAHG,EAIP,OAJO,CAAT;AAMD,OAjBH;AAmBD,K;;UAED0C,S,GAAY,UAACnE,UAAD,EAAaC,QAAb,EAA0B;AACpCY,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCd,UAAtC,EAAkDC,QAAlD;AADoC,UAE5BF,WAF4B,GAEZ,MAAKjD,KAFO,CAE5BiD,WAF4B;AAGpCA,MAAAA,WAAW,CAACC,UAAZ,GAAyBA,UAAzB;AACAD,MAAAA,WAAW,CAACE,QAAZ,GAAuBA,QAAvB;AACAF,MAAAA,WAAW,CAACf,OAAZ,GAAsB,IAAtB;AACAoF,MAAAA,UAAU,CAAC,YAAM;AACf,cAAKxD,QAAL,CAAc;AAAEb,UAAAA,WAAW,EAAXA;AAAF,SAAd,EAA+B,YAAM;AACnC,gBAAKqB,eAAL,CAAqB,MAAKtE,KAAL,CAAWiD,WAAhC;AACD,SAFD;AAGD,OAJS,EAIP,GAJO,CAAV;AAKD,K;;UAEDsE,a,GAAgB,UAACC,QAAD,EAAWlE,SAAX,EAAyB;AAAA,wBACf1D,SAAS,CAAC,MAAKI,KAAN,CADM;AAAA,UAC/BiD,WAD+B,eAC/BA,WAD+B;;AAEvCA,MAAAA,WAAW,CAACG,IAAZ,CAAiBC,MAAjB,GAA0B,MAAKrD,KAAL,CAAW2C,sBAAX,CAAkC6E,QAAlC,CAA1B;AACAvE,MAAAA,WAAW,CAACG,IAAZ,CAAiBE,SAAjB,GAA6BA,SAA7B;AACAL,MAAAA,WAAW,CAACf,OAAZ,GAAsB,IAAtB;;AACA,YAAK4B,QAAL,CAAc;AAAEb,QAAAA,WAAW,EAAXA;AAAF,OAAd,EAA+B,YAAM;AACnC,cAAKqB,eAAL,CAAqBrB,WAArB;AACD,OAFD;;AAGAc,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCwD,QAArC,EAA+ClE,SAA/C;AACD,K;;UAEDkC,mB,GAAsB,YAAM;AAAA,wBACO5F,SAAS,CAAC,MAAKI,KAAN,CADhB;AAAA,UAClBwB,OADkB,eAClBA,OADkB;AAAA,UACTyB,WADS,eACTA,WADS;;AAE1Bc,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBxC,OAAzB;AACA,UAAIpB,IAAI,GAAG,EAAX;;AACA,UAAIoB,OAAO,CAACO,aAAR,CAAsBwC,MAA1B,EAAkC;AAChCnE,QAAAA,IAAI,CAACqH,cAAL,GAAsB;AACpBC,UAAAA,UAAU,EAAE,MAAK1H,KAAL,CAAWsB,kBAAX,CAA8BE,OAAO,CAACO,aAAtC,EAAqDsC,KAArD,CACT4B,GAFiB;AAGpB0B,UAAAA,UAAU,EAAE,MAAK3H,KAAL,CAAWsB,kBAAX,CAA8BE,OAAO,CAACO,aAAtC,EAAqDsC,KAArD,CACT6B;AAJiB,SAAtB;AAMD;;AACD,UAAI1E,OAAO,CAACS,KAAR,CAAcsC,MAAlB,EAA0B;AACxBnE,QAAAA,IAAI,CAAC6B,KAAL,GAAa;AACXyF,UAAAA,UAAU,EAAE,MAAK1H,KAAL,CAAWuB,WAAX,CAAuBC,OAAO,CAACS,KAA/B,EAAsCoC,KAAtC,CAA4C4B,GAD7C;AAEX0B,UAAAA,UAAU,EAAE,MAAK3H,KAAL,CAAWuB,WAAX,CAAuBC,OAAO,CAACS,KAA/B,EAAsCoC,KAAtC,CAA4C6B;AAF7C,SAAb;AAID;;AACD,UAAI1E,OAAO,CAACT,MAAR,CAAewD,MAAnB,EAA2B;AACzBnE,QAAAA,IAAI,CAACwH,QAAL,GAAgBpG,OAAO,CAACT,MAAR,KAAmB,QAAnB,GAA8B,IAA9B,GAAqC,KAArD;AACD;;AACDgD,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB5D,IAAtB;AACA6C,MAAAA,WAAW,CAACzB,OAAZ,GAAsBpB,IAAtB;;AACA,UAAIoB,OAAO,CAACQ,MAAR,CAAeuC,MAAnB,EAA2B;AACzBtB,QAAAA,WAAW,CAACjB,MAAZ,GAAqBR,OAAO,CAACQ,MAA7B;AACD,OAFD,MAEO;AACLiB,QAAAA,WAAW,CAACjB,MAAZ,GAAqB,EAArB;AACD;;AACDiB,MAAAA,WAAW,CAACf,OAAZ,GAAsB,IAAtB;;AACA,YAAK4B,QAAL,CAAc;AAAEb,QAAAA,WAAW,EAAXA;AAAF,OAAd,EAA+B,YAAM;AACnC,cAAKqB,eAAL,CAAqBrB,WAArB;AACD,OAFD;AAGD,K;;;;;;;wCAEmB;AAClB,WAAKqB,eAAL,CAAqB,KAAKtE,KAAL,CAAWiD,WAAhC;AACD;;;6BAEQ;AAAA;;AAAA,yBASH,KAAKjD,KATF;AAAA,UAELwB,OAFK,gBAELA,OAFK;AAAA,UAGLU,OAHK,gBAGLA,OAHK;AAAA,UAILZ,kBAJK,gBAILA,kBAJK;AAAA,UAKLC,WALK,gBAKLA,WALK;AAAA,UAMLe,OANK,gBAMLA,OANK;AAAA,UAOLI,UAPK,gBAOLA,UAPK;AAAA,UAQLO,WARK,gBAQLA,WARK;AAWP,0BACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF,EAUG,CAACf,OAAO,CAACC,WAAT,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAGE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,KAAK,EAAEX,OAAO,CAACqG,OAHjB;AAIE,QAAA,QAAQ,EAAE,KAAKvC,eAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CAHF,eAgBE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,KAAK,EAAE9D,OAAO,CAACqG,OAHjB;AAIE,QAAA,QAAQ,EAAE,KAAKvC,eAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CAhBF,eA6BE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,KAAK,EAAE9D,OAAO,CAACqG,OAHjB;AAIE,QAAA,QAAQ,EAAE,KAAKvC,eAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,CA7BF,eAgEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAE9D,OAAO,CAACsG,KAHjB;AAIE,QAAA,QAAQ,EAAE,KAAKxC,eAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,CAhEF,CADF,eA4FE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,QAFL;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,WAAW,EAAC,QAJd;AAKE,QAAA,YAAY,EAAC,KALf;AAME,QAAA,SAAS,EAAC,MANZ;AAOE,QAAA,KAAK,EAAE,KAAKtF,KAAL,CAAWwB,OAAX,CAAmBQ,MAP5B;AAQE,QAAA,QAAQ,EAAE,KAAKsD,eARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAYE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACE,mBAAL,EAAN;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAZF,CA5FF,CADF,EAiHS,GAjHT,eA0HE,oBAAC,eAAD;AACE,QAAA,SAAS,EAAE,KAAKxF,KAAL,CAAWO,cADxB;AAEE,QAAA,UAAU,EAAE,KAAKP,KAAL,CAAWmB,UAFzB;AAGE,QAAA,UAAU,EAAE,KAAK8D,WAHnB;AAIE,QAAA,UAAU,EAAEvC,UAJd;AAKE,QAAA,YAAY,EAAE,IALhB;AAME,QAAA,UAAU,EAAE,oBAACQ,UAAD,EAAaC,QAAb;AAAA,iBACV,MAAI,CAACkE,SAAL,CAAenE,UAAf,EAA2BC,QAA3B,CADU;AAAA,SANd;AASE,QAAA,YAAY,EAAE,sBAACqE,QAAD,EAAWlE,SAAX;AAAA,iBACZ,MAAI,CAACiE,aAAL,CAAmBC,QAAnB,EAA6BlE,SAA7B,CADY;AAAA,SAThB;AAYE,QAAA,eAAe,EAAE,yBAAClD,IAAD;AAAA,iBAAU,MAAI,CAACkG,gBAAL,CAAsBlG,IAAtB,CAAV;AAAA,SAZnB;AAaE,QAAA,gBAAgB,EAAE6C,WAAW,CAACf,OAbhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1HF,CAXJ,EAsJGA,OAAO,CAACC,WAAR,iBACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,gCADF,CAvJJ,eA4KE,oBAAC,qBAAD;AACE,QAAA,MAAM,EAAE,KAAKnC,KAAL,CAAWE,iBAAX,CAA6BC,MADvC;AAEE,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWE,iBAAX,CAA6BE,IAFrC;AAGE,QAAA,MAAM,EAAE;AAAA,iBAAM,MAAI,CAACsD,0BAAL,EAAN;AAAA,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5KF,eAmLE,oBAAC,SAAD;AACE,QAAA,MAAM,EAAE,KAAK1D,KAAL,CAAWK,SAAX,CAAqBF,MAD/B;AAEE,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWK,SAAX,CAAqBD,IAF7B;AAGE,QAAA,MAAM,EAAE;AAAA,iBAAM,MAAI,CAAC6D,kBAAL,EAAN;AAAA,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnLF,eAyLE,oBAAC,YAAD;AACE,QAAA,MAAM,EAAE,KAAKjE,KAAL,CAAWM,QAAX,CAAoBH,MAD9B;AAEE,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWM,QAAX,CAAoBF,IAF5B;AAGE,QAAA,MAAM,EAAE;AAAA,iBAAM,MAAI,CAAC8D,iBAAL,EAAN;AAAA,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzLF,CADF,CADF,CADF,CADF;AAuMD;;;;EA5rBoB5F,S;;AA+rBvB,eAAeyB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Col,\n  // Table,\n  Button,\n  Input,\n  // FormGroup,\n  // Label,\n  // Modal,\n  // ModalBody,\n  // ModalFooter,\n  // ModalHeader\n} from \"reactstrap\";\nimport CustomTable from \"../components/custom-table\";\nimport CustomDateRangePicker from \"../components/date-range-picker\";\nimport {\n  getAllSubscribers,\n  changeUserStatus,\n  sendMessage,\n  getAllProducts,\n} from \"../http/http-calls\";\nimport config from \"../config\";\nimport { ToastsStore } from \"react-toasts\";\nimport SubscriptionListModal from \"../components/subscription-list-modal\";\nimport TipsModal from \"../components/tips-list-modal\";\nimport PpvListModal from \"../components/ppv-list-modal\";\n// import CopyclipBoard from \"../../components/copy-clipboard\";\nimport CopyclipBoard from \"../components/copy-clipboard\";\nimport { format } from \"date-fns\";\nimport TextEditor from \"../components/text-editor\";\nimport { showToast, deepClone } from \"../helper-methods\";\nimport CustomDataTable from \"../components/custom-data-table\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\n\nclass Shoutout extends Component {\n  state = {\n    modals: [false, false, false],\n    subscriptionModal: {\n      isOpen: false,\n      data: null,\n    },\n    tipsModal: {\n      isOpen: false,\n      data: null,\n    },\n    ppvModal: {\n      isOpen: false,\n      data: null,\n    },\n    subscriberList: [\n      {\n        productid: 12345,\n        productname: \"Samsung Mobile\",\n        category: \"Mobile\",\n        seller: \"Abc\",\n        influencers: 2,\n        cost: \"$150\",\n        orders: 4,\n        status: \"active\",\n      },\n    ],\n    subscriberListBackup: [],\n    productList:[],\n    productListBackup:[],\n    headerKeys: [\n      { id: \"id\", label: \"id\" },\n      { id: \"productid\", label: \"Product Id\" },\n      { id: \"productname\", label: \"Product Name\" },\n      { id: \"category\", label: \"Category\" },\n      { id: \"seller\", label: \"Seller\" },\n      { id: \"influencers\", label: \"Influencers\" },\n      { id: \"cost\", label: \"Cost\" },\n      { id: \"orders\", label: \"Orders\" },\n      { id: \"status\", label: \"Status\" },\n      // { id: \"name\", label: \"Name\" },\n      // { id: \"flag\", label: \"Flag\" },\n      // { id: \"email\", label: \"Email\" },\n      // { id: \"phone\", label: \"Phone\" },\n      // { id: \"joinedAt\", label: \"Joined\" },\n      // { id: \"subscriptions\", label: \"Subscriptions\" },\n      // { id: \"tipAmount\", label: \"Tips\" },\n      // { id: \"spent\", label: \"Lifetime Spend\" },\n      // { id: \"status\", label: \"Status\" },\n      // { id: \"action\", label: \"Action\", noSort: true }\n    ],\n    subscriptionCounts: config.subscriptionCounts,\n    spentCounts: config.spentCounts,\n    filters: {\n      dateRange: {\n        startDate: null,\n        endDate: null,\n        focusedInput: null,\n        startDateId: \"startDate\",\n        endDateId: \"endDate\",\n      },\n      subscriptions: \"\",\n      status: \"\",\n      search: \"\",\n      spent: \"\",\n    },\n    loading: {\n      loadingData: false,\n      changeStatusLoading: false,\n      sendingMessage: false,\n    },\n    contact: {\n      via: \"email\",\n      message: \"\",\n    },\n    selectedSubscribers: [],\n    totalCount: 0,\n    subscriberFieldsKeyMap: {\n      name: \"name\",\n      email: \"email\",\n      phone: \"phone\",\n      subscriptions: \"spent\",\n      joinedAt: \"createdAt\",\n      tipAmount: \"tips\",\n      spent: \"spent\",\n      status: \"isActive\",\n    },\n    tableConfig: {\n      pageNumber: 1,\n      pageSize: 10,\n      sort: {\n        sortBy: \"createdAt\",\n        sortOrder: \"desc\",\n      },\n      filters: {},\n    },\n  };\n\n  _formatDate = (date) => {\n    // console.log(\"TCL: Subscribers -> _formatDate -> date\", date);\n    return format(new Date(date), \"MMM d, yyyy\");\n  };\n\n  _onToggleSubscriptionModal = (data) => {\n    let { subscriptionModal } = JSON.parse(JSON.stringify(this.state));\n    subscriptionModal.isOpen = !subscriptionModal.isOpen;\n    subscriptionModal.data = data;\n    this.setState(\n      {\n        subscriptionModal,\n      },\n      () => {\n        console.log(this.state);\n      }\n    );\n  };\n\n  _onToggleTipsModal = (data) => {\n    let { tipsModal } = JSON.parse(JSON.stringify(this.state));\n    tipsModal.isOpen = !tipsModal.isOpen;\n    tipsModal.data = data;\n    this.setState(\n      {\n        tipsModal,\n      },\n      () => {\n        console.log(this.state);\n      }\n    );\n  };\n\n  _onTogglePPVModal = (data) => {\n    let { ppvModal } = JSON.parse(JSON.stringify(this.state));\n    ppvModal.isOpen = !ppvModal.isOpen;\n    ppvModal.data = data;\n    this.setState(\n      {\n        ppvModal,\n      },\n      () => {\n        console.log(this.state);\n      }\n    );\n  };\n\n  _manageLoading = (key, value) => {\n    let {\n      loadingData,\n      changeStatusLoading,\n      sendingMessage,\n    } = this.state.loading;\n    if (key === \"data\") {\n      loadingData = value;\n    } else if (key === \"change-status\") {\n      changeStatusLoading = value;\n    } else if (key === \"send-message\") {\n      sendingMessage = value;\n    }\n    this.setState({\n      loading: { loadingData, changeStatusLoading, sendingMessage },\n    });\n  };\n\n  _getAllProducts = (data) => {\n    let { subscriberList, tableConfig } = deepClone(this.state);\n    if (!subscriberList.length) {\n      this._manageLoading(\"data\", true);\n    }\n    getAllProducts(data).then(\n      (response) => {\n        console.log(response);\n        this._manageLoading(\"data\", false);\n        tableConfig.loading = false;\n        this.setState({ tableConfig });\n        // let subscriberListResp = response.fans.map((each) => {\n        //   return {\n        //     name: each.name.last ? each.name.full : each.name.first,\n        //     id: each.id,\n        //     flag: each.country ? each.country : null,\n        //     email: each.email,\n        //     phone: each.phone || \"-\",\n        //     profilePicture: each.profilePicture || config.defaultUserPicture,\n        //     joinedAt: each.createdAt,\n        //     subscriptions: each.subscriptions,\n        //     spent: each.spent,\n        //     status: each.isActive ? \"Active\" : \"Inactive\",\n        //   };\n        // });\n        // this.setState({\n        //   // subscriberList: subscriberListResp,\n        //   subscriberListBackup: subscriberListResp,\n        //   totalCount: response.count,\n        // });\n      },\n      (error) => {\n        console.log(error);\n        this._manageLoading(\"data\", false);\n        tableConfig.loading = false;\n        this.setState({ tableConfig });\n        // ToastsStore.error(error.reason, 3000);\n        showToast(\n          error.reason && error.reason.length\n            ? error.reason\n            : \"Server error. Try again after sometime.\",\n          \"error\"\n        );\n      }\n    );\n  };\n\n  _onStatusUpdate = (data) => {\n    let { subscriberList } = this.state;\n    let creatorData = subscriberList.find((each) => each.id === data.id);\n    creatorData.status =\n      creatorData.status === \"Active\" ? \"Inactive\" : \"Active\";\n    this.setState({\n      subscriberList,\n      subscriberListBackup: subscriberList,\n    });\n    console.log(subscriberList);\n    this._manageLoading(\"change-status\", true);\n    changeUserStatus(data.id).then(\n      (response) => {\n        console.log(response);\n        this._manageLoading(\"change-status\", false);\n        ToastsStore.success(\"Status changed Successfully!\", 3000);\n      },\n      (error) => {\n        console.log(error);\n        this._manageLoading(\"change-status\", false);\n        // ToastsStore.error(error.reason, 3000);\n        showToast(\n          error.reason && error.reason.length\n            ? error.reason\n            : \"Server error. Try again after sometime.\",\n          \"error\"\n        );\n      }\n    );\n  };\n\n  _dataFormat = (cell, row, header) => {\n    if (header === \"productid\") {\n      console.log(row);\n      return (\n        // <Link to={`/product-view/${row.id}`}>\n        <Link to={`/product-view/5f791cf9db0d183d82b4c142`}>\n          <div className=\"d-flex justify-content-start align-items-center\">\n            {row.productid}\n          </div>\n        </Link>\n      );\n    } else if (header === \"email\") {\n      return (\n        <CopyclipBoard copiedValue={row.email} border=\"none\"></CopyclipBoard>\n      );\n    } else if (header === \"phone\") {\n      return row.phone !== \"-\" ? (\n        <CopyclipBoard\n          copiedValue={parsePhoneNumberFromString(\n            row.phone\n          ).formatInternational()}\n          border=\"none\"\n        ></CopyclipBoard>\n      ) : (\n        \"-\"\n      );\n    } else if (header === \"joinedAt\") {\n      return cell ? this._formatDate(cell) : \"-\";\n    } else if (header === \"sales\") {\n      return cell && cell.length ? (\n        <span onClick={() => this._onToggleSubscriptionModal(row)}>\n          {cell.length}\n        </span>\n      ) : (\n        0\n      );\n    } else if (header === \"status\") {\n      return (\n        <Input\n          type=\"select\"\n          value={cell}\n          onChange={() => this._onStatusUpdate(row)}\n          // disabled={this.state.loading.changeStatusLoading}\n        >\n          <option value=\"Active\">Active</option>\n          <option value=\"Inactive\">Inactive</option>\n        </Input>\n      );\n    } else if (header === \"action\") {\n      return (\n        <Link to={`/subscriber-view/${row.id}`}>\n          <Button color=\"ghost-primary\">View</Button>\n        </Link>\n      );\n    } else {\n      return cell;\n    }\n  };\n\n  _filterOnChange = ({ currentTarget }) => {\n    let { filters } = this.state;\n    filters[currentTarget.name] = currentTarget.value;\n    this.setState({ filters });\n    if (currentTarget.name !== \"search\") {\n      // this._filterSubscriberList();\n      this._applyFilterChanges();\n    }\n  };\n\n  // old function for frontend filtering - not using now\n  _filterSubscriberList = () => {\n    let filterConditions = [];\n    // console.log(this.state);\n    let { filters, subscriberListBackup, subscriberList } = this.state;\n    Object.keys(filters).forEach((key) => {\n      if (filters[key]) {\n        filterConditions.push(key);\n      }\n    });\n    console.log(filterConditions);\n    subscriberList = subscriberListBackup;\n    if (filterConditions.length) {\n      if (filters.subscriptions) {\n        console.log(filters.subscriptions);\n        let range = this.state.subscriptionCounts[filters.subscriptions].value;\n        console.log(range);\n        subscriberList = subscriberList.filter((each) => {\n          // console.log(\n          //   each.subscriptions,\n          //   each.subscriptions >= range.min,\n          //   each.subscriptions <= range.max\n          // );\n          if (range.min && !range.max) {\n            return each.subscriptions.length > range.min;\n          } else {\n            return (\n              each.subscriptions.length >= range.min &&\n              each.subscriptions.length <= range.max\n            );\n          }\n        });\n      }\n      if (filters.status) {\n        subscriberList = subscriberList.filter((each) => {\n          return each.status.toLowerCase() === filters.status.toLowerCase();\n        });\n      }\n      if (filters.search.trim().length) {\n        subscriberList = subscriberList.filter((each) => {\n          return (\n            each.name.toLowerCase().includes(filters.search.toLowerCase()) ||\n            each.email.toLowerCase().includes(filters.search.toLowerCase()) ||\n            each.phone.toLowerCase().includes(filters.search.toLowerCase())\n          );\n        });\n      }\n      this.setState({ subscriberList });\n    } else {\n      this.setState({ subscriberList: subscriberListBackup });\n    }\n  };\n\n  _setSelectedRows = (data) => {\n    console.log(data);\n    let { selectedSubscribers } = this.state;\n    selectedSubscribers = data;\n    this.setState({ selectedSubscribers });\n  };\n\n  _contactOnChange = ({ currentTarget }) => {\n    let { contact } = this.state;\n    contact[currentTarget.name] = currentTarget.value;\n    this.setState({ contact });\n  };\n\n  _setMessageContent = (value, key) => {\n    let { contact } = this.state;\n    contact[key] = value;\n    this.setState({ contact });\n  };\n\n  _extractContent = (s) => {\n    var span = document.createElement(\"span\");\n    span.innerHTML = s;\n    return span.textContent || span.innerText;\n  };\n\n  _sendMessage = () => {\n    let { contact, selectedSubscribers } = this.state;\n    let data = {\n      idlist: selectedSubscribers,\n      text:\n        contact.via === \"email\"\n          ? contact.message\n          : this._extractContent(contact.message),\n    };\n    if (!data.idlist.length) {\n      ToastsStore.warning(\"Please select atleast one creator\", 3000);\n      return;\n    }\n    if (!data.text.trim().length) {\n      ToastsStore.warning(\"Please write some message\", 3000);\n      return;\n    }\n    console.log(data);\n    this._manageLoading(\"send-message\", true);\n    sendMessage(contact.via, data).then(\n      (response) => {\n        console.log(response);\n        this._setMessageContent(\"\", \"message\");\n        this._manageLoading(\"send-message\", false);\n        ToastsStore.success(\"Message sent Successfully!\", 3000);\n      },\n      (error) => {\n        console.log(error);\n        this._manageLoading(\"send-message\", false);\n        // ToastsStore.error(error.reason, 3000);\n        showToast(\n          error.reason && error.reason.length\n            ? error.reason\n            : \"Server error. Try again after sometime.\",\n          \"error\"\n        );\n      }\n    );\n  };\n\n  _paginate = (pageNumber, pageSize) => {\n    console.log(\"pageNumber, pageSize :\", pageNumber, pageSize);\n    const { tableConfig } = this.state;\n    tableConfig.pageNumber = pageNumber;\n    tableConfig.pageSize = pageSize;\n    tableConfig.loading = true;\n    setTimeout(() => {\n      this.setState({ tableConfig }, () => {\n        this._getAllProducts(this.state.tableConfig);\n      });\n    }, 100);\n  };\n\n  _onSortChange = (sortName, sortOrder) => {\n    const { tableConfig } = deepClone(this.state);\n    tableConfig.sort.sortBy = this.state.subscriberFieldsKeyMap[sortName];\n    tableConfig.sort.sortOrder = sortOrder;\n    tableConfig.loading = true;\n    this.setState({ tableConfig }, () => {\n      this._getAllProducts(tableConfig);\n    });\n    console.log(\"sortName, sortOrder :\", sortName, sortOrder);\n  };\n\n  _applyFilterChanges = () => {\n    const { filters, tableConfig } = deepClone(this.state);\n    console.log(\"filters :\", filters);\n    let data = {};\n    if (filters.subscriptions.length) {\n      data._subscriptions = {\n        lowerLimit: this.state.subscriptionCounts[filters.subscriptions].value\n          .min,\n        upperLimit: this.state.subscriptionCounts[filters.subscriptions].value\n          .max,\n      };\n    }\n    if (filters.spent.length) {\n      data.spent = {\n        lowerLimit: this.state.spentCounts[filters.spent].value.min,\n        upperLimit: this.state.spentCounts[filters.spent].value.max,\n      };\n    }\n    if (filters.status.length) {\n      data.isActive = filters.status === \"active\" ? true : false;\n    }\n    console.log(\"data :\", data);\n    tableConfig.filters = data;\n    if (filters.search.length) {\n      tableConfig.search = filters.search;\n    } else {\n      tableConfig.search = \"\";\n    }\n    tableConfig.loading = true;\n    this.setState({ tableConfig }, () => {\n      this._getAllProducts(tableConfig);\n    });\n  };\n\n  componentDidMount() {\n    this._getAllProducts(this.state.tableConfig);\n  }\n\n  render() {\n    const {\n      filters,\n      loading,\n      subscriptionCounts,\n      spentCounts,\n      contact,\n      totalCount,\n      tableConfig,\n    } = this.state;\n\n    return (\n      <div className=\"app TruFansPgBg animated fadeIn\">\n        <Container fluid>\n          <Row>\n            <Col xs=\"12\">\n              <div className=\"PgTitle justify-content-start align-items-center\">\n                {/* on clicking the below btn, it should take back the user to the previous page in history */}\n                {/* <Button color=\"ghost-dark\" className=\"customBackBtn\">\n                  <i className=\"fa fa-arrow-left\"></i>\n                </Button> */}\n\n                <h2>Products</h2>\n              </div>\n              {/* filters */}\n              {!loading.loadingData && (\n                <div>\n                  <div className=\"filterWrap\">\n                    <div className=\"d-flex align-items-center\">\n                      <i className=\"fa fa-filter\"></i>\n\n                      <Input\n                        type=\"select\"\n                        name=\"creator\"\n                        value={filters.creator}\n                        onChange={this._filterOnChange}\n                      >\n                        <option value=\"\">Category</option>\n                        {/* {subscriptionCounts.map((option, index) => (\n                          <option key={index} value={index}>\n                            {option.label}\n                          </option>\n                        ))} */}\n                      </Input>\n                      <Input\n                        type=\"select\"\n                        name=\"creator\"\n                        value={filters.creator}\n                        onChange={this._filterOnChange}\n                      >\n                        <option value=\"\">Seller</option>\n                        {/* {subscriptionCounts.map((option, index) => (\n                          <option key={index} value={index}>\n                            {option.label}\n                          </option>\n                        ))} */}\n                      </Input>\n                      <Input\n                        type=\"select\"\n                        name=\"creator\"\n                        value={filters.creator}\n                        onChange={this._filterOnChange}\n                      >\n                        <option value=\"\">Influencer</option>\n                        {/* {subscriptionCounts.map((option, index) => (\n                          <option key={index} value={index}>\n                            {option.label}\n                          </option>\n                        ))} */}\n                      </Input>\n                      {/* <div className=\"ml-2\">\n                        <CustomDateRangePicker\n                          dateRange={filters.dateRange}\n                          onDatesChange={this._onDatesChange}\n                          onFocusChange={this._onFocusChange}\n                        ></CustomDateRangePicker>\n                      </div> */}\n                      {/* <Input\n                        type=\"select\"\n                        name=\"price\"\n                        value={filters.price}\n                        onChange={this._filterOnChange}\n                      >\n                        <option value=\"\">Price</option>\n                        <option value=\"0-20\">0-20</option>\n                        <option value=\"20-50\">20-50</option>\n                        <option value=\"50-100\">50-100</option>\n                        <option value=\"100-250\">100-250</option>\n                        <option value=\"250-500\">250-500</option>\n                        <option value=\"500\">500+</option>\n                       \n                      </Input> */}\n                      <Input\n                        type=\"select\"\n                        name=\"sales\"\n                        value={filters.sales}\n                        onChange={this._filterOnChange}\n                      >\n                        <option value=\"\">Price</option>\n                        {/* <option value=\"0\">0</option>\n                        <option value=\"20-50\">1-5</option>\n                        <option value=\"50-100\">6-10</option>\n                        <option value=\"100-250\">11-20</option>\n                        <option value=\"250-500\">21-50</option>\n                        <option value=\"250-500\">51-100</option>\n                        <option value=\"500\">100+</option> */}\n                      </Input>\n                      {/* <Input\n                        type=\"select\"\n                        name=\"type\"\n                        value={filters.type}\n                        onChange={this._filterOnChange}\n                      >\n                        <option value=\"\">Type</option> */}\n                      {/* <option value=\"active\">Active</option>\n                        <option value=\"inactive\">Inactive</option> */}\n                      {/* </Input> */}\n                    </div>\n\n                    <div className=\"d-flex align-items-center\">\n                      <Input\n                        type=\"text\"\n                        id=\"search\"\n                        name=\"search\"\n                        placeholder=\"Search\"\n                        autoComplete=\"off\"\n                        className=\"ml-2\"\n                        value={this.state.filters.search}\n                        onChange={this._filterOnChange}\n                      />\n\n                      <Button\n                        color=\"secondary\"\n                        className=\"ml-2\"\n                        onClick={() => this._applyFilterChanges()}\n                      >\n                        <i className=\"icon-magnifier\"></i>\n                      </Button>\n                    </div>\n                  </div>{\" \"}\n                  {/* filterWrap */}\n                  {/* <CustomTable\n                    tableData={this.state.subscriberList}\n                    headerKeys={this.state.headerKeys}\n                    dataFormat={this._dataFormat}\n                    rowSelection={true}\n                    setSelectedRows={data => this._setSelectedRows(data)}\n                  ></CustomTable> */}\n                  <CustomDataTable\n                    tableData={this.state.subscriberList}\n                    headerKeys={this.state.headerKeys}\n                    dataFormat={this._dataFormat}\n                    totalCount={totalCount}\n                    rowSelection={true}\n                    onPaginate={(pageNumber, pageSize) =>\n                      this._paginate(pageNumber, pageSize)\n                    }\n                    onSortChange={(sortName, sortOrder) =>\n                      this._onSortChange(sortName, sortOrder)\n                    }\n                    setSelectedRows={(data) => this._setSelectedRows(data)}\n                    showTableLoading={tableConfig.loading}\n                  ></CustomDataTable>\n                </div>\n              )}\n              {loading.loadingData && (\n                <div className=\"filterWrap\">\n                  <div className=\"loading-section list-loading\">\n                    <i className=\"fa fa-spinner fa-spin\"></i> &nbsp; Loading\n                    Subscribers..\n                  </div>\n                </div>\n              )}\n              {/* The below div will appear after the user selects row(s) from the above table */}\n\n              {/* there will be a \"WYSIWYG\" editor below in place of a textarea  */}\n              {/* <Input\n                      type=\"textarea\"\n                      id=\"\"\n                      rows=\"6\"\n                      placeholder=\"Enter your message here..\"\n                      name=\"message\"\n                      value={contact.message}\n                      onChange={this._contactOnChange}\n                    /> */}\n\n              {/* Modal for \"Subscriptions\" */}\n              <SubscriptionListModal\n                isOpen={this.state.subscriptionModal.isOpen}\n                data={this.state.subscriptionModal.data}\n                toggle={() => this._onToggleSubscriptionModal()}\n              ></SubscriptionListModal>\n\n              {/* Modal for \"Tips\" */}\n              <TipsModal\n                isOpen={this.state.tipsModal.isOpen}\n                data={this.state.tipsModal.data}\n                toggle={() => this._onToggleTipsModal()}\n              ></TipsModal>\n              {/* Modal for \"PPV\" */}\n              <PpvListModal\n                isOpen={this.state.ppvModal.isOpen}\n                data={this.state.ppvModal.data}\n                toggle={() => this._onTogglePPVModal()}\n              ></PpvListModal>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Shoutout;\n"]},"metadata":{},"sourceType":"module"}