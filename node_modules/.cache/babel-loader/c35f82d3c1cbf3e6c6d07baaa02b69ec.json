{"ast":null,"code":"// Deprecated.\n// Use `libphonenumber-js/min` or `libphonenumber-js/max` or `libphonenumber-js/core` instead.\n// Importing from `.json.js` a workaround for a bug in web browsers' \"native\"\n// ES6 importing system which is uncapable of importing \"*.json\" files.\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\nimport metadata from './metadata.min.json.js';\nimport parsePhoneNumberCustom from './es6/parsePhoneNumber';\nimport parsePhoneNumberFromStringCustom from './es6/parsePhoneNumberFromString';\nimport parseNumberCustom from './es6/parse';\nimport formatNumberCustom from './es6/format';\nimport getNumberTypeCustom from './es6/getNumberType';\nimport getExampleNumberCustom from './es6/getExampleNumber';\nimport isPossibleNumberCustom from './es6/isPossibleNumber';\nimport isValidNumberCustom from './es6/validate';\nimport isValidNumberForRegionCustom from './es6/isValidNumberForRegion'; // Deprecated\n\nimport findPhoneNumbersCustom, { searchPhoneNumbers as searchPhoneNumbersCustom } from './es6/findPhoneNumbers';\nimport { PhoneNumberSearch as PhoneNumberSearchCustom } from './es6/findPhoneNumbers_';\nimport findNumbersCustom from './es6/findNumbers';\nimport searchNumbersCustom from './es6/searchNumbers';\nimport findPhoneNumbersInTextCustom from './es6/findPhoneNumbersInText';\nimport searchPhoneNumbersInTextCustom from './es6/searchPhoneNumbersInText';\nimport PhoneNumberMatcherCustom from './es6/PhoneNumberMatcher';\nimport AsYouTypeCustom from './es6/AsYouType';\nimport getCountryCallingCodeCustom from './es6/getCountryCallingCode';\nimport getCountriesCustom from './es6/getCountries';\nexport { default as Metadata } from './es6/metadata';\nimport { getExtPrefix as getExtPrefixCustom, isSupportedCountry as isSupportedCountryCustom } from './es6/metadata';\nimport { parseRFC3966 as parseRFC3966Custom, formatRFC3966 as formatRFC3966Custom } from './es6/RFC3966';\nimport formatIncompletePhoneNumberCustom from './es6/formatIncompletePhoneNumber';\nexport { default as parseIncompletePhoneNumber, parsePhoneNumberCharacter } from './es6/parseIncompletePhoneNumber'; // Deprecated: remove DIGITS export in 2.0.0.\n// (it was used in `react-phone-number-input`)\n\nexport { DIGITS, default as parseDigits } from './es6/parseDigits';\nexport { default as ParseError } from './es6/ParseError';\nexport function parsePhoneNumber() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return parsePhoneNumberCustom.apply(this, parameters);\n}\nexport function parsePhoneNumberFromString() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return parsePhoneNumberFromStringCustom.apply(this, parameters);\n}\nexport function parseNumber() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return parseNumberCustom.apply(this, parameters);\n} // Deprecated: remove `parse()` export in 2.0.0.\n// (renamed to `parseNumber()`)\n\nexport function parse() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return parseNumberCustom.apply(this, parameters);\n}\nexport function formatNumber() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return formatNumberCustom.apply(this, parameters);\n} // Deprecated: remove `format()` export in 2.0.0.\n// (renamed to `formatNumber()`)\n\nexport function format() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return formatNumberCustom.apply(this, parameters);\n}\nexport function getNumberType() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return getNumberTypeCustom.apply(this, parameters);\n}\nexport function getExampleNumber() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return getExampleNumberCustom.apply(this, parameters);\n}\nexport function isPossibleNumber() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return isPossibleNumberCustom.apply(this, parameters);\n}\nexport function isValidNumber() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return isValidNumberCustom.apply(this, parameters);\n}\nexport function isValidNumberForRegion() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return isValidNumberForRegionCustom.apply(this, parameters);\n} // Deprecated.\n\nexport function findPhoneNumbers() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return findPhoneNumbersCustom.apply(this, parameters);\n} // Deprecated.\n\nexport function searchPhoneNumbers() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return searchPhoneNumbersCustom.apply(this, parameters);\n} // Deprecated.\n\nexport function PhoneNumberSearch(text, options) {\n  PhoneNumberSearchCustom.call(this, text, options, metadata);\n} // Deprecated.\n\nPhoneNumberSearch.prototype = Object.create(PhoneNumberSearchCustom.prototype, {});\nPhoneNumberSearch.prototype.constructor = PhoneNumberSearch;\nexport function findNumbers() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return findNumbersCustom.apply(this, parameters);\n}\nexport function searchNumbers() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return searchNumbersCustom.apply(this, parameters);\n}\nexport function findPhoneNumbersInText() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return findPhoneNumbersInTextCustom.apply(this, parameters);\n}\nexport function searchPhoneNumbersInText() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return searchPhoneNumbersInTextCustom.apply(this, parameters);\n}\nexport function PhoneNumberMatcher(text, options) {\n  PhoneNumberMatcherCustom.call(this, text, options, metadata);\n}\nPhoneNumberMatcher.prototype = Object.create(PhoneNumberMatcherCustom.prototype, {});\nPhoneNumberMatcher.prototype.constructor = PhoneNumberMatcher;\nexport function AsYouType(country) {\n  AsYouTypeCustom.call(this, country, metadata);\n}\nAsYouType.prototype = Object.create(AsYouTypeCustom.prototype, {});\nAsYouType.prototype.constructor = AsYouType;\nexport function isSupportedCountry() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return isSupportedCountryCustom.apply(this, parameters);\n}\nexport function getExtPrefix() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return getExtPrefixCustom.apply(this, parameters);\n}\nexport function parseRFC3966() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return parseRFC3966Custom.apply(this, parameters);\n}\nexport function formatRFC3966() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return formatRFC3966Custom.apply(this, parameters);\n}\nexport function formatIncompletePhoneNumber() {\n  var parameters = Array.prototype.slice.call(arguments);\n  parameters.push(metadata);\n  return formatIncompletePhoneNumberCustom.apply(this, parameters);\n} // Deprecated: remove this in 2.0.0 and make `custom.js` in ES6\n// (the old `custom.js` becomes `custom.commonjs.js`).\n\nexport { default as parseCustom } from './es6/parse';\nexport { default as formatCustom } from './es6/format';\nexport { default as isValidNumberCustom } from './es6/validate';\nexport { default as findPhoneNumbersCustom } from './es6/findPhoneNumbers';\nexport { searchPhoneNumbers as searchPhoneNumbersCustom } from './es6/findPhoneNumbers';\nexport { PhoneNumberSearch as PhoneNumberSearchCustom } from './es6/findPhoneNumbers_';\nexport { default as getNumberTypeCustom } from './es6/getNumberType';\nexport { default as getCountryCallingCodeCustom } from './es6/getCountryCallingCode';\nexport { default as AsYouTypeCustom // Deprecated: `DIGIT_PLACEHOLDER` was used by `react-phone-number-input`.\n// Seems to be not used anymore.\n, DIGIT_PLACEHOLDER } from './es6/AsYouType';\nexport function getCountries() {\n  return getCountriesCustom(metadata);\n}\nexport function getCountryCallingCode(country) {\n  return getCountryCallingCodeCustom(country, metadata);\n} // `getPhoneCode` name is deprecated, use `getCountryCallingCode` instead.\n\nexport function getPhoneCode(country) {\n  return getCountryCallingCode(country);\n} // `getPhoneCodeCustom` name is deprecated, use `getCountryCallingCodeCustom` instead.\n\nexport function getPhoneCodeCustom(country, metadata) {\n  return getCountryCallingCodeCustom(country, metadata);\n}","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/libphonenumber-js/index.es6.js"],"names":["metadata","parsePhoneNumberCustom","parsePhoneNumberFromStringCustom","parseNumberCustom","formatNumberCustom","getNumberTypeCustom","getExampleNumberCustom","isPossibleNumberCustom","isValidNumberCustom","isValidNumberForRegionCustom","findPhoneNumbersCustom","searchPhoneNumbers","searchPhoneNumbersCustom","PhoneNumberSearch","PhoneNumberSearchCustom","findNumbersCustom","searchNumbersCustom","findPhoneNumbersInTextCustom","searchPhoneNumbersInTextCustom","PhoneNumberMatcherCustom","AsYouTypeCustom","getCountryCallingCodeCustom","getCountriesCustom","default","Metadata","getExtPrefix","getExtPrefixCustom","isSupportedCountry","isSupportedCountryCustom","parseRFC3966","parseRFC3966Custom","formatRFC3966","formatRFC3966Custom","formatIncompletePhoneNumberCustom","parseIncompletePhoneNumber","parsePhoneNumberCharacter","DIGITS","parseDigits","ParseError","parsePhoneNumber","parameters","Array","prototype","slice","call","arguments","push","apply","parsePhoneNumberFromString","parseNumber","parse","formatNumber","format","getNumberType","getExampleNumber","isPossibleNumber","isValidNumber","isValidNumberForRegion","findPhoneNumbers","text","options","Object","create","constructor","findNumbers","searchNumbers","findPhoneNumbersInText","searchPhoneNumbersInText","PhoneNumberMatcher","AsYouType","country","formatIncompletePhoneNumber","parseCustom","formatCustom","DIGIT_PLACEHOLDER","getCountries","getCountryCallingCode","getPhoneCode","getPhoneCodeCustom"],"mappings":"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","sourcesContent":["// Deprecated.\r\n// Use `libphonenumber-js/min` or `libphonenumber-js/max` or `libphonenumber-js/core` instead.\r\n\r\n// Importing from `.json.js` a workaround for a bug in web browsers' \"native\"\r\n// ES6 importing system which is uncapable of importing \"*.json\" files.\r\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\r\nimport metadata from './metadata.min.json.js'\r\n\r\nimport parsePhoneNumberCustom from './es6/parsePhoneNumber'\r\nimport parsePhoneNumberFromStringCustom from './es6/parsePhoneNumberFromString'\r\n\r\nimport parseNumberCustom from './es6/parse'\r\nimport formatNumberCustom from './es6/format'\r\nimport getNumberTypeCustom from './es6/getNumberType'\r\nimport getExampleNumberCustom from './es6/getExampleNumber'\r\nimport isPossibleNumberCustom from './es6/isPossibleNumber'\r\nimport isValidNumberCustom from './es6/validate'\r\nimport isValidNumberForRegionCustom from './es6/isValidNumberForRegion'\r\n\r\n// Deprecated\r\nimport findPhoneNumbersCustom, { searchPhoneNumbers as searchPhoneNumbersCustom } from './es6/findPhoneNumbers'\r\nimport { PhoneNumberSearch as PhoneNumberSearchCustom } from './es6/findPhoneNumbers_'\r\n\r\nimport findNumbersCustom from './es6/findNumbers'\r\nimport searchNumbersCustom from './es6/searchNumbers'\r\nimport findPhoneNumbersInTextCustom from './es6/findPhoneNumbersInText'\r\nimport searchPhoneNumbersInTextCustom from './es6/searchPhoneNumbersInText'\r\nimport PhoneNumberMatcherCustom from './es6/PhoneNumberMatcher'\r\n\r\nimport AsYouTypeCustom from './es6/AsYouType'\r\n\r\nimport getCountryCallingCodeCustom from './es6/getCountryCallingCode'\r\nimport getCountriesCustom from './es6/getCountries'\r\nexport { default as Metadata } from './es6/metadata'\r\nimport { getExtPrefix as getExtPrefixCustom, isSupportedCountry as isSupportedCountryCustom } from './es6/metadata'\r\nimport { parseRFC3966 as parseRFC3966Custom, formatRFC3966 as formatRFC3966Custom } from './es6/RFC3966'\r\nimport formatIncompletePhoneNumberCustom from './es6/formatIncompletePhoneNumber'\r\nexport { default as parseIncompletePhoneNumber, parsePhoneNumberCharacter } from './es6/parseIncompletePhoneNumber'\r\n// Deprecated: remove DIGITS export in 2.0.0.\r\n// (it was used in `react-phone-number-input`)\r\nexport { DIGITS, default as parseDigits } from './es6/parseDigits'\r\nexport { default as ParseError } from './es6/ParseError'\r\n\r\nexport function parsePhoneNumber()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn parsePhoneNumberCustom.apply(this, parameters)\r\n}\r\n\r\nexport function parsePhoneNumberFromString()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn parsePhoneNumberFromStringCustom.apply(this, parameters)\r\n}\r\n\r\nexport function parseNumber()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn parseNumberCustom.apply(this, parameters)\r\n}\r\n\r\n// Deprecated: remove `parse()` export in 2.0.0.\r\n// (renamed to `parseNumber()`)\r\nexport function parse()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn parseNumberCustom.apply(this, parameters)\r\n}\r\n\r\nexport function formatNumber()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn formatNumberCustom.apply(this, parameters)\r\n}\r\n\r\n// Deprecated: remove `format()` export in 2.0.0.\r\n// (renamed to `formatNumber()`)\r\nexport function format()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn formatNumberCustom.apply(this, parameters)\r\n}\r\n\r\nexport function getNumberType()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn getNumberTypeCustom.apply(this, parameters)\r\n}\r\n\r\nexport function getExampleNumber()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn getExampleNumberCustom.apply(this, parameters)\r\n}\r\n\r\nexport function isPossibleNumber()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn isPossibleNumberCustom.apply(this, parameters)\r\n}\r\n\r\nexport function isValidNumber()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn isValidNumberCustom.apply(this, parameters)\r\n}\r\n\r\nexport function isValidNumberForRegion()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn isValidNumberForRegionCustom.apply(this, parameters)\r\n}\r\n\r\n// Deprecated.\r\nexport function findPhoneNumbers()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn findPhoneNumbersCustom.apply(this, parameters)\r\n}\r\n\r\n// Deprecated.\r\nexport function searchPhoneNumbers()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn searchPhoneNumbersCustom.apply(this, parameters)\r\n}\r\n\r\n// Deprecated.\r\nexport function PhoneNumberSearch(text, options)\r\n{\r\n\tPhoneNumberSearchCustom.call(this, text, options, metadata)\r\n}\r\n\r\n// Deprecated.\r\nPhoneNumberSearch.prototype = Object.create(PhoneNumberSearchCustom.prototype, {})\r\nPhoneNumberSearch.prototype.constructor = PhoneNumberSearch\r\n\r\nexport function findNumbers()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn findNumbersCustom.apply(this, parameters)\r\n}\r\n\r\nexport function searchNumbers()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn searchNumbersCustom.apply(this, parameters)\r\n}\r\n\r\nexport function findPhoneNumbersInText()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn findPhoneNumbersInTextCustom.apply(this, parameters)\r\n}\r\n\r\nexport function searchPhoneNumbersInText()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn searchPhoneNumbersInTextCustom.apply(this, parameters)\r\n}\r\n\r\nexport function PhoneNumberMatcher(text, options)\r\n{\r\n\tPhoneNumberMatcherCustom.call(this, text, options, metadata)\r\n}\r\n\r\nPhoneNumberMatcher.prototype = Object.create(PhoneNumberMatcherCustom.prototype, {})\r\nPhoneNumberMatcher.prototype.constructor = PhoneNumberMatcher\r\n\r\nexport function AsYouType(country)\r\n{\r\n\tAsYouTypeCustom.call(this, country, metadata)\r\n}\r\n\r\nAsYouType.prototype = Object.create(AsYouTypeCustom.prototype, {})\r\nAsYouType.prototype.constructor = AsYouType\r\n\r\nexport function isSupportedCountry()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn isSupportedCountryCustom.apply(this, parameters)\r\n}\r\n\r\nexport function getExtPrefix()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn getExtPrefixCustom.apply(this, parameters)\r\n}\r\n\r\nexport function parseRFC3966()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn parseRFC3966Custom.apply(this, parameters)\r\n}\r\n\r\nexport function formatRFC3966()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn formatRFC3966Custom.apply(this, parameters)\r\n}\r\n\r\nexport function formatIncompletePhoneNumber()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn formatIncompletePhoneNumberCustom.apply(this, parameters)\r\n}\r\n\r\n// Deprecated: remove this in 2.0.0 and make `custom.js` in ES6\r\n// (the old `custom.js` becomes `custom.commonjs.js`).\r\nexport { default as parseCustom } from './es6/parse'\r\nexport { default as formatCustom } from './es6/format'\r\nexport { default as isValidNumberCustom } from './es6/validate'\r\nexport { default as findPhoneNumbersCustom } from './es6/findPhoneNumbers'\r\nexport { searchPhoneNumbers as searchPhoneNumbersCustom } from './es6/findPhoneNumbers'\r\nexport { PhoneNumberSearch as PhoneNumberSearchCustom } from './es6/findPhoneNumbers_'\r\nexport { default as getNumberTypeCustom } from './es6/getNumberType'\r\nexport { default as getCountryCallingCodeCustom } from './es6/getCountryCallingCode'\r\n\r\nexport\r\n{\r\n\tdefault as AsYouTypeCustom,\r\n\t// Deprecated: `DIGIT_PLACEHOLDER` was used by `react-phone-number-input`.\r\n\t// Seems to be not used anymore.\r\n\tDIGIT_PLACEHOLDER\r\n}\r\nfrom './es6/AsYouType'\r\n\r\nexport function getCountries()\r\n{\r\n\treturn getCountriesCustom(metadata)\r\n}\r\n\r\nexport function getCountryCallingCode(country)\r\n{\r\n\treturn getCountryCallingCodeCustom(country, metadata)\r\n}\r\n\r\n// `getPhoneCode` name is deprecated, use `getCountryCallingCode` instead.\r\nexport function getPhoneCode(country)\r\n{\r\n\treturn getCountryCallingCode(country)\r\n}\r\n\r\n// `getPhoneCodeCustom` name is deprecated, use `getCountryCallingCodeCustom` instead.\r\nexport function getPhoneCodeCustom(country, metadata)\r\n{\r\n\treturn getCountryCallingCodeCustom(country, metadata)\r\n}"]},"metadata":{},"sourceType":"module"}