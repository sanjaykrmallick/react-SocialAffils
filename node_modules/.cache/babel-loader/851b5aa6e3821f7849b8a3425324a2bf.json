{"ast":null,"code":"import _classCallCheck from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/pages/seller.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col // Table,\n, Button, Input // FormGroup,\n// Label,\n// Modal,\n// ModalBody,\n// ModalFooter,\n// ModalHeader\n} from \"reactstrap\";\nimport CustomTable from \"../components/custom-table\";\nimport { getAllSubscribers, changeUserStatus, sendMessage, getAllVaultFolder, getAllSeller } from \"../http/http-calls\";\nimport config from \"../config\";\nimport { ToastsStore } from \"react-toasts\";\nimport AddEditSellerModal from \"../components/add-seller-modal\";\nimport TipsModal from \"../components/tips-list-modal\";\nimport PpvListModal from \"../components/ppv-list-modal\"; // import CopyclipBoard from \"../../components/copy-clipboard\";\n\nimport CopyclipBoard from \"../components/copy-clipboard\";\nimport { format } from \"date-fns\";\nimport TextEditor from \"../components/text-editor\";\nimport { showToast, deepClone } from \"../helper-methods\";\nimport CustomDataTable from \"../components/custom-data-table\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\n\nvar Seller = /*#__PURE__*/function (_Component) {\n  _inherits(Seller, _Component);\n\n  var _super = _createSuper(Seller);\n\n  function Seller() {\n    var _this;\n\n    _classCallCheck(this, Seller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      modals: [false, false, false],\n      subscriptionModal: {\n        isOpen: false,\n        data: null\n      },\n      tipsModal: {\n        isOpen: false,\n        data: null\n      },\n      ppvModal: {\n        isOpen: false,\n        data: null\n      },\n      addSellerModal: {\n        isOpen: false,\n        data: null,\n        type: \"add\"\n      },\n      subscriberList: [{\n        sellerStore: \"abcde\",\n        name: \"xyz\",\n        email: \"qwerty@gmail.com\",\n        phone: \"9090909090\",\n        products: \"20\",\n        sales: \"$2190\",\n        status: \"active\"\n      }],\n      subscriberListBackup: [],\n      headerKeys: [{\n        id: \"id\",\n        label: \"id\"\n      }, {\n        id: \"sellerStore\",\n        label: \"Seller Store\"\n      }, {\n        id: \"name\",\n        label: \"Name\"\n      }, {\n        id: \"email\",\n        label: \"Email\"\n      }, {\n        id: \"phone\",\n        label: \"Phone\"\n      }, {\n        id: \"products\",\n        label: \"Products\"\n      }, {\n        id: \"sales\",\n        label: \"Sales\"\n      }, {\n        id: \"status\",\n        label: \"Status\"\n      } // { id: \"creator\", label: \"Creator\" },\n      // { id: \"price\", label: \"Price\" },\n      // { id: \"items\", label: \"Items\" },\n      // { id: \"flag\", label: \"Flag\" },\n      // { id: \"joinedAt\", label: \"Joined\" },\n      // { id: \"subscriptions\", label: \"Subscriptions\" },\n      // { id: \"tipAmount\", label: \"Tips\" },\n      // { id: \"spent\", label: \"Lifetime Spend\" },\n      // { id: \"status\", label: \"Status\" },\n      // { id: \"action\", label: \"Action\", noSort: true }\n      ],\n      // subscriptionCounts: config.subscriptionCounts,\n      priceCounts: config.priceCounts,\n      salesCounts: config.salesCounts,\n      filters: {\n        subscriptions: \"\",\n        creator: \"\",\n        status: \"\",\n        search: \"\",\n        sales: \"\",\n        price: \"\"\n      },\n      loading: {\n        loadingData: false,\n        changeStatusLoading: false,\n        sendingMessage: false\n      },\n      contact: {\n        via: \"email\",\n        message: \"\"\n      },\n      selectedSubscribers: [],\n      totalCount: 0,\n      subscriberFieldsKeyMap: {\n        name: \"name\",\n        email: \"email\",\n        phone: \"phone\",\n        subscriptions: \"spent\",\n        joinedAt: \"createdAt\",\n        tipAmount: \"tips\",\n        spent: \"spent\",\n        status: \"isActive\"\n      },\n      tableConfig: {\n        pageNumber: 1,\n        pageSize: 10,\n        sort: {\n          sortBy: \"createdAt\",\n          sortOrder: \"desc\"\n        },\n        filters: {}\n      },\n      sellerList: []\n    };\n\n    _this._formatDate = function (date) {\n      // console.log(\"TCL: Subscribers -> _formatDate -> date\", date);\n      return format(new Date(date), \"MMM d, yyyy\");\n    };\n\n    _this._onToggleSellerModal = function (type, data) {\n      console.log(type, data);\n\n      var _JSON$parse = JSON.parse(JSON.stringify(_this.state)),\n          addSellerModal = _JSON$parse.addSellerModal;\n\n      addSellerModal.isOpen = !addSellerModal.isOpen;\n      addSellerModal.type = type;\n      addSellerModal.data = data;\n\n      _this.setState({\n        addSellerModal: addSellerModal\n      }, function () {\n        console.log(_this.state);\n      });\n    };\n\n    _this._onToggleTipsModal = function (data) {\n      var _JSON$parse2 = JSON.parse(JSON.stringify(_this.state)),\n          tipsModal = _JSON$parse2.tipsModal;\n\n      tipsModal.isOpen = !tipsModal.isOpen;\n      tipsModal.data = data;\n\n      _this.setState({\n        tipsModal: tipsModal\n      }, function () {\n        console.log(_this.state);\n      });\n    };\n\n    _this._onTogglePPVModal = function (data) {\n      var _JSON$parse3 = JSON.parse(JSON.stringify(_this.state)),\n          ppvModal = _JSON$parse3.ppvModal;\n\n      ppvModal.isOpen = !ppvModal.isOpen;\n      ppvModal.data = data;\n\n      _this.setState({\n        ppvModal: ppvModal\n      }, function () {\n        console.log(_this.state);\n      });\n    };\n\n    _this._manageLoading = function (key, value) {\n      var _this$state$loading = _this.state.loading,\n          loadingData = _this$state$loading.loadingData,\n          changeStatusLoading = _this$state$loading.changeStatusLoading,\n          sendingMessage = _this$state$loading.sendingMessage;\n\n      if (key === \"data\") {\n        loadingData = value;\n      } else if (key === \"change-status\") {\n        changeStatusLoading = value;\n      } else if (key === \"send-message\") {\n        sendingMessage = value;\n      }\n\n      _this.setState({\n        loading: {\n          loadingData: loadingData,\n          changeStatusLoading: changeStatusLoading,\n          sendingMessage: sendingMessage\n        }\n      });\n    };\n\n    _this._onStatusUpdate = function (data) {\n      // let { subscriberList } = this.state;\n      var sellerList = _this.state.sellerList;\n      var creatorData = sellerList.find(function (each) {\n        return each.id === data.id;\n      });\n      creatorData.status = creatorData.status === \"Active\" ? \"Inactive\" : \"Active\";\n\n      _this.setState({\n        sellerList: sellerList,\n        sellerListBackup: sellerList\n      });\n\n      console.log(sellerList);\n\n      _this._manageLoading(\"change-status\", true);\n\n      changeUserStatus(data.id).then(function (response) {\n        console.log(response);\n\n        _this._manageLoading(\"change-status\", false);\n\n        ToastsStore.success(\"Status changed Successfully!\", 3000);\n      }, function (error) {\n        console.log(error);\n\n        _this._manageLoading(\"change-status\", false); // ToastsStore.error(error.reason, 3000);\n\n\n        showToast(error.reason && error.reason.length ? error.reason : \"Server error. Try again after sometime.\", \"error\");\n      });\n    };\n\n    _this._dataFormat = function (cell, row, header) {\n      if (header === \"vaultfolder\") {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: \"/vault-view/\".concat(row.id),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex justify-content-start align-items-center\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"personImgWrap\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }\n        }, row.vaultimage ? /*#__PURE__*/React.createElement(\"img\", {\n          className: \"Image\",\n          src: row.vaultimage,\n          alt: \"Profile Thumbnail\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }\n        }) : /*#__PURE__*/React.createElement(\"img\", {\n          className: \"Image\",\n          src: row.vaultfolder,\n          alt: \"Thumbnail\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }\n        })), row.vaultfolder));\n      } else if (header === \"sellerStore\") {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          color: \"ghost-primary\",\n          onClick: function onClick() {\n            return _this._onToggleSellerModal(\"edit\", row);\n          },\n          style: {\n            cursor: \"pointer\"\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 9\n          }\n        }, row.sellerStore);\n      } else if (header === \"-phone\") {\n        return row.phone !== \"-\" ? /*#__PURE__*/React.createElement(CopyclipBoard, {\n          copiedValue: row.phone // copiedValue={parsePhoneNumberFromString(\n          //   row.phone\n          // ).formatInternational()}\n          // border=\"none\"\n          ,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 9\n          }\n        }) : \"-\";\n      } else if (header === \"published\") {\n        return cell ? _this._formatDate(cell) : \"-\";\n      } //  else if (header === \"sales\") {\n      //   return row.sales > 0 ? (\n      //     <span onClick={() => this._onToggleVaultModal(row.salesList)}>\n      //       {row.sales}\n      //     </span>\n      //   ) : (\n      //     0\n      //   );\n      // }\n      else if (header === \"status\") {\n          return /*#__PURE__*/React.createElement(Input, {\n            type: \"select\",\n            value: cell // onChange={() => this._onStatusUpdate(row)}\n            // disabled={this.state.loading.changeStatusLoading}\n            ,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"option\", {\n            value: \"Active\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 11\n            }\n          }, \"Active\"), /*#__PURE__*/React.createElement(\"option\", {\n            value: \"Inactive\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 11\n            }\n          }, \"Inactive\"));\n        } else if (header === \"action\") {\n          return /*#__PURE__*/React.createElement(Link, {\n            to: \"/subscriber-view/\".concat(row.id),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            color: \"ghost-primary\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 11\n            }\n          }, \"View\"));\n        } else {\n          return cell;\n        }\n    };\n\n    _this._filterOnChange = function (_ref) {\n      var currentTarget = _ref.currentTarget;\n      var filters = _this.state.filters;\n      filters[currentTarget.name] = currentTarget.value;\n\n      _this.setState({\n        filters: filters\n      });\n\n      if (currentTarget.name !== \"search\") {\n        // this._filterSubscriberList();\n        _this._applyFilterChanges();\n      }\n    };\n\n    _this._filterSubscriberList = function () {\n      var filterConditions = []; // console.log(this.state);\n\n      var _this$state = _this.state,\n          filters = _this$state.filters,\n          subscriberListBackup = _this$state.subscriberListBackup,\n          subscriberList = _this$state.subscriberList;\n      Object.keys(filters).forEach(function (key) {\n        if (filters[key]) {\n          filterConditions.push(key);\n        }\n      });\n      console.log(filterConditions);\n      subscriberList = subscriberListBackup;\n\n      if (filterConditions.length) {\n        if (filters.subscriptions) {\n          console.log(filters.subscriptions);\n          var range = _this.state.subscriptionCounts[filters.subscriptions].value;\n          console.log(range);\n          subscriberList = subscriberList.filter(function (each) {\n            // console.log(\n            //   each.subscriptions,\n            //   each.subscriptions >= range.min,\n            //   each.subscriptions <= range.max\n            // );\n            if (range.min && !range.max) {\n              return each.subscriptions.length > range.min;\n            } else {\n              return each.subscriptions.length >= range.min && each.subscriptions.length <= range.max;\n            }\n          });\n        }\n\n        if (filters.status) {\n          subscriberList = subscriberList.filter(function (each) {\n            return each.status.toLowerCase() === filters.status.toLowerCase();\n          });\n        }\n\n        if (filters.search.trim().length) {\n          subscriberList = subscriberList.filter(function (each) {\n            return each.name.toLowerCase().includes(filters.search.toLowerCase()) || each.email.toLowerCase().includes(filters.search.toLowerCase()) || each.phone.toLowerCase().includes(filters.search.toLowerCase());\n          });\n        }\n\n        _this.setState({\n          subscriberList: subscriberList\n        });\n      } else {\n        _this.setState({\n          subscriberList: subscriberListBackup\n        });\n      }\n    };\n\n    _this._setSelectedRows = function (data) {\n      console.log(data);\n      var selectedSubscribers = _this.state.selectedSubscribers;\n      selectedSubscribers = data;\n\n      _this.setState({\n        selectedSubscribers: selectedSubscribers\n      });\n    };\n\n    _this._contactOnChange = function (_ref2) {\n      var currentTarget = _ref2.currentTarget;\n      var contact = _this.state.contact;\n      contact[currentTarget.name] = currentTarget.value;\n\n      _this.setState({\n        contact: contact\n      });\n    };\n\n    _this._setMessageContent = function (value, key) {\n      var contact = _this.state.contact;\n      contact[key] = value;\n\n      _this.setState({\n        contact: contact\n      });\n    };\n\n    _this._extractContent = function (s) {\n      var span = document.createElement(\"span\");\n      span.innerHTML = s;\n      return span.textContent || span.innerText;\n    };\n\n    _this._sendMessage = function () {\n      var _this$state2 = _this.state,\n          contact = _this$state2.contact,\n          selectedSubscribers = _this$state2.selectedSubscribers;\n      var data = {\n        idlist: selectedSubscribers,\n        text: contact.via === \"email\" ? contact.message : _this._extractContent(contact.message)\n      };\n\n      if (!data.idlist.length) {\n        ToastsStore.warning(\"Please select atleast one creator\", 3000);\n        return;\n      }\n\n      if (!data.text.trim().length) {\n        ToastsStore.warning(\"Please write some message\", 3000);\n        return;\n      }\n\n      console.log(data);\n\n      _this._manageLoading(\"send-message\", true);\n\n      sendMessage(contact.via, data).then(function (response) {\n        console.log(response);\n\n        _this._setMessageContent(\"\", \"message\");\n\n        _this._manageLoading(\"send-message\", false);\n\n        ToastsStore.success(\"Message sent Successfully!\", 3000);\n      }, function (error) {\n        console.log(error);\n\n        _this._manageLoading(\"send-message\", false); // ToastsStore.error(error.reason, 3000);\n\n\n        showToast(error.reason && error.reason.length ? error.reason : \"Server error. Try again after sometime.\", \"error\");\n      });\n    };\n\n    _this._paginate = function (pageNumber, pageSize) {\n      console.log(\"pageNumber, pageSize :\", pageNumber, pageSize);\n      var tableConfig = _this.state.tableConfig;\n      tableConfig.pageNumber = pageNumber;\n      tableConfig.pageSize = pageSize;\n      tableConfig.loading = true;\n      setTimeout(function () {\n        _this.setState({\n          tableConfig: tableConfig\n        }, function () {\n          _this._getAllSeller(_this.state.tableConfig);\n        });\n      }, 100);\n    };\n\n    _this._onSortChange = function (sortName, sortOrder) {\n      var _deepClone = deepClone(_this.state),\n          tableConfig = _deepClone.tableConfig;\n\n      tableConfig.sort.sortBy = _this.state.subscriberFieldsKeyMap[sortName];\n      tableConfig.sort.sortOrder = sortOrder;\n      tableConfig.loading = true;\n\n      _this.setState({\n        tableConfig: tableConfig\n      }, function () {\n        _this._getAllSeller(tableConfig);\n      });\n\n      console.log(\"sortName, sortOrder :\", sortName, sortOrder);\n    };\n\n    _this._applyFilterChanges = function () {\n      var _deepClone2 = deepClone(_this.state),\n          filters = _deepClone2.filters,\n          tableConfig = _deepClone2.tableConfig;\n\n      console.log(\"filters :\", filters);\n      var data = {};\n\n      if (filters.sales.length) {\n        data = {\n          salesUpper: _this.state.salesCounts[filters.sales].value.min,\n          salesLower: _this.state.salesCounts[filters.sales].value.max\n        };\n      }\n\n      if (filters.creator.length) {\n        data = {\n          creatorId: _this.state.filters.creator\n        };\n      }\n\n      if (filters.price.length) {\n        data = {\n          priceLower: _this.state.priceCounts[filters.price].value.min,\n          priceUpper: _this.state.priceCounts[filters.price].value.max\n        };\n      }\n\n      if (filters.status.length) {\n        data.isActive = filters.status === \"active\" ? true : false;\n      }\n\n      console.log(\"data :\", data);\n      tableConfig.filters = data;\n\n      if (filters.search.length) {\n        tableConfig.search = filters.search;\n      } else {\n        tableConfig.search = \"\";\n      }\n\n      tableConfig.loading = true;\n      console.log(tableConfig);\n\n      _this.setState({\n        tableConfig: tableConfig\n      }, function () {\n        _this._getAllSeller(tableConfig);\n      });\n    };\n\n    _this._getAllSeller = function () {\n      _this._manageLoading(\"data\", true);\n\n      getAllSeller().then(function (res) {\n        console.log(\"api res: \", res);\n        var sellerList = res.sellers.map(function (e) {\n          return {\n            id: e._id,\n            sellerStore: e.storeName,\n            name: \"\".concat(e.name.first, \" \").concat(e.name.last),\n            phone: e.phone && e.phone !== \"-\" ? e.phone : \"-\",\n            email: e.email,\n            status: e.isActive ? \"Active\" : \"Inactive\",\n            products: e.productCount,\n            sales: e.totalEarned\n          };\n        });\n\n        _this.setState({\n          sellerList: sellerList,\n          sellerListBackup: sellerList\n        });\n\n        _this._manageLoading(\"data\", false);\n      }).catch(function (err) {\n        console.log(\"api error: \", err);\n        showToast(err.reason && err.reason.length ? err.reason : \"Server error. Try again after sometime.\", \"error\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Seller, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this._getAllVaultFOlder(this.state.tableConfig);\n      this._getAllSeller(); // const data={\n      //   \"filters\": {\n      //     \"priceLower\": 1,\n      //     \"priceUpper\": 5\n      //   },\n      //   \"search\": \"folder 1\",\n      //   \"sort\": {\n      //     \"sortBy\": \"_owner\",\n      //     \"sortOrder\": \"dsc\"\n      //   }\n      // }\n      // this._getAllSubscribers(data)\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          filters = _this$state3.filters,\n          loading = _this$state3.loading,\n          subscriptionCounts = _this$state3.subscriptionCounts,\n          salesCounts = _this$state3.salesCounts,\n          priceCounts = _this$state3.priceCounts,\n          contact = _this$state3.contact,\n          totalCount = _this$state3.totalCount,\n          tableConfig = _this$state3.tableConfig,\n          subscriberListBackup = _this$state3.subscriberListBackup,\n          sellerList = _this$state3.sellerList; //  console.log(\"this.state\",this.state)\n\n      var creator = subscriberListBackup.map(function (i) {\n        return {\n          creator: i.creator,\n          creatorId: i.creatorId\n        };\n      }).filter(function (item, pos, arr) {\n        return arr.findIndex(function (i) {\n          return i.creatorId === item.creatorId;\n        }) === pos;\n      });\n      console.log(creator);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app TruFansPgBg animated fadeIn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"PgTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \" justify-content-start align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 19\n        }\n      }, \"Sellers\")), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"BtnPurple\",\n        onClick: function onClick() {\n          return _this2._onToggleSellerModal(\"add\", null);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 17\n        }\n      }, \"New Seller\")), !loading.loadingData && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filterWrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-filter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"sales\",\n        value: filters.sales,\n        onChange: this._filterOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 24\n        }\n      }, \"Sales\"), salesCounts.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: index,\n          value: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 27\n          }\n        }, option.label);\n      })), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"status\",\n        value: filters.status,\n        onChange: this._filterOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 25\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 25\n        }\n      }, \"Active\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"inactive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 25\n        }\n      }, \"Inactive\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"search\",\n        name: \"search\",\n        placeholder: \"Search\",\n        autoComplete: \"off\",\n        className: \"ml-2\",\n        value: this.state.filters.search,\n        onChange: this._filterOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        className: \"ml-2\",\n        onClick: function onClick() {\n          return _this2._applyFilterChanges();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon-magnifier\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 25\n        }\n      })))), \" \", /*#__PURE__*/React.createElement(CustomDataTable, {\n        tableData: sellerList,\n        headerKeys: this.state.headerKeys,\n        dataFormat: this._dataFormat,\n        totalCount: totalCount,\n        rowSelection: true,\n        onPaginate: function onPaginate(pageNumber, pageSize) {\n          return _this2._paginate(pageNumber, pageSize);\n        },\n        onSortChange: function onSortChange(sortName, sortOrder) {\n          return _this2._onSortChange(sortName, sortOrder);\n        },\n        setSelectedRows: function setSelectedRows(data) {\n          return _this2._setSelectedRows(data);\n        },\n        showTableLoading: tableConfig.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 19\n        }\n      })), loading.loadingData && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filterWrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading-section list-loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-spin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 21\n        }\n      }), \" \\xA0 Loading Subscribers..\")), /*#__PURE__*/React.createElement(AddEditSellerModal, {\n        type: this.state.addSellerModal.type,\n        data: this.state.addSellerModal.data,\n        isOpen: this.state.addSellerModal.isOpen,\n        toggle: function toggle() {\n          return _this2._onToggleSellerModal();\n        },\n        reloadAdminList: this._getAllAdminUsers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(TipsModal, {\n        isOpen: this.state.tipsModal.isOpen,\n        data: this.state.tipsModal.data,\n        toggle: function toggle() {\n          return _this2._onToggleTipsModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(PpvListModal, {\n        isOpen: this.state.ppvModal.isOpen,\n        data: this.state.ppvModal.data,\n        toggle: function toggle() {\n          return _this2._onTogglePPVModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return Seller;\n}(Component);\n\nexport default Seller;","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/pages/seller.js"],"names":["React","Component","Link","Container","Row","Col","Button","Input","CustomTable","getAllSubscribers","changeUserStatus","sendMessage","getAllVaultFolder","getAllSeller","config","ToastsStore","AddEditSellerModal","TipsModal","PpvListModal","CopyclipBoard","format","TextEditor","showToast","deepClone","CustomDataTable","parsePhoneNumberFromString","Seller","state","modals","subscriptionModal","isOpen","data","tipsModal","ppvModal","addSellerModal","type","subscriberList","sellerStore","name","email","phone","products","sales","status","subscriberListBackup","headerKeys","id","label","priceCounts","salesCounts","filters","subscriptions","creator","search","price","loading","loadingData","changeStatusLoading","sendingMessage","contact","via","message","selectedSubscribers","totalCount","subscriberFieldsKeyMap","joinedAt","tipAmount","spent","tableConfig","pageNumber","pageSize","sort","sortBy","sortOrder","sellerList","_formatDate","date","Date","_onToggleSellerModal","console","log","JSON","parse","stringify","setState","_onToggleTipsModal","_onTogglePPVModal","_manageLoading","key","value","_onStatusUpdate","creatorData","find","each","sellerListBackup","then","response","success","error","reason","length","_dataFormat","cell","row","header","vaultimage","vaultfolder","cursor","_filterOnChange","currentTarget","_applyFilterChanges","_filterSubscriberList","filterConditions","Object","keys","forEach","push","range","subscriptionCounts","filter","min","max","toLowerCase","trim","includes","_setSelectedRows","_contactOnChange","_setMessageContent","_extractContent","s","span","document","createElement","innerHTML","textContent","innerText","_sendMessage","idlist","text","warning","_paginate","setTimeout","_getAllSeller","_onSortChange","sortName","salesUpper","salesLower","creatorId","priceLower","priceUpper","isActive","res","sellers","map","e","_id","storeName","first","last","productCount","totalEarned","catch","err","i","item","pos","arr","findIndex","option","index","_getAllAdminUsers"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Col,\n  // Table,\n  Button,\n  Input,\n  // FormGroup,\n  // Label,\n  // Modal,\n  // ModalBody,\n  // ModalFooter,\n  // ModalHeader\n} from \"reactstrap\";\nimport CustomTable from \"../components/custom-table\";\nimport {\n  getAllSubscribers,\n  changeUserStatus,\n  sendMessage,\n  getAllVaultFolder,\n  getAllSeller,\n} from \"../http/http-calls\";\nimport config from \"../config\";\nimport { ToastsStore } from \"react-toasts\";\nimport AddEditSellerModal from \"../components/add-seller-modal\";\nimport TipsModal from \"../components/tips-list-modal\";\nimport PpvListModal from \"../components/ppv-list-modal\";\n// import CopyclipBoard from \"../../components/copy-clipboard\";\nimport CopyclipBoard from \"../components/copy-clipboard\";\nimport { format } from \"date-fns\";\nimport TextEditor from \"../components/text-editor\";\nimport { showToast, deepClone } from \"../helper-methods\";\nimport CustomDataTable from \"../components/custom-data-table\";\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\n\nclass Seller extends Component {\n  state = {\n    modals: [false, false, false],\n    subscriptionModal: {\n      isOpen: false,\n      data: null,\n    },\n    tipsModal: {\n      isOpen: false,\n      data: null,\n    },\n    ppvModal: {\n      isOpen: false,\n      data: null,\n    },\n    addSellerModal: {\n      isOpen: false,\n      data: null,\n      type: \"add\",\n    },\n    subscriberList: [\n      {\n        sellerStore: \"abcde\",\n        name: \"xyz\",\n        email: \"qwerty@gmail.com\",\n        phone: \"9090909090\",\n        products: \"20\",\n        sales: \"$2190\",\n        status: \"active\",\n      },\n    ],\n    subscriberListBackup: [],\n    headerKeys: [\n      { id: \"id\", label: \"id\" },\n      { id: \"sellerStore\", label: \"Seller Store\" },\n      { id: \"name\", label: \"Name\" },\n      { id: \"email\", label: \"Email\" },\n      { id: \"phone\", label: \"Phone\" },\n      { id: \"products\", label: \"Products\" },\n      { id: \"sales\", label: \"Sales\" },\n      { id: \"status\", label: \"Status\" },\n      // { id: \"creator\", label: \"Creator\" },\n      // { id: \"price\", label: \"Price\" },\n      // { id: \"items\", label: \"Items\" },\n      // { id: \"flag\", label: \"Flag\" },\n      // { id: \"joinedAt\", label: \"Joined\" },\n      // { id: \"subscriptions\", label: \"Subscriptions\" },\n      // { id: \"tipAmount\", label: \"Tips\" },\n      // { id: \"spent\", label: \"Lifetime Spend\" },\n      // { id: \"status\", label: \"Status\" },\n      // { id: \"action\", label: \"Action\", noSort: true }\n    ],\n    // subscriptionCounts: config.subscriptionCounts,\n    priceCounts: config.priceCounts,\n    salesCounts: config.salesCounts,\n    filters: {\n      subscriptions: \"\",\n      creator: \"\",\n      status: \"\",\n      search: \"\",\n      sales: \"\",\n      price: \"\",\n    },\n    loading: {\n      loadingData: false,\n      changeStatusLoading: false,\n      sendingMessage: false,\n    },\n    contact: {\n      via: \"email\",\n      message: \"\",\n    },\n    selectedSubscribers: [],\n    totalCount: 0,\n    subscriberFieldsKeyMap: {\n      name: \"name\",\n      email: \"email\",\n      phone: \"phone\",\n      subscriptions: \"spent\",\n      joinedAt: \"createdAt\",\n      tipAmount: \"tips\",\n      spent: \"spent\",\n      status: \"isActive\",\n    },\n    tableConfig: {\n      pageNumber: 1,\n      pageSize: 10,\n      sort: {\n        sortBy: \"createdAt\",\n        sortOrder: \"desc\",\n      },\n      filters: {},\n    },\n    sellerList: [],\n  };\n\n  _formatDate = (date) => {\n    // console.log(\"TCL: Subscribers -> _formatDate -> date\", date);\n    return format(new Date(date), \"MMM d, yyyy\");\n  };\n\n  _onToggleSellerModal = (type, data) => {\n    console.log(type, data);\n    let { addSellerModal } = JSON.parse(JSON.stringify(this.state));\n    addSellerModal.isOpen = !addSellerModal.isOpen;\n    addSellerModal.type = type;\n    addSellerModal.data = data;\n    this.setState(\n      {\n        addSellerModal,\n      },\n      () => {\n        console.log(this.state);\n      }\n    );\n  };\n\n  _onToggleTipsModal = (data) => {\n    let { tipsModal } = JSON.parse(JSON.stringify(this.state));\n    tipsModal.isOpen = !tipsModal.isOpen;\n    tipsModal.data = data;\n    this.setState(\n      {\n        tipsModal,\n      },\n      () => {\n        console.log(this.state);\n      }\n    );\n  };\n\n  _onTogglePPVModal = (data) => {\n    let { ppvModal } = JSON.parse(JSON.stringify(this.state));\n    ppvModal.isOpen = !ppvModal.isOpen;\n    ppvModal.data = data;\n    this.setState(\n      {\n        ppvModal,\n      },\n      () => {\n        console.log(this.state);\n      }\n    );\n  };\n\n  _manageLoading = (key, value) => {\n    let {\n      loadingData,\n      changeStatusLoading,\n      sendingMessage,\n    } = this.state.loading;\n    if (key === \"data\") {\n      loadingData = value;\n    } else if (key === \"change-status\") {\n      changeStatusLoading = value;\n    } else if (key === \"send-message\") {\n      sendingMessage = value;\n    }\n    this.setState({\n      loading: { loadingData, changeStatusLoading, sendingMessage },\n    });\n  };\n\n  // _getAllVaultFOlder = (data) => {\n  //   let { subscriberList, tableConfig } = deepClone(this.state);\n  //   if (!subscriberList.length) {\n  //     this._manageLoading(\"data\", true);\n  //   }\n  //   getAllVaultFolder(data).then(\n  //     (response) => {\n  //       console.log(response.folders);\n  //       this._manageLoading(\"data\", false);\n  //       tableConfig.loading = false;\n  //       this.setState({ tableConfig });\n  //       let subscriberListResp = response.folders.map((each) => {\n  //         return {\n  //           vaultfolder: each.name,\n  //           vaultimage: each.preview,\n  //           id: each.id,\n  //           creator: each._owner.name.first,\n  //           creatorId: each._owner._id,\n  //           // flag: each.country ? each.country : null,\n  //           // email: each.email,\n  //           // phone: each.phone || \"-\",\n  //           // profilePicture: each.profilePicture || config.defaultUserPicture,\n  //           published: each.createdAt,\n  //           // subscriptions: each.subscriptions,\n  //           // spent: each.spent,\n  //           status: each.isActive ? \"Active\" : \"Inactive\",\n  //           items: each.items,\n  //           price: each.price,\n  //           sales: each.sales,\n  //           salesList: each.salesList,\n  //         };\n  //       });\n  //       this.setState({\n  //         // subscriberList: subscriberListResp,\n  //         subscriberListBackup: subscriberListResp,\n  //         totalCount: response.count,\n  //       });\n  //     },\n  //     (error) => {\n  //       console.log(error);\n  //       this._manageLoading(\"data\", false);\n  //       tableConfig.loading = false;\n  //       this.setState({ tableConfig });\n  //       // ToastsStore.error(error.reason, 3000);\n  //       showToast(\n  //         error.reason && error.reason.length\n  //           ? error.reason\n  //           : \"Server error. Try again after sometime.\",\n  //         \"error\"\n  //       );\n  //     }\n  //   );\n  // };\n\n  _onStatusUpdate = (data) => {\n    // let { subscriberList } = this.state;\n    let {sellerList}= this.state;\n    let creatorData = sellerList.find((each) => each.id === data.id);\n    creatorData.status =\n      creatorData.status === \"Active\" ? \"Inactive\" : \"Active\";\n    this.setState({\n      sellerList,\n      sellerListBackup: sellerList,\n    });\n    console.log(sellerList);\n    this._manageLoading(\"change-status\", true);\n    changeUserStatus(data.id).then(\n      (response) => {\n        console.log(response);\n        this._manageLoading(\"change-status\", false);\n        ToastsStore.success(\"Status changed Successfully!\", 3000);\n      },\n      (error) => {\n        console.log(error);\n        this._manageLoading(\"change-status\", false);\n        // ToastsStore.error(error.reason, 3000);\n        showToast(\n          error.reason && error.reason.length\n            ? error.reason\n            : \"Server error. Try again after sometime.\",\n          \"error\"\n        );\n      }\n    );\n  };\n\n  _dataFormat = (cell, row, header) => {\n    if (header === \"vaultfolder\") {\n      return (\n        <Link to={`/vault-view/${row.id}`}>\n          <div className='d-flex justify-content-start align-items-center'>\n            <div className='personImgWrap'>\n              {row.vaultimage ? (\n                <img\n                  className='Image'\n                  src={row.vaultimage}\n                  alt='Profile Thumbnail'\n                />\n              ) : (\n                <img className='Image' src={row.vaultfolder} alt='Thumbnail' />\n              )}\n            </div>\n            {row.vaultfolder}\n          </div>\n        </Link>\n      );\n    } else if (header === \"sellerStore\") {\n      return (\n        <div\n          color='ghost-primary'\n          onClick={() => this._onToggleSellerModal(\"edit\", row)}\n          style={{ cursor: \"pointer\" }}>\n          {row.sellerStore}\n        </div>\n      );\n    } else if (header === \"-phone\") {\n      return row.phone !== \"-\" ? (\n        <CopyclipBoard\n          copiedValue={row.phone}\n          // copiedValue={parsePhoneNumberFromString(\n          //   row.phone\n          // ).formatInternational()}\n          // border=\"none\"\n        ></CopyclipBoard>\n      ) : (\n        \"-\"\n      );\n    } else if (header === \"published\") {\n      return cell ? this._formatDate(cell) : \"-\";\n    }\n    //  else if (header === \"sales\") {\n    //   return row.sales > 0 ? (\n    //     <span onClick={() => this._onToggleVaultModal(row.salesList)}>\n    //       {row.sales}\n    //     </span>\n    //   ) : (\n    //     0\n    //   );\n    // }\n    else if (header === \"status\") {\n      return (\n        <Input\n          type='select'\n          value={cell}\n          // onChange={() => this._onStatusUpdate(row)}\n          // disabled={this.state.loading.changeStatusLoading}\n        >\n          <option value='Active'>Active</option>\n          <option value='Inactive'>Inactive</option>\n        </Input>\n      );\n    } else if (header === \"action\") {\n      return (\n        <Link to={`/subscriber-view/${row.id}`}>\n          <Button color='ghost-primary'>View</Button>\n        </Link>\n      );\n    } else {\n      return cell;\n    }\n  };\n\n  _filterOnChange = ({ currentTarget }) => {\n    let { filters } = this.state;\n    filters[currentTarget.name] = currentTarget.value;\n    this.setState({ filters });\n    if (currentTarget.name !== \"search\") {\n      // this._filterSubscriberList();\n      this._applyFilterChanges();\n    }\n  };\n\n  // old function for frontend filtering - not using now\n  _filterSubscriberList = () => {\n    let filterConditions = [];\n    // console.log(this.state);\n    let { filters, subscriberListBackup, subscriberList } = this.state;\n    Object.keys(filters).forEach((key) => {\n      if (filters[key]) {\n        filterConditions.push(key);\n      }\n    });\n    console.log(filterConditions);\n    subscriberList = subscriberListBackup;\n    if (filterConditions.length) {\n      if (filters.subscriptions) {\n        console.log(filters.subscriptions);\n        let range = this.state.subscriptionCounts[filters.subscriptions].value;\n        console.log(range);\n        subscriberList = subscriberList.filter((each) => {\n          // console.log(\n          //   each.subscriptions,\n          //   each.subscriptions >= range.min,\n          //   each.subscriptions <= range.max\n          // );\n          if (range.min && !range.max) {\n            return each.subscriptions.length > range.min;\n          } else {\n            return (\n              each.subscriptions.length >= range.min &&\n              each.subscriptions.length <= range.max\n            );\n          }\n        });\n      }\n      if (filters.status) {\n        subscriberList = subscriberList.filter((each) => {\n          return each.status.toLowerCase() === filters.status.toLowerCase();\n        });\n      }\n      if (filters.search.trim().length) {\n        subscriberList = subscriberList.filter((each) => {\n          return (\n            each.name.toLowerCase().includes(filters.search.toLowerCase()) ||\n            each.email.toLowerCase().includes(filters.search.toLowerCase()) ||\n            each.phone.toLowerCase().includes(filters.search.toLowerCase())\n          );\n        });\n      }\n      this.setState({ subscriberList });\n    } else {\n      this.setState({ subscriberList: subscriberListBackup });\n    }\n  };\n\n  _setSelectedRows = (data) => {\n    console.log(data);\n    let { selectedSubscribers } = this.state;\n    selectedSubscribers = data;\n    this.setState({ selectedSubscribers });\n  };\n\n  _contactOnChange = ({ currentTarget }) => {\n    let { contact } = this.state;\n    contact[currentTarget.name] = currentTarget.value;\n    this.setState({ contact });\n  };\n\n  _setMessageContent = (value, key) => {\n    let { contact } = this.state;\n    contact[key] = value;\n    this.setState({ contact });\n  };\n\n  _extractContent = (s) => {\n    var span = document.createElement(\"span\");\n    span.innerHTML = s;\n    return span.textContent || span.innerText;\n  };\n\n  _sendMessage = () => {\n    let { contact, selectedSubscribers } = this.state;\n    let data = {\n      idlist: selectedSubscribers,\n      text:\n        contact.via === \"email\"\n          ? contact.message\n          : this._extractContent(contact.message),\n    };\n    if (!data.idlist.length) {\n      ToastsStore.warning(\"Please select atleast one creator\", 3000);\n      return;\n    }\n    if (!data.text.trim().length) {\n      ToastsStore.warning(\"Please write some message\", 3000);\n      return;\n    }\n    console.log(data);\n    this._manageLoading(\"send-message\", true);\n    sendMessage(contact.via, data).then(\n      (response) => {\n        console.log(response);\n        this._setMessageContent(\"\", \"message\");\n        this._manageLoading(\"send-message\", false);\n        ToastsStore.success(\"Message sent Successfully!\", 3000);\n      },\n      (error) => {\n        console.log(error);\n        this._manageLoading(\"send-message\", false);\n        // ToastsStore.error(error.reason, 3000);\n        showToast(\n          error.reason && error.reason.length\n            ? error.reason\n            : \"Server error. Try again after sometime.\",\n          \"error\"\n        );\n      }\n    );\n  };\n\n  _paginate = (pageNumber, pageSize) => {\n    console.log(\"pageNumber, pageSize :\", pageNumber, pageSize);\n    const { tableConfig } = this.state;\n    tableConfig.pageNumber = pageNumber;\n    tableConfig.pageSize = pageSize;\n    tableConfig.loading = true;\n    setTimeout(() => {\n      this.setState({ tableConfig }, () => {\n        this._getAllSeller(this.state.tableConfig);\n      });\n    }, 100);\n  };\n\n  _onSortChange = (sortName, sortOrder) => {\n    const { tableConfig } = deepClone(this.state);\n    tableConfig.sort.sortBy = this.state.subscriberFieldsKeyMap[sortName];\n    tableConfig.sort.sortOrder = sortOrder;\n    tableConfig.loading = true;\n    this.setState({ tableConfig }, () => {\n      this._getAllSeller(tableConfig);\n    });\n    console.log(\"sortName, sortOrder :\", sortName, sortOrder);\n  };\n\n  _applyFilterChanges = () => {\n    const { filters, tableConfig } = deepClone(this.state);\n    console.log(\"filters :\", filters);\n    let data = {};\n    if (filters.sales.length) {\n      data = {\n        salesUpper: this.state.salesCounts[filters.sales].value.min,\n        salesLower: this.state.salesCounts[filters.sales].value.max,\n      };\n    }\n    if (filters.creator.length) {\n      data = {\n        creatorId: this.state.filters.creator,\n      };\n    }\n    if (filters.price.length) {\n      data = {\n        priceLower: this.state.priceCounts[filters.price].value.min,\n        priceUpper: this.state.priceCounts[filters.price].value.max,\n      };\n    }\n    if (filters.status.length) {\n      data.isActive = filters.status === \"active\" ? true : false;\n    }\n    console.log(\"data :\", data);\n    tableConfig.filters = data;\n    if (filters.search.length) {\n      tableConfig.search = filters.search;\n    } else {\n      tableConfig.search = \"\";\n    }\n    tableConfig.loading = true;\n    console.log(tableConfig);\n    this.setState({ tableConfig }, () => {\n      this._getAllSeller(tableConfig);\n    });\n  };\n\n  componentDidMount() {\n    // this._getAllVaultFOlder(this.state.tableConfig);\n    this._getAllSeller();\n    // const data={\n    //   \"filters\": {\n    //     \"priceLower\": 1,\n    //     \"priceUpper\": 5\n    //   },\n    //   \"search\": \"folder 1\",\n    //   \"sort\": {\n    //     \"sortBy\": \"_owner\",\n    //     \"sortOrder\": \"dsc\"\n    //   }\n    // }\n    // this._getAllSubscribers(data)\n  }\n\n  _getAllSeller = () => {\n    this._manageLoading(\"data\", true);\n    getAllSeller()\n      .then((res) => {\n        console.log(\"api res: \", res);\n\n        const sellerList = res.sellers.map((e) => {\n          return {\n            id: e._id,\n            sellerStore: e.storeName,\n            name: `${e.name.first} ${e.name.last}`,\n            phone: e.phone && e.phone !== \"-\" ? e.phone : \"-\",\n            email: e.email,\n            status: e.isActive ? \"Active\" : \"Inactive\",\n            products: e.productCount,\n            sales: e.totalEarned,\n          };\n        });\n        this.setState({ sellerList: sellerList, sellerListBackup: sellerList });\n        this._manageLoading(\"data\", false);\n      })\n      .catch((err) => {\n        console.log(\"api error: \", err);\n        showToast(\n          err.reason && err.reason.length\n            ? err.reason\n            : \"Server error. Try again after sometime.\",\n          \"error\"\n        );\n      });\n  };\n\n  render() {\n    const {\n      filters,\n      loading,\n      subscriptionCounts,\n      salesCounts,\n      priceCounts,\n      contact,\n      totalCount,\n      tableConfig,\n      subscriberListBackup,\n      sellerList,\n    } = this.state;\n    //  console.log(\"this.state\",this.state)\n    const creator = subscriberListBackup\n      .map((i) => {\n        return { creator: i.creator, creatorId: i.creatorId };\n      })\n      .filter((item, pos, arr) => {\n        return arr.findIndex((i) => i.creatorId === item.creatorId) === pos;\n      });\n    console.log(creator);\n    return (\n      <div className='app TruFansPgBg animated fadeIn'>\n        <Container fluid>\n          <Row>\n            <Col xs='12'>\n              <div className='PgTitle'>\n                <div className=' justify-content-start align-items-center'>\n                  {/* on clicking the below btn, it should take back the user to the previous page in history */}\n                  {/* <Button color=\"ghost-dark\" className=\"customBackBtn\">\n                  <i className=\"fa fa-arrow-left\"></i>\n                </Button> */}\n\n                  <h2>Sellers</h2>\n                </div>\n                <button\n                  className='BtnPurple'\n                  onClick={() => this._onToggleSellerModal(\"add\", null)}>\n                  New Seller\n                </button>\n              </div>\n              {/* filters */}\n              {!loading.loadingData && (\n                <div>\n                  <div className='filterWrap'>\n                    <div className='d-flex align-items-center'>\n                      <i className='fa fa-filter'></i>\n\n                      {/* <Input\n                        type=\"select\"\n                        name=\"creator\"\n                        value={filters.creator}\n                        onChange={this._filterOnChange}\n                      >\n                        <option value=\"\">Creator</option>\n                        {creator.map((option, index) => (\n                          <option key={index} value={option.creatorId}>\n                            {option.creator}\n                          </option>\n                        ))}\n                      </Input> */}\n                      {/* <Input\n                        type=\"select\"\n                        name=\"price\"\n                        value={filters.price}\n                        onChange={this._filterOnChange}\n                      >\n                        <option value=\"\">Price</option>\n\n                        {priceCounts.map((option, index) => (\n                          <option key={index} value={index}>\n                            {option.label}\n                          </option>\n                        ))}\n                      </Input> */}\n                      <Input\n                        type='select'\n                        name='sales'\n                        value={filters.sales}\n                        onChange={this._filterOnChange}>\n                       <option value=''>Sales</option>\n                        {/*<option value='0'>0</option>\n                        <option value='1,000'>&lt; $1,000</option>\n                        <option value='10,000'>&lt; $10,000</option>\n                        <option value='25,000'>&lt; $25,000</option>\n                        <option value='25,000'>$25,000+</option> */}\n                        {salesCounts.map((option, index) => (\n                          <option key={index} value={index}>                        \n                            {option.label}\n                          </option>\n                        ))}\n                      </Input>\n                      <Input\n                        type='select'\n                        name='status'\n                        value={filters.status}\n                        onChange={this._filterOnChange}>\n                        <option value=''>Status</option>\n                        <option value='active'>Active</option>\n                        <option value='inactive'>Inactive</option>\n                      </Input>\n                    </div>\n\n                    <div className='d-flex align-items-center'>\n                      <Input\n                        type='text'\n                        id='search'\n                        name='search'\n                        placeholder='Search'\n                        autoComplete='off'\n                        className='ml-2'\n                        value={this.state.filters.search}\n                        onChange={this._filterOnChange}\n                      />\n\n                      <Button\n                        color='secondary'\n                        className='ml-2'\n                        onClick={() => this._applyFilterChanges()}>\n                        <i className='icon-magnifier'></i>\n                      </Button>\n                    </div>\n                  </div>{\" \"}\n                  {/* filterWrap */}\n                  {/* <CustomTable\n                    tableData={this.state.subscriberList}\n                    headerKeys={this.state.headerKeys}\n                    dataFormat={this._dataFormat}\n                    rowSelection={true}\n                    setSelectedRows={data => this._setSelectedRows(data)}\n                  ></CustomTable> */}\n                  <CustomDataTable\n                    tableData={sellerList}\n                    headerKeys={this.state.headerKeys}\n                    dataFormat={this._dataFormat}\n                    totalCount={totalCount}\n                    rowSelection={true}\n                    onPaginate={(pageNumber, pageSize) =>\n                      this._paginate(pageNumber, pageSize)\n                    }\n                    onSortChange={(sortName, sortOrder) =>\n                      this._onSortChange(sortName, sortOrder)\n                    }\n                    setSelectedRows={(data) => this._setSelectedRows(data)}\n                    showTableLoading={tableConfig.loading}></CustomDataTable>\n                </div>\n              )}\n              {loading.loadingData && (\n                <div className='filterWrap'>\n                  <div className='loading-section list-loading'>\n                    <i className='fa fa-spinner fa-spin'></i> &nbsp; Loading\n                    Subscribers..\n                  </div>\n                </div>\n              )}\n              {/* The below div will appear after the user selects row(s) from the above table */}\n\n              {/* there will be a \"WYSIWYG\" editor below in place of a textarea  */}\n              {/* <Input\n                      type=\"textarea\"\n                      id=\"\"\n                      rows=\"6\"\n                      placeholder=\"Enter your message here..\"\n                      name=\"message\"\n                      value={contact.message}\n                      onChange={this._contactOnChange}\n                    /> */}\n\n              {/* Modal for \"Subscriptions\" */}\n              <AddEditSellerModal\n                type={this.state.addSellerModal.type}\n                data={this.state.addSellerModal.data}\n                isOpen={this.state.addSellerModal.isOpen}\n                toggle={() => this._onToggleSellerModal()}\n                reloadAdminList={this._getAllAdminUsers}></AddEditSellerModal>\n\n              {/* Modal for \"Tips\" */}\n              <TipsModal\n                isOpen={this.state.tipsModal.isOpen}\n                data={this.state.tipsModal.data}\n                toggle={() => this._onToggleTipsModal()}></TipsModal>\n              {/* Modal for \"PPV\" */}\n              <PpvListModal\n                isOpen={this.state.ppvModal.isOpen}\n                data={this.state.ppvModal.data}\n                toggle={() => this._onTogglePPVModal()}></PpvListModal>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Seller;\n"]},"metadata":{},"sourceType":"module"}