{"ast":null,"code":"import _classCallCheck from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/send-invite-modal.jsx\";\nimport React, { Component } from \"react\";\nimport { Modal, ModalBody, ModalFooter, ModalHeader // Table,\n, Button // Badge,\n// Container,\n, Row, Col, Input, Label, FormGroup, Form } from \"reactstrap\";\nimport { sendInvite } from \"../http/http-calls\";\nimport config from \"../config/index\";\nimport { ToastsStore } from \"react-toasts\";\nimport { countryCodes } from \"../config/country-codes\";\nimport { showToast } from \"../helper-methods\";\n\nvar SendInviteModal = /*#__PURE__*/function (_Component) {\n  _inherits(SendInviteModal, _Component);\n\n  var _super = _createSuper(SendInviteModal);\n\n  function SendInviteModal() {\n    var _this;\n\n    _classCallCheck(this, SendInviteModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      creator: {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        countryCode: \"+1\"\n      },\n      errors: {},\n      isDirty: {\n        name: false,\n        email: false,\n        phone: false\n      },\n      loading: false\n    };\n\n    _this._closeModal = function () {\n      console.log(\"in _closeModal\");\n      var _this$state = _this.state,\n          creator = _this$state.creator,\n          errors = _this$state.errors,\n          isDirty = _this$state.isDirty;\n      creator = {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        countryCode: \"+1\"\n      };\n      isDirty = {\n        name: false,\n        email: false,\n        phone: false\n      };\n      errors = {};\n\n      _this.setState({\n        creator: creator,\n        errors: errors,\n        isDirty: isDirty\n      }, function () {\n        console.log(creator, errors);\n\n        _this.props.toggle();\n      });\n    };\n\n    _this._handleOnChange = function (_ref) {\n      var currentTarget = _ref.currentTarget;\n      var _this$state2 = _this.state,\n          creator = _this$state2.creator,\n          isDirty = _this$state2.isDirty;\n      creator[currentTarget.name] = currentTarget.value;\n      isDirty[currentTarget.name] = true;\n\n      _this.setState({\n        creator: creator\n      });\n\n      _this._validateForm();\n    };\n\n    _this._handleOnSubmit = function (event) {\n      event.preventDefault();\n      var isDirty = _this.state.isDirty;\n      isDirty.name = true;\n      isDirty.email = true;\n      isDirty.phone = true;\n\n      _this.setState({\n        isDirty: isDirty\n      });\n\n      console.log(_this.state.isDirty);\n\n      var errors = _this._validateForm();\n\n      console.log(errors); // this.setState({errors});\n\n      if (!errors) {\n        console.log(\"Make API call\");\n\n        _this._sendInvite();\n      }\n    };\n\n    _this._updateCountryCode = function (value) {\n      console.log(\"TCL: value\", value);\n      var creator = _this.state.creator;\n      creator[\"countryCode\"] = value;\n\n      _this.setState({\n        creator: creator\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SendInviteModal, [{\n    key: \"_sendInvite\",\n    value: function _sendInvite() {\n      var _this2 = this;\n\n      console.log(\"save user\", this.state.creator);\n      this.setState({\n        loading: true\n      });\n      var data = {\n        name: {\n          first: this.state.creator.name.split(\" \")[0],\n          last: this.state.creator.name.split(\" \")[1]\n        },\n        email: this.state.creator.email.trim().length ? this.state.creator.email : undefined,\n        phone: this.state.creator.phone.trim().length ? \"(\" + this.state.creator.countryCode + \")\" + this.state.creator.phone : undefined\n      };\n      sendInvite(data).then(function (response) {\n        console.log(response);\n\n        _this2.setState({\n          loading: false\n        });\n\n        ToastsStore.success(\"Invitation sent Successfully.\", 3000);\n\n        _this2.props.reloadInvitationList();\n\n        _this2._closeModal();\n      }, function (error) {\n        console.log(error); // ToastsStore.error(error.reason, 3000);\n\n        showToast(error.reason && error.reason.length ? error.reason : \"Server error. Try again after sometime.\", \"error\");\n\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"_validateForm\",\n\n    /**\n     * To Validate the form and show the error messages\n     */\n    value: function _validateForm() {\n      var _this$state3 = this.state,\n          creator = _this$state3.creator,\n          errors = _this$state3.errors,\n          isDirty = _this$state3.isDirty; // console.log(creator, isDirty);\n\n      Object.keys(creator).forEach(function (each) {\n        if (each === \"email\" && isDirty.email) {\n          if (!creator.email.trim().length && !creator.phone.trim().length) {\n            errors.email = \"Email is Required\";\n          } else if (creator.email.trim().length && !new RegExp(\"^[a-zA-Z0-9]{1}[a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,3}$\").test(creator.email)) {\n            errors.email = \"Please enter valid Email\";\n          } else {\n            delete errors[each];\n            isDirty.email = false;\n          }\n        } else if (each === \"name\" && isDirty.name) {\n          if (!creator.name.trim().length) {\n            // console.log(admin.password);\n            errors[each] = \"Name is Required\";\n          } else {\n            delete errors[each];\n            isDirty.name = false;\n          }\n        } else if (each === \"phone\" && isDirty.phone) {\n          if (!creator.phone.trim().length && !creator.email.trim().length) {\n            // console.log(admin.password);\n            errors[each] = \"Phone is Required\";\n          } else if (creator.phone.trim().length && !config.regexConfig.phone.test(String(creator.phone).toLowerCase())) {\n            errors[each] = \"Enter valid phone number\";\n          } else {\n            delete errors[each];\n            isDirty.phone = false;\n          }\n        }\n      });\n      console.log(errors);\n      this.setState({\n        errors: errors\n      });\n      return Object.keys(errors).length ? errors : null;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"componentDidMount\", this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // console.log(\"from modal\", this.props);\n      var _this$state4 = this.state,\n          creator = _this$state4.creator,\n          loading = _this$state4.loading;\n      return /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.props.isOpen,\n        toggle: function toggle() {\n          return _this3._closeModal();\n        },\n        className: \"modal-dialog-centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this._handleOnSubmit,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this3._closeModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, \"Invite Creator\"), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 19\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Enter\",\n        name: \"name\",\n        value: creator.name,\n        onChange: this._handleOnChange,\n        className: this.state.errors && this.state.errors.name ? \"validation-error\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 19\n        }\n      }), this.state.errors && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"validation-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }, this.state.errors.name)), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 19\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"email\",\n        id: \"email\",\n        placeholder: \"Enter\",\n        name: \"email\",\n        value: creator.email,\n        onChange: this._handleOnChange,\n        className: this.state.errors && this.state.errors.email ? \"validation-error\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }\n      }), this.state.errors && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"validation-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }\n      }, this.state.errors.email)), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        htmlFor: \"phone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 19\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"selectCountryCode\",\n        id: \"selectCountryCode\",\n        onChange: function onChange(e) {\n          return _this3._updateCountryCode(e.target.value);\n        },\n        value: creator.countryCode.value,\n        style: {\n          maxWidth: \"75px\",\n          padding: \"4px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }\n      }, countryCodes.map(function (countryCode, countryIndex) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: countryIndex,\n          value: countryCode.dial_code,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }\n        }, countryCode.code, \" (\", countryCode.dial_code, \")\");\n      })), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        id: \"phone\",\n        placeholder: \"Enter\",\n        name: \"phone\",\n        value: creator.phone,\n        onChange: this._handleOnChange,\n        className: this.state.errors && this.state.errors.phone ? \"validation-error\" : \"\",\n        style: {\n          maxWidth: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }\n      })), this.state.errors && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"validation-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }\n      }, this.state.errors.phone))))), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"dark\",\n        outline: true,\n        type: \"button\",\n        className: \"btn-pill\",\n        onClick: function onClick() {\n          return _this3._closeModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"BtnPurple\",\n        type: \"submit\",\n        disabled: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }\n      }, loading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-spin mr5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 19\n        }\n      }), \"\\xA0\") : null, \"Send Invite\"))));\n    }\n  }]);\n\n  return SendInviteModal;\n}(Component);\n\nexport default SendInviteModal;","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/send-invite-modal.jsx"],"names":["React","Component","Modal","ModalBody","ModalFooter","ModalHeader","Button","Row","Col","Input","Label","FormGroup","Form","sendInvite","config","ToastsStore","countryCodes","showToast","SendInviteModal","state","creator","name","email","phone","countryCode","errors","isDirty","loading","_closeModal","console","log","setState","props","toggle","_handleOnChange","currentTarget","value","_validateForm","_handleOnSubmit","event","preventDefault","_sendInvite","_updateCountryCode","data","first","split","last","trim","length","undefined","then","response","success","reloadInvitationList","error","reason","Object","keys","forEach","each","RegExp","test","regexConfig","String","toLowerCase","isOpen","display","e","target","maxWidth","padding","map","countryIndex","dial_code","code"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  // Table,\n  Button,\n  // Badge,\n  // Container,\n  Row,\n  Col,\n  Input,\n  Label,\n  FormGroup,\n  Form\n} from \"reactstrap\";\nimport { sendInvite } from \"../http/http-calls\";\nimport config from \"../config/index\";\nimport { ToastsStore } from \"react-toasts\";\nimport { countryCodes } from \"../config/country-codes\";\nimport { showToast } from \"../helper-methods\";\n\nclass SendInviteModal extends Component {\n  state = {\n    creator: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      countryCode: \"+1\"\n    },\n    errors: {},\n    isDirty: {\n      name: false,\n      email: false,\n      phone: false\n    },\n    loading: false\n  };\n\n  _closeModal = () => {\n    console.log(\"in _closeModal\");\n    let { creator, errors, isDirty } = this.state;\n    creator = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      countryCode: \"+1\"\n    };\n    isDirty = {\n      name: false,\n      email: false,\n      phone: false\n    };\n    errors = {};\n    this.setState({ creator, errors, isDirty }, () => {\n      console.log(creator, errors);\n      this.props.toggle();\n    });\n  };\n\n  _sendInvite() {\n    console.log(\"save user\", this.state.creator);\n    this.setState({ loading: true });\n    let data = {\n      name: {\n        first: this.state.creator.name.split(\" \")[0],\n        last: this.state.creator.name.split(\" \")[1]\n      },\n      email: this.state.creator.email.trim().length\n        ? this.state.creator.email\n        : undefined,\n      phone: this.state.creator.phone.trim().length\n        ? \"(\" + this.state.creator.countryCode + \")\" + this.state.creator.phone\n        : undefined\n    };\n    sendInvite(data).then(\n      response => {\n        console.log(response);\n        this.setState({ loading: false });\n        ToastsStore.success(\"Invitation sent Successfully.\", 3000);\n        this.props.reloadInvitationList();\n        this._closeModal();\n      },\n      error => {\n        console.log(error);\n        // ToastsStore.error(error.reason, 3000);\n        showToast(\n          error.reason && error.reason.length\n            ? error.reason\n            : \"Server error. Try again after sometime.\",\n          \"error\"\n        );\n        this.setState({ loading: false });\n      }\n    );\n  }\n\n  _handleOnChange = ({ currentTarget }) => {\n    const { creator, isDirty } = this.state;\n    creator[currentTarget.name] = currentTarget.value;\n    isDirty[currentTarget.name] = true;\n    this.setState({ creator });\n    this._validateForm();\n  };\n\n  /**\n   * To handle submit of the form and validate it\n   */\n  _handleOnSubmit = event => {\n    event.preventDefault();\n    const { isDirty } = this.state;\n    isDirty.name = true;\n    isDirty.email = true;\n    isDirty.phone = true;\n    this.setState({ isDirty });\n    console.log(this.state.isDirty);\n    let errors = this._validateForm();\n    console.log(errors);\n    // this.setState({errors});\n    if (!errors) {\n      console.log(\"Make API call\");\n      this._sendInvite();\n    }\n  };\n\n  /**\n   * To Validate the form and show the error messages\n   */\n  _validateForm() {\n    const { creator, errors, isDirty } = this.state;\n    // console.log(creator, isDirty);\n    Object.keys(creator).forEach(each => {\n      if (each === \"email\" && isDirty.email) {\n        if (!creator.email.trim().length && !creator.phone.trim().length) {\n          errors.email = \"Email is Required\";\n        } else if (\n          creator.email.trim().length &&\n          !new RegExp(\n            \"^[a-zA-Z0-9]{1}[a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,3}$\"\n          ).test(creator.email)\n        ) {\n          errors.email = \"Please enter valid Email\";\n        } else {\n          delete errors[each];\n          isDirty.email = false;\n        }\n      } else if (each === \"name\" && isDirty.name) {\n        if (!creator.name.trim().length) {\n          // console.log(admin.password);\n          errors[each] = \"Name is Required\";\n        } else {\n          delete errors[each];\n          isDirty.name = false;\n        }\n      } else if (each === \"phone\" && isDirty.phone) {\n        if (!creator.phone.trim().length && !creator.email.trim().length) {\n          // console.log(admin.password);\n          errors[each] = \"Phone is Required\";\n        } else if (\n          creator.phone.trim().length &&\n          !config.regexConfig.phone.test(String(creator.phone).toLowerCase())\n        ) {\n          errors[each] = \"Enter valid phone number\";\n        } else {\n          delete errors[each];\n          isDirty.phone = false;\n        }\n      }\n    });\n    console.log(errors);\n    this.setState({ errors });\n    return Object.keys(errors).length ? errors : null;\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\", this.props);\n  }\n\n  _updateCountryCode = value => {\n    console.log(\"TCL: value\", value);\n    const { creator } = this.state;\n    creator[\"countryCode\"] = value;\n    this.setState({ creator });\n  };\n\n  render() {\n    // console.log(\"from modal\", this.props);\n    let { creator, loading } = this.state;\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n        toggle={() => this._closeModal()}\n        className=\"modal-dialog-centered\"\n      >\n        <Form onSubmit={this._handleOnSubmit} noValidate>\n          <ModalHeader toggle={() => this._closeModal()}>\n            Invite Creator\n          </ModalHeader>\n          <ModalBody>\n            <Row>\n              <Col xs=\"12\">\n                <FormGroup className=\"px-3\">\n                  <Label htmlFor=\"name\">Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"name\"\n                    placeholder=\"Enter\"\n                    name=\"name\"\n                    value={creator.name}\n                    onChange={this._handleOnChange}\n                    className={\n                      this.state.errors && this.state.errors.name\n                        ? \"validation-error\"\n                        : \"\"\n                    }\n                  />\n                  {this.state.errors && (\n                    <div className=\"validation-error\">\n                      {this.state.errors.name}\n                    </div>\n                  )}\n                </FormGroup>\n                <FormGroup className=\"px-3\">\n                  <Label htmlFor=\"email\">Email</Label>\n                  <Input\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"Enter\"\n                    name=\"email\"\n                    value={creator.email}\n                    onChange={this._handleOnChange}\n                    className={\n                      this.state.errors && this.state.errors.email\n                        ? \"validation-error\"\n                        : \"\"\n                    }\n                  />\n                  {this.state.errors && (\n                    <div className=\"validation-error\">\n                      {this.state.errors.email}\n                    </div>\n                  )}\n                </FormGroup>\n                <FormGroup className=\"px-3\">\n                  <Label htmlFor=\"phone\">Phone</Label>\n                  <div style={{ display: \"flex\" }}>\n                    <Input\n                      type=\"select\"\n                      name=\"selectCountryCode\"\n                      id=\"selectCountryCode\"\n                      onChange={e => this._updateCountryCode(e.target.value)}\n                      value={creator.countryCode.value}\n                      style={{ maxWidth: \"75px\", padding: \"4px\" }}\n                    >\n                      {countryCodes.map((countryCode, countryIndex) => (\n                        <option\n                          key={countryIndex}\n                          value={countryCode.dial_code}\n                        >\n                          {countryCode.code} ({countryCode.dial_code})\n                        </option>\n                      ))}\n                    </Input>\n                    <Input\n                      type=\"text\"\n                      id=\"phone\"\n                      placeholder=\"Enter\"\n                      name=\"phone\"\n                      value={creator.phone}\n                      onChange={this._handleOnChange}\n                      className={\n                        this.state.errors && this.state.errors.phone\n                          ? \"validation-error\"\n                          : \"\"\n                      }\n                      style={{ maxWidth: \"100%\" }}\n                    />\n                  </div>\n                  {this.state.errors && (\n                    <div className=\"validation-error\">\n                      {this.state.errors.phone}\n                    </div>\n                  )}\n                </FormGroup>\n              </Col>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"dark\"\n              outline\n              type=\"button\"\n              className=\"btn-pill\"\n              onClick={() => this._closeModal()}\n            >\n              Cancel\n            </Button>\n            <Button className=\"BtnPurple\" type=\"submit\" disabled={loading}>\n              {loading ? (\n                <>\n                  <i className=\"fa fa-spinner fa-spin mr5\" />\n                  &nbsp;\n                </>\n              ) : null}\n              Send Invite\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default SendInviteModal;\n"]},"metadata":{},"sourceType":"module"}