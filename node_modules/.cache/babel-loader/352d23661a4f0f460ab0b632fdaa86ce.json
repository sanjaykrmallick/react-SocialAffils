{"ast":null,"code":"import _classCallCheck from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/custom-table.jsx\";\nimport React, { Component } from \"react\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport \"../assets/css/Table.css\";\nimport { cloneDeep, mapValues, isEqual } from \"lodash\";\n\nvar CustomTable = /*#__PURE__*/function (_Component) {\n  _inherits(CustomTable, _Component);\n\n  var _super = _createSuper(CustomTable);\n\n  function CustomTable() {\n    var _this;\n\n    _classCallCheck(this, CustomTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      tableData: [],\n      options: {\n        page: 1,\n        // which page you want to show as default\n        sizePerPageList: [{\n          text: \"10\",\n          value: 10\n        }, {\n          text: \"20\",\n          value: 20\n        }, {\n          text: \"50\",\n          value: 50\n        }],\n        // you can change the dropdown list for size per page\n        sizePerPage: 10,\n        // which size per page you want to locate as default\n        pageStartIndex: 1,\n        // where to start counting the pages\n        paginationSize: 3,\n        // the pagination bar size.\n        prePage: \"Prev\",\n        // Previous page button text\n        nextPage: \"Next\",\n        // Next page button text\n        firstPage: \"First\",\n        // First page button text\n        lastPage: \"Last\",\n        // Last page button text\n        // paginationShowsTotal: this.renderShowsTotal,  // Accept bool or function\n        // paginationPosition: 'top'  // default is bottom, top and both is all available\n        hideSizePerPage: true,\n        // //You can hide the dropdown for sizePerPage\n        // alwaysShowAllBtns: true // Always show next and previous button\n        withFirstAndLast: true //> Hide the going to First and Last page button\n\n      },\n      selectedRows: [],\n      selectRowProp: {\n        mode: \"checkbox\",\n        clickToSelect: false,\n        bgColor: \"rgb(238, 193, 213)\",\n        onSelect: function onSelect(row, isSelected) {\n          return _this.onRowSelect(row, isSelected);\n        },\n        onSelectAll: function onSelectAll(isSelected, currentDisplayAndSelectedData) {\n          return _this.onSelectAll(isSelected, currentDisplayAndSelectedData);\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(CustomTable, [{\n    key: \"onRowSelect\",\n    value: function onRowSelect(row, isSelected) {\n      var selectedRows = this.state.selectedRows;\n\n      if (isSelected) {\n        var item = selectedRows.find(function (each) {\n          return each === row.id;\n        });\n\n        if (!item) {\n          selectedRows.push(row.id);\n        } else {\n          selectedRows.splice(selectedRows.indexOf(row.id), 1);\n        }\n\n        console.log('The selection', row, isSelected, selectedRows);\n      } else {\n        selectedRows.splice(selectedRows.indexOf(row.id), 1);\n        console.log('The selection', row, isSelected, selectedRows);\n      }\n\n      this.setState({\n        selectedRows: selectedRows\n      });\n\n      if (this.props.setSelectedRows) {\n        this.props.setSelectedRows(selectedRows);\n      }\n    }\n  }, {\n    key: \"onSelectAll\",\n    value: function onSelectAll(isSelected, currentDisplayAndSelectedData) {\n      var selectedRows = this.state.selectedRows;\n\n      if (isSelected) {\n        selectedRows = currentDisplayAndSelectedData.map(function (each) {\n          return each.id;\n        });\n      } else {\n        selectedRows = [];\n      }\n\n      this.setState({\n        selectedRows: selectedRows\n      });\n\n      if (this.props.setSelectedRows) {\n        this.props.setSelectedRows(selectedRows);\n      } // for(let i=0;i<currentDisplayAndSelectedData.length;i++){\n      //   console.log(currentDisplayAndSelectedData[i]);\n      // }\n\n    }\n  }, {\n    key: \"renderShowsTotal\",\n    value: function renderShowsTotal(start, to, total) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: '#FF7300'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      }, \"From \", start, \" to \", to, \", Out of \", total);\n    } // componentWillReceiveProps(nextProps) {\n    //   console.log(\"nextProps\", nextProps) ;\n    //   let { tableData } = this.state;\n    //   tableData = nextProps.tableData;\n    //   this.setState({tableData},()=>{\n    //     // console.log(\"========>\",this.state.tableData);\n    //   });\n    // }\n    // componentDidUpdate(previousProps, previousState) {\n    //   console.log('componentDidUpdate :',previousProps.tableData, this.props.tableData);\n    //   if(this.props.tableData && !isEqual(previousProps.tableData, this.props.tableData)){\n    //     console.log('inside if', this.props.tableData);\n    //     try{\n    //       this.setState({tableData:this.props.tableData});\n    //     }catch(error){\n    //       console.log('error :', error);\n    //     }\n    //   }\n    // }\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('componentDidMount.tableData :', this.state.tableData);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('object :', this.props);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(BootstrapTable, {\n        data: this.props.tableData,\n        pagination: true,\n        options: this.state.options,\n        selectRow: this.props.rowSelection ? this.state.selectRowProp : {},\n        bodyContainerClass: \"adminTable\",\n        version: \"4\",\n        responsive: true,\n        hover: true,\n        ref: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, this.props.headerKeys.map(function (header) {\n        return /*#__PURE__*/React.createElement(TableHeaderColumn, {\n          dataField: header.id,\n          key: header.id,\n          isKey: header.id === \"id\",\n          dataAlign: \"left\",\n          dataSort: header.noSort ? false : true,\n          hidden: header.id === 'id',\n          dataFormat: function dataFormat(cell, row) {\n            return _this2.props.dataFormat(cell, row, header.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }\n        }, header.label);\n      })));\n    }\n  }]);\n\n  return CustomTable;\n}(Component);\n\nexport default CustomTable;","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/custom-table.jsx"],"names":["React","Component","BootstrapTable","TableHeaderColumn","cloneDeep","mapValues","isEqual","CustomTable","state","tableData","options","page","sizePerPageList","text","value","sizePerPage","pageStartIndex","paginationSize","prePage","nextPage","firstPage","lastPage","hideSizePerPage","withFirstAndLast","selectedRows","selectRowProp","mode","clickToSelect","bgColor","onSelect","row","isSelected","onRowSelect","onSelectAll","currentDisplayAndSelectedData","item","find","each","id","push","splice","indexOf","console","log","setState","props","setSelectedRows","map","start","to","total","color","rowSelection","headerKeys","header","noSort","cell","dataFormat","label"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport \"../assets/css/Table.css\";\nimport { \n  cloneDeep,\n   mapValues, isEqual } from \"lodash\";\nclass CustomTable extends Component {\n  \n  state = {\n    tableData:[],\n    options: {\n      page: 1, // which page you want to show as default\n      sizePerPageList: [\n        {\n          text: \"10\",\n          value: 10\n        },\n        {\n          text: \"20\",\n          value: 20\n        },\n        {\n          text: \"50\",\n          value: 50\n        }\n      ], // you can change the dropdown list for size per page\n      sizePerPage: 10, // which size per page you want to locate as default\n      pageStartIndex: 1, // where to start counting the pages\n      paginationSize: 3, // the pagination bar size.\n      prePage: \"Prev\", // Previous page button text\n      nextPage: \"Next\", // Next page button text\n      firstPage: \"First\", // First page button text\n      lastPage: \"Last\", // Last page button text\n      // paginationShowsTotal: this.renderShowsTotal,  // Accept bool or function\n      // paginationPosition: 'top'  // default is bottom, top and both is all available\n      hideSizePerPage: true, // //You can hide the dropdown for sizePerPage\n      // alwaysShowAllBtns: true // Always show next and previous button\n      withFirstAndLast: true //> Hide the going to First and Last page button\n    },\n    selectedRows:[],\n    selectRowProp: {\n      mode: \"checkbox\",\n      clickToSelect: false,\n      bgColor: \"rgb(238, 193, 213)\" ,\n      onSelect: (row, isSelected)=>this.onRowSelect(row, isSelected),\n      onSelectAll: (isSelected, currentDisplayAndSelectedData)=>this.onSelectAll(isSelected, currentDisplayAndSelectedData)\n    }\n  };\n\n  onRowSelect(row, isSelected) {\n    const { selectedRows } = this.state;    \n    if (isSelected) {\n      let item = selectedRows.find((each)=>{return each===row.id});\n      if(!item){\n        selectedRows.push(row.id);\n      } else{\n        selectedRows.splice(selectedRows.indexOf(row.id),1);\n      }\n      console.log('The selection', row, isSelected, selectedRows);\n    } else{\n      selectedRows.splice(selectedRows.indexOf(row.id),1);\n      console.log('The selection', row, isSelected, selectedRows);\n    }\n    this.setState({selectedRows});\n    if(this.props.setSelectedRows){\n      this.props.setSelectedRows(selectedRows)\n    }\n  }\n\n  onSelectAll(isSelected, currentDisplayAndSelectedData){\n    let { selectedRows } = this.state;\n    if(isSelected){\n      selectedRows = currentDisplayAndSelectedData.map((each)=>{\n        return each.id;\n      })\n    }else {\n      selectedRows = [];\n    }    \n    this.setState({selectedRows});\n    if(this.props.setSelectedRows){\n      this.props.setSelectedRows(selectedRows)\n    }\n    // for(let i=0;i<currentDisplayAndSelectedData.length;i++){\n    //   console.log(currentDisplayAndSelectedData[i]);\n    // }\n  }\n\n  renderShowsTotal(start, to, total) {\n    return (\n      <p style={ { color: '#FF7300' } }>\n        From { start } to { to }, Out of { total }\n      </p>\n    );\n  }\n\n  // componentWillReceiveProps(nextProps) {\n  //   console.log(\"nextProps\", nextProps) ;\n  //   let { tableData } = this.state;\n  //   tableData = nextProps.tableData;\n  //   this.setState({tableData},()=>{\n  //     // console.log(\"========>\",this.state.tableData);\n  //   });\n  // }\n\n  // componentDidUpdate(previousProps, previousState) {\n  //   console.log('componentDidUpdate :',previousProps.tableData, this.props.tableData);\n  //   if(this.props.tableData && !isEqual(previousProps.tableData, this.props.tableData)){\n  //     console.log('inside if', this.props.tableData);\n  //     try{\n  //       this.setState({tableData:this.props.tableData});\n  //     }catch(error){\n  //       console.log('error :', error);\n  //     }\n  //   }\n  // }\n\n  componentDidMount(){\n    console.log('componentDidMount.tableData :', this.state.tableData);\n  }\n\n  \n\n  render() {\n    console.log('object :', this.props);\n    return (\n      <div>\n        <BootstrapTable\n          data={this.props.tableData}\n          pagination={true}\n          options={this.state.options}\n          selectRow={this.props.rowSelection ? this.state.selectRowProp : {}}\n          bodyContainerClass='adminTable'\n          version=\"4\"\n          responsive\n          hover={true}\n          ref='table'\n        >\n          {this.props.headerKeys.map(header => (\n            <TableHeaderColumn\n              dataField={header.id}\n              key={header.id}\n              isKey={header.id === \"id\"}\n              dataAlign=\"left\"\n              dataSort={ header.noSort ? false : true }\n              hidden={header.id === 'id'}\n              dataFormat={ (cell, row)=>this.props.dataFormat(cell, row, header.id) }\n            >\n              {header.label}\n            </TableHeaderColumn>\n          ))}\n        </BootstrapTable>\n      </div>\n    );\n  }\n}\n\nexport default CustomTable;\n"]},"metadata":{},"sourceType":"module"}