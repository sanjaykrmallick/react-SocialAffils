{"ast":null,"code":"import _classCallCheck from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/subscriber-feed-viewer.jsx\";\nimport JavascriptTimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nimport React, { Component } from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport { Button, Card, CardBody, CardHeader, CardText, Carousel, CarouselControl, CarouselIndicators, CarouselItem, Label } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport PollOption from \"../components/poll-option-component\";\nimport PostCommentSection from \"../components/post-comment-section\";\nimport PostEarningsModal from \"../components/post-earnings-modal\";\nimport config from \"../config\";\nimport { deepClone, getPostedDateValue } from \"../helper-methods\";\nimport { getComments } from \"../http/http-calls\";\n\nvar SubscriberFeedViewer = /*#__PURE__*/function (_Component) {\n  _inherits(SubscriberFeedViewer, _Component);\n\n  var _super = _createSuper(SubscriberFeedViewer);\n\n  function SubscriberFeedViewer(props) {\n    var _this;\n\n    _classCallCheck(this, SubscriberFeedViewer);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      comments: [],\n      dropdownOpen: false,\n      activeIndex: 0,\n      duration: 0,\n      decodedUserDetails: null,\n      custom: [false],\n      isCommentScetionOpen: false,\n      isPrompt: false,\n      isPostEarningsModalOpen: false\n    };\n    _this.now = 60;\n\n    _this._convertIntoDate = function (startDate) {\n      return new Date(startDate);\n    };\n\n    _this._getAllComments = function (id) {\n      var _deepClone = deepClone(_this.props),\n          feed = _deepClone.feed;\n\n      return new Promise(function (resolve, reject) {\n        getComments(id).then(function (response) {\n          if (response && response.hasOwnProperty(\"comments\")) {\n            _this.setState({\n              comments: response[\"comments\"]\n            }, function () {\n              resolve();\n            });\n          }\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    };\n\n    _this._toogleCommentSection = function (post) {\n      var isCommentScetionOpen = _this.state.isCommentScetionOpen;\n\n      if (!isCommentScetionOpen) {\n        _this._getAllComments(post[\"id\"]);\n      }\n\n      _this.setState({\n        isCommentScetionOpen: !isCommentScetionOpen\n      });\n    };\n\n    _this._pinToProfile = function (isPinned) {\n      var _deepClone2 = deepClone(_this.props),\n          feed = _deepClone2.feed;\n\n      _this.props.pinToProfile(feed[\"_post\"]._id, !isPinned);\n    };\n\n    _this._postComment = function (comment) {// if (id === null) {\n      //   postCommentOnFeed({\n      //     category: \"comment\",\n      //     content: comment,\n      //     id: feed['_post']._id\n      //   })\n      //     .then(res => {\n      //       this.postCommentRef.current._clearComment();\n      //       this._getAllComments();\n      //       this.props.getAllPosts();\n      //       showToast(\"Commented successfully\", \"success\");\n      //     })\n      //     .catch(err => {\n      //       showToast(\n      //         err.reason && err.reason.length\n      //           ? err.reason\n      //           : \"Server error. Try again after sometime.\",\n      //         \"error\"\n      //       );\n      //     });\n      // } else {\n      //   // edit comment\n      // }\n\n      var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    };\n\n    _this._getInteractionHeaderContent = function (feed) {\n      if (feed[\"activityType\"] === \"like\") {\n        return feed._user.name.full + \" liked this post\";\n      } else if (feed[\"activityType\"] === \"comment\") {\n        return feed._user.name.full + \" commented on this post\";\n      } else if (feed[\"activityType\"] === \"ppv\" || feed[\"activityType\"] === \"tips\") {\n        return feed._user.name.full + \" \" + (feed[\"activityType\"] === \"ppv\" ? \"paid\" : \"tipped\") + \" $\" + (feed && feed.hasOwnProperty(\"_transaction\") && feed._transaction.hasOwnProperty(\"amount\") ? feed._transaction.amount : 0) + \" for this post\";\n      } // else if (feed[\"activityType\"] === \"tips\") {\n      //   return (\n      //     feed._user.name.full +\n      //     \" tipped $\" +\n      //     (feed &&\n      //     feed.hasOwnProperty(\"_transaction\") &&\n      //     feed._transaction.hasOwnProperty(\"amount\")\n      //       ? feed._transaction.amount\n      //       : 0) +\n      //     \" for this post\"\n      //   );\n      // }\n\n\n      return null;\n    };\n\n    _this._renderCarousel = function () {\n      var _deepClone3 = deepClone(_this.props),\n          feed = _deepClone3.feed;\n\n      var slides = feed[\"_post\"]._contents.map(function (item) {\n        item = item._content;\n        return /*#__PURE__*/React.createElement(CarouselItem, {\n          onExiting: _this.onExiting,\n          onExited: _this.onExited,\n          key: item._id,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 9\n          }\n        }, item.contentType === \"video\" ? /*#__PURE__*/React.createElement(\"video\", {\n          className: \"d-block w-100\",\n          src: item.url,\n          controlsList: \"nodownload\",\n          controls: true,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }\n        }) : /*#__PURE__*/React.createElement(\"img\", {\n          className: \"d-block w-100\",\n          src: item.url,\n          alt: item.contentType,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }\n        }));\n      });\n\n      return slides; // return (\n      //     <>\n      //     {\n      //         items.map((item) => {\n      //             return (\n      //                 <CarouselItem onExiting={this.onExiting} onExited={this.onExited} key={item.src}>\n      //                     <img className=\"d-block w-100\" src={item.src} alt={item.altText} />\n      //                 </CarouselItem>\n      //             );\n      //         })\n      //     }\n      //     </>\n      // )\n    };\n\n    _this._onPromptSuccess = function () {\n      _this.props.deletePost();\n\n      _this.setState({\n        isPrompt: false\n      });\n    };\n\n    _this._onPromptDismiss = function () {\n      _this.setState({\n        isPrompt: false\n      });\n    };\n\n    _this._deletePost = function () {\n      _this.setState({\n        isPrompt: true\n      });\n    };\n\n    _this._calculatePostPrice = function (feed) {\n      if (feed._transactions && feed._transactions.length) {\n        var arr = feed._transactions.filter(function (each) {\n          return each.paymentType === \"post\" || each.paymentType === \"tips\";\n        });\n\n        var totalPrice = arr.reduce(function (acc, each) {\n          return acc = acc + each.amount;\n        }, 0);\n        return totalPrice;\n      }\n\n      return 0;\n    };\n\n    _this._closePostEarningsModal = function () {\n      _this.setState({\n        isPostEarningsModalOpen: false\n      });\n    };\n\n    _this._openPostEarningsModal = function (feed) {\n      _this.setState({\n        isPostEarningsModalOpen: true\n      });\n    };\n\n    _this._fetchTipTransactionList = function () {\n      var _deepClone4 = deepClone(_this.props),\n          feed = _deepClone4.feed;\n\n      if (feed.hasOwnProperty(\"_post\") && feed._post.hasOwnProperty(\"_transactions\") && feed._post._transactions.length) {\n        var tips = feed._post._transactions.filter(function (each) {\n          return each.paymentType === \"tips\";\n        });\n\n        return tips;\n      }\n\n      return [];\n    };\n\n    _this._fetchPPVTransactionList = function () {\n      var _deepClone5 = deepClone(_this.props),\n          feed = _deepClone5.feed;\n\n      if (feed.hasOwnProperty(\"_post\") && feed._post.hasOwnProperty(\"_transactions\") && feed._post._transactions.length) {\n        var arr = feed._post._transactions.filter(function (each) {\n          return each.paymentType === \"post\";\n        });\n\n        return arr;\n      }\n\n      return [];\n    };\n\n    _this._redirectToPostDetails = function () {\n      _this.props.history.push(\"/post/\" + _this.props.feed._post._id);\n    };\n\n    _this._renderPreview = function () {\n      var _deepClone6 = deepClone(_this.state),\n          activeIndex = _deepClone6.activeIndex,\n          decodedUserDetails = _deepClone6.decodedUserDetails,\n          isCommentScetionOpen = _deepClone6.isCommentScetionOpen,\n          comments = _deepClone6.comments,\n          isPrompt = _deepClone6.isPrompt;\n\n      var _deepClone7 = deepClone(_this.props),\n          user = _deepClone7.user,\n          feed = _deepClone7.feed;\n\n      var influencer = feed && feed.hasOwnProperty(\"_influencer\") ? feed._influencer : null;\n      var shownComment = feed && feed.hasOwnProperty(\"_interaction\") && feed._interaction && feed._interaction.hasOwnProperty(\"category\") && feed._interaction.category === \"comment\" ? feed._interaction : null;\n\n      if (!feed.hasOwnProperty(\"_post\")) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 14\n          }\n        });\n      } else {\n        if (feed[\"_post\"].category && feed[\"_post\"].category === \"general\") {\n          if (feed[\"_post\"]._contents && feed[\"_post\"]._contents.length > 1) {\n            return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 15\n              }\n            }, _this._getInteractionHeaderContent(feed)), /*#__PURE__*/React.createElement(Card, {\n              className: \"card-Feed mt-0\",\n              style: {\n                margin: \"0 0 15 0\"\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(Link, {\n              to: \"/post/\".concat(_this.props.feed._post._id),\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(CardHeader, {\n              onClick: _this._redirectToPostDetails,\n              style: {\n                cursor: \"pointer\"\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"d-flex justify-content-start\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"personImgWrap\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: influencer && influencer.profilePicture ? influencer.profilePicture : config[\"defaultUserPicture\"],\n              alt: \"Profile Img\",\n              className: \"personImg\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 25\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"h4\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 25\n              }\n            }, influencer ? influencer.name.full : \"\"), influencer ? /*#__PURE__*/React.createElement(\"a\", {\n              className: \"profileID\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 27\n              }\n            }, \"@\", influencer.username || \"NA\") : \"NA\")), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"postTime-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 21\n              }\n            }, getPostedDateValue(feed[\"_post\"].startDate)))), /*#__PURE__*/React.createElement(CardBody, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(CardText, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }\n            }, feed[\"_post\"] && feed[\"_post\"].text), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"mediaPhotoWrap-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(Carousel, {\n              activeIndex: activeIndex,\n              next: _this.next,\n              previous: _this.previous,\n              ride: \"carousel\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(CarouselIndicators, {\n              items: feed[\"_post\"]._contents,\n              activeIndex: activeIndex,\n              onClickHandler: _this.goToIndex,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 23\n              }\n            }), _this._renderCarousel(), /*#__PURE__*/React.createElement(CarouselControl, {\n              direction: \"prev\",\n              directionText: \"Previous\",\n              onClickHandler: _this.previous,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(CarouselControl, {\n              direction: \"next\",\n              directionText: \"Next\",\n              onClickHandler: _this.next,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 23\n              }\n            }))), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"options-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              disabled: true,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"icon-heart\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 23\n              }\n            }, feed[\"_post\"].likes || 0)), /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              onClick: function onClick() {\n                return _this._toogleCommentSection(feed[\"_post\"]);\n              },\n              \"aria-controls\": \"exampleAccordion1\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"icon-bubble\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 23\n              }\n            }, feed[\"_post\"].comments || 0)), /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              onClick: function onClick() {\n                return _this._openPostEarningsModal(feed[\"_post\"]);\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"fa fa-dollar\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                verticalAlign: \"-1px\"\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 23\n              }\n            }, _this._calculatePostPrice(feed[\"_post\"]) || 0))), \" \")), shownComment && !isCommentScetionOpen ? /*#__PURE__*/React.createElement(\"div\", {\n              className: \"commentSection\",\n              onClick: function onClick() {\n                return _this._toogleCommentSection(feed[\"_post\"]);\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"d-flex justify-content-start align-items-start\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: user && user.profilePicture ? user.profilePicture : config[\"defaultUserPicture\"],\n              alt: \"Profile Img\",\n              className: \"personImg-Comment\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 21\n              }\n            }), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"d-flex flex-column\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"comments-Post\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 25\n              }\n            }, shownComment[\"content\"] || \"\")), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"d-flex justify-content-start align-items-center mb-2\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 23\n              }\n            }, shownComment && shownComment.createdAt ? /*#__PURE__*/React.createElement(\"div\", {\n              className: \"commentTime ml-0\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 27\n              }\n            }, /*#__PURE__*/React.createElement(ReactTimeAgo, {\n              date: _this._convertIntoDate(shownComment.createdAt),\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 29\n              }\n            })) : null)))) : null, /*#__PURE__*/React.createElement(PostCommentSection, {\n              feed: feed[\"_post\"],\n              ref: _this.postCommentRef,\n              comments: comments,\n              isOpen: isCommentScetionOpen,\n              getComments: function getComments() {\n                return _this._getAllComments();\n              },\n              user: _this.props.user,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 15\n              }\n            }));\n          } else if (feed[\"_post\"]._contents && feed[\"_post\"]._contents.length === 1) {\n            if (feed[\"_post\"]._contents[0]._content.contentType === \"image\") {\n              // contains only one image\n              return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 17\n                }\n              }, _this._getInteractionHeaderContent(feed)), /*#__PURE__*/React.createElement(Card, {\n                className: \"card-Feed mt-0\",\n                style: {\n                  margin: \"0 0 15 0\"\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(Link, {\n                to: \"/post/\".concat(_this.props.feed._post._id),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(CardHeader, {\n                onClick: _this._redirectToPostDetails,\n                style: {\n                  cursor: \"pointer\"\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"d-flex justify-content-start\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"personImgWrap\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 25\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                src: influencer && influencer.profilePicture ? influencer.profilePicture : config[\"defaultUserPicture\"],\n                alt: \"Profile Img\",\n                className: \"personImg\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 27\n                }\n              })), /*#__PURE__*/React.createElement(\"div\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 25\n                }\n              }, /*#__PURE__*/React.createElement(\"h4\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 27\n                }\n              }, influencer ? influencer.name.full : \"\"), influencer && influencer.username && influencer.username.length ? /*#__PURE__*/React.createElement(\"a\", {\n                className: \"profileID\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 31\n                }\n              }, \"@\", influencer.username || \"NA\") : \"NA\")), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"postTime-Feed\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 23\n                }\n              }, getPostedDateValue(feed[\"_post\"].startDate)))), /*#__PURE__*/React.createElement(CardBody, {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(CardText, {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 21\n                }\n              }, feed[\"_post\"].text && feed[\"_post\"].text.length ? feed[\"_post\"].text : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"mediaPhotoWrap-Feed\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                className: \"mediaPhoto-Feed\",\n                src: feed[\"_post\"]._contents[0]._content.url,\n                alt: \"Feed Img\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 23\n                }\n              })), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"options-Feed\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(Button, {\n                color: \"ghost-info\",\n                disabled: true,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"i\", {\n                className: \"icon-heart\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 25\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 25\n                }\n              }, feed[\"_post\"].likes || 0)), /*#__PURE__*/React.createElement(Button, {\n                color: \"ghost-info\",\n                onClick: function onClick() {\n                  return _this._toogleCommentSection(feed[\"_post\"]);\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"i\", {\n                className: \"icon-bubble\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 25\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 25\n                }\n              }, feed[\"_post\"].comments || 0)), /*#__PURE__*/React.createElement(Button, {\n                color: \"ghost-info\",\n                onClick: function onClick() {\n                  return _this._openPostEarningsModal(feed[\"_post\"]);\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"i\", {\n                className: \"fa fa-dollar\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 25\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                style: {\n                  verticalAlign: \"-1px\"\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 25\n                }\n              }, _this._calculatePostPrice(feed[\"_post\"]) || 0))), \" \")), shownComment && !isCommentScetionOpen ? /*#__PURE__*/React.createElement(\"div\", {\n                className: \"commentSection\",\n                onClick: function onClick() {\n                  return _this._toogleCommentSection(feed[\"_post\"]);\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"d-flex justify-content-start align-items-start\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                src: user && user.profilePicture ? user.profilePicture : config[\"defaultUserPicture\"],\n                alt: \"Profile Img\",\n                className: \"personImg-Comment\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 23\n                }\n              }), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"d-flex flex-column\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"comments-Post\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 25\n                }\n              }, /*#__PURE__*/React.createElement(\"p\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 27\n                }\n              }, shownComment[\"content\"] || \"\")), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"d-flex justify-content-start align-items-center mb-2\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 25\n                }\n              }, shownComment && shownComment.createdAt ? /*#__PURE__*/React.createElement(\"div\", {\n                className: \"commentTime ml-0\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 29\n                }\n              }, /*#__PURE__*/React.createElement(ReactTimeAgo, {\n                date: _this._convertIntoDate(shownComment.createdAt),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 31\n                }\n              })) : null)))) : null, /*#__PURE__*/React.createElement(PostCommentSection, {\n                feed: feed[\"_post\"],\n                ref: _this.postCommentRef,\n                comments: comments,\n                isOpen: isCommentScetionOpen,\n                postComment: function postComment(text) {\n                  return _this._postComment(text);\n                },\n                getComments: function getComments() {\n                  return _this._getAllComments();\n                },\n                user: _this.props.user,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 17\n                }\n              }));\n            } else if (feed[\"_post\"]._contents[0].contentType === \"audio\") {\n              // contains only one audio file\n              return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 17\n                }\n              }, _this._getInteractionHeaderContent(feed)), /*#__PURE__*/React.createElement(Card, {\n                className: \"card-Feed mt-0\",\n                style: {\n                  margin: \"0 0 15 0\"\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(Link, {\n                to: \"/post/\".concat(_this.props.feed._post._id),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(CardHeader, {\n                onClick: _this._redirectToPostDetails,\n                style: {\n                  cursor: \"pointer\"\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"d-flex justify-content-start\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"personImgWrap\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 25\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                src: influencer && influencer.profilePicture ? influencer.profilePicture : config[\"defaultUserPicture\"],\n                alt: \"Profile Img\",\n                className: \"personImg\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 27\n                }\n              })), /*#__PURE__*/React.createElement(\"div\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 25\n                }\n              }, /*#__PURE__*/React.createElement(\"h4\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 27\n                }\n              }, influencer ? influencer.name.full : \"\"), influencer && influencer.username && influencer.username.length ? /*#__PURE__*/React.createElement(\"a\", {\n                className: \"profileID\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 31\n                }\n              }, \"@\", influencer.username || \"NA\") : \"NA\")), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"postTime-Feed\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 23\n                }\n              }, getPostedDateValue(feed[\"_post\"].startDate)))), /*#__PURE__*/React.createElement(CardBody, {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(CardText, {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 21\n                }\n              }, feed[\"_post\"].text && feed[\"_post\"].text.length ? feed[\"_post\"].text : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"my-2 px-2\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 664,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(\"audio\", {\n                style: {\n                  width: \"100%\"\n                },\n                ref: function ref(audio) {\n                  _this.audio = audio;\n                },\n                controls: true,\n                controlsList: \"nodownload\",\n                src: feed[\"_post\"]._contents[0]._content.url || \"\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 23\n                }\n              })), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"options-Feed\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(Button, {\n                color: \"ghost-info\",\n                disabled: true,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"i\", {\n                className: \"icon-heart\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 25\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 25\n                }\n              }, feed[\"_post\"].likes || 0)), /*#__PURE__*/React.createElement(Button, {\n                color: \"ghost-info\",\n                onClick: function onClick() {\n                  return _this._toogleCommentSection(feed[\"_post\"]);\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"i\", {\n                className: \"icon-bubble\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 25\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 25\n                }\n              }, feed[\"_post\"].comments || 0)), /*#__PURE__*/React.createElement(Button, {\n                color: \"ghost-info\",\n                onClick: function onClick() {\n                  return _this._openPostEarningsModal(feed[\"_post\"]);\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"i\", {\n                className: \"fa fa-dollar\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 697,\n                  columnNumber: 25\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                style: {\n                  verticalAlign: \"-1px\"\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 25\n                }\n              }, _this._calculatePostPrice(feed[\"_post\"]) || 0))), \" \")), shownComment && !isCommentScetionOpen ? /*#__PURE__*/React.createElement(\"div\", {\n                className: \"commentSection\",\n                onClick: function onClick() {\n                  return _this._toogleCommentSection(feed[\"_post\"]);\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"d-flex justify-content-start align-items-start\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                src: user && user.profilePicture ? user.profilePicture : config[\"defaultUserPicture\"],\n                alt: \"Profile Img\",\n                className: \"personImg-Comment\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 23\n                }\n              }), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"d-flex flex-column\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"comments-Post\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 25\n                }\n              }, /*#__PURE__*/React.createElement(\"p\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 27\n                }\n              }, shownComment[\"content\"] || \"\")), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"d-flex justify-content-start align-items-center mb-2\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 25\n                }\n              }, shownComment && shownComment.createdAt ? /*#__PURE__*/React.createElement(\"div\", {\n                className: \"commentTime ml-0\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 29\n                }\n              }, /*#__PURE__*/React.createElement(ReactTimeAgo, {\n                date: _this._convertIntoDate(shownComment.createdAt),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 31\n                }\n              })) : null)))) : null, /*#__PURE__*/React.createElement(PostCommentSection, {\n                feed: feed[\"_post\"],\n                ref: _this.postCommentRef,\n                comments: comments,\n                isOpen: isCommentScetionOpen,\n                postComment: function postComment(text) {\n                  return _this._postComment(text);\n                },\n                getComments: function getComments() {\n                  return _this._getAllComments();\n                },\n                user: _this.props.user,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 741,\n                  columnNumber: 17\n                }\n              }));\n            } else if (feed[\"_post\"]._contents[0].contentType === \"video\") {\n              // contains only one video\n              return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 756,\n                  columnNumber: 17\n                }\n              }, _this._getInteractionHeaderContent(feed)), /*#__PURE__*/React.createElement(Card, {\n                className: \"card-Feed mt-0\",\n                style: {\n                  margin: \"0 0 15 0\"\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 757,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(Link, {\n                to: \"/post/\".concat(_this.props.feed._post._id),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(CardHeader, {\n                onClick: _this._redirectToPostDetails,\n                style: {\n                  cursor: \"pointer\"\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"d-flex justify-content-start\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"personImgWrap\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 25\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                src: influencer && influencer.profilePicture ? influencer.profilePicture : config[\"defaultUserPicture\"],\n                alt: \"Profile Img\",\n                className: \"personImg\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 765,\n                  columnNumber: 27\n                }\n              })), /*#__PURE__*/React.createElement(\"div\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 775,\n                  columnNumber: 25\n                }\n              }, /*#__PURE__*/React.createElement(\"h4\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 776,\n                  columnNumber: 27\n                }\n              }, influencer ? influencer.name.full : \"\"), influencer && influencer.username && influencer.username.length ? /*#__PURE__*/React.createElement(\"a\", {\n                className: \"profileID\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 780,\n                  columnNumber: 31\n                }\n              }, \"@\", influencer.username || \"NA\") : \"NA\")), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"postTime-Feed\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 789,\n                  columnNumber: 23\n                }\n              }, getPostedDateValue(feed[\"_post\"].startDate)))), /*#__PURE__*/React.createElement(CardBody, {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 794,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(CardText, {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 795,\n                  columnNumber: 21\n                }\n              }, feed[\"_post\"].text && feed[\"_post\"].text.length ? feed[\"_post\"].text : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"embed-responsive embed-responsive-16by9 mediaVideoWrap-Feed\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(\"video\", {\n                className: \"embed-responsive-item\",\n                src: feed[\"_post\"]._contents[0]._content.url,\n                controls: true,\n                controlsList: \"nodownload\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 802,\n                  columnNumber: 23\n                }\n              })), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"options-Feed\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(Button, {\n                color: \"ghost-info\",\n                disabled: true,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 810,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"i\", {\n                className: \"icon-heart\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 811,\n                  columnNumber: 25\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 812,\n                  columnNumber: 25\n                }\n              }, feed[\"_post\"].likes || 0)), /*#__PURE__*/React.createElement(Button, {\n                color: \"ghost-info\",\n                onClick: function onClick() {\n                  return _this._toogleCommentSection(feed[\"_post\"]);\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 815,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"i\", {\n                className: \"icon-bubble\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 25\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 25\n                }\n              }, feed[\"_post\"].comments || 0)), /*#__PURE__*/React.createElement(Button, {\n                color: \"ghost-info\",\n                onClick: function onClick() {\n                  return _this._openPostEarningsModal(feed[\"_post\"]);\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 825,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"i\", {\n                className: \"fa fa-dollar\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 831,\n                  columnNumber: 25\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                style: {\n                  verticalAlign: \"-1px\"\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 832,\n                  columnNumber: 25\n                }\n              }, _this._calculatePostPrice(feed[\"_post\"]) || 0))), \" \")), shownComment && !isCommentScetionOpen ? /*#__PURE__*/React.createElement(\"div\", {\n                className: \"commentSection\",\n                onClick: function onClick() {\n                  return _this._toogleCommentSection(feed[\"_post\"]);\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 841,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"d-flex justify-content-start align-items-start\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 845,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                src: user && user.profilePicture ? user.profilePicture : config[\"defaultUserPicture\"],\n                alt: \"Profile Img\",\n                className: \"personImg-Comment\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 846,\n                  columnNumber: 23\n                }\n              }), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"d-flex flex-column\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 856,\n                  columnNumber: 23\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"comments-Post\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 857,\n                  columnNumber: 25\n                }\n              }, /*#__PURE__*/React.createElement(\"p\", {\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 858,\n                  columnNumber: 27\n                }\n              }, shownComment[\"content\"] || \"\")), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"d-flex justify-content-start align-items-center mb-2\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 860,\n                  columnNumber: 25\n                }\n              }, shownComment && shownComment.createdAt ? /*#__PURE__*/React.createElement(\"div\", {\n                className: \"commentTime ml-0\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 862,\n                  columnNumber: 29\n                }\n              }, /*#__PURE__*/React.createElement(ReactTimeAgo, {\n                date: _this._convertIntoDate(shownComment.createdAt),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 863,\n                  columnNumber: 31\n                }\n              })) : null)))) : null, /*#__PURE__*/React.createElement(PostCommentSection, {\n                ref: _this.postCommentRef,\n                comments: comments,\n                isOpen: isCommentScetionOpen,\n                postComment: function postComment(text) {\n                  return _this._postComment(text);\n                },\n                getComments: function getComments() {\n                  return _this._getAllComments();\n                },\n                feed: feed[\"_post\"],\n                user: _this.props.user,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 875,\n                  columnNumber: 17\n                }\n              }));\n            }\n          } else if (feed[\"_post\"]._contents && feed[\"_post\"]._contents.length === 0) {\n            // text only post\n            return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 894,\n                columnNumber: 15\n              }\n            }, _this._getInteractionHeaderContent(feed)), /*#__PURE__*/React.createElement(Card, {\n              className: \"card-Feed mt-0\",\n              style: {\n                margin: \"0 0 15 0\"\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(Link, {\n              to: \"/post/\".concat(_this.props.feed._post._id),\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(CardHeader, {\n              onClick: _this._redirectToPostDetails,\n              style: {\n                cursor: \"pointer\"\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"d-flex justify-content-start\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 901,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"personImgWrap\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 902,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: influencer && influencer.profilePicture ? influencer.profilePicture : config[\"defaultUserPicture\"],\n              alt: \"Profile Img\",\n              className: \"personImg\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 25\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 913,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"h4\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 914,\n                columnNumber: 25\n              }\n            }, influencer ? influencer.name.full : \"\"), influencer && influencer.username && influencer.username.length ? /*#__PURE__*/React.createElement(\"a\", {\n              className: \"profileID\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 29\n              }\n            }, \"@\", influencer.username || \"NA\") : \"NA\")), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"postTime-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 927,\n                columnNumber: 21\n              }\n            }, getPostedDateValue(feed[\"_post\"].startDate)))), /*#__PURE__*/React.createElement(CardBody, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 932,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(CardText, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 19\n              }\n            }, feed[\"_post\"].text && feed[\"_post\"].text.length ? feed[\"_post\"].text : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"options-Feed\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              disabled: true,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 942,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"icon-heart\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 23\n              }\n            }, feed[\"_post\"].likes || 0)), /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              onClick: function onClick() {\n                return _this._toogleCommentSection(feed[\"_post\"]);\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 947,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"icon-bubble\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 951,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 952,\n                columnNumber: 23\n              }\n            }, feed[\"_post\"].comments || 0)), /*#__PURE__*/React.createElement(Button, {\n              color: \"ghost-info\",\n              onClick: function onClick() {\n                return _this._openPostEarningsModal(feed[\"_post\"]);\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 955,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"i\", {\n              className: \"fa fa-dollar\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 23\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                verticalAlign: \"-1px\"\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 960,\n                columnNumber: 23\n              }\n            }, _this._calculatePostPrice(feed[\"_post\"]) || 0))), \" \")), shownComment && !isCommentScetionOpen ? /*#__PURE__*/React.createElement(\"div\", {\n              className: \"commentSection\",\n              onClick: function onClick() {\n                return _this._toogleCommentSection(feed[\"_post\"]);\n              },\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"d-flex justify-content-start align-items-start\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: user && user.profilePicture ? user.profilePicture : config[\"defaultUserPicture\"],\n              alt: \"Profile Img\",\n              className: \"personImg-Comment\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 974,\n                columnNumber: 21\n              }\n            }), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"d-flex flex-column\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"comments-Post\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 986,\n                columnNumber: 25\n              }\n            }, shownComment[\"content\"] || \"\")), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"d-flex justify-content-start align-items-center mb-2\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 988,\n                columnNumber: 23\n              }\n            }, shownComment && shownComment.createdAt ? /*#__PURE__*/React.createElement(\"div\", {\n              className: \"commentTime ml-0\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 27\n              }\n            }, /*#__PURE__*/React.createElement(ReactTimeAgo, {\n              date: _this._convertIntoDate(shownComment.createdAt),\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 991,\n                columnNumber: 29\n              }\n            })) : null)))) : null, /*#__PURE__*/React.createElement(PostCommentSection, {\n              feed: feed[\"_post\"],\n              ref: _this.postCommentRef,\n              comments: comments,\n              isOpen: isCommentScetionOpen,\n              postComment: function postComment(text) {\n                return _this._postComment(text);\n              },\n              getComments: function getComments() {\n                return _this._getAllComments();\n              },\n              user: _this.props.user,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1003,\n                columnNumber: 15\n              }\n            }));\n          }\n        } else if (feed[\"_post\"].category && feed[\"_post\"].category === \"poll\") {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1018,\n              columnNumber: 13\n            }\n          }, _this._getInteractionHeaderContent(feed)), /*#__PURE__*/React.createElement(Card, {\n            className: \"card-Feed mt-0\",\n            style: {\n              margin: \"0 0 15 0\"\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: \"/post/\".concat(_this.props.feed._post._id),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(CardHeader, {\n            onClick: _this._redirectToPostDetails,\n            style: {\n              cursor: \"pointer\"\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex justify-content-start\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"personImgWrap\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: influencer && influencer.profilePicture ? influencer.profilePicture : config[\"defaultUserPicture\"],\n            alt: \"Profile Img\",\n            className: \"personImg\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1027,\n              columnNumber: 23\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"h4\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 23\n            }\n          }, influencer ? influencer.name.full : \"\"), influencer && influencer.username && influencer.username.length ? /*#__PURE__*/React.createElement(\"a\", {\n            className: \"profileID\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1042,\n              columnNumber: 27\n            }\n          }, \"@\", influencer.username || \"NA\") : \"NA\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"postTime-Feed\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 19\n            }\n          }, getPostedDateValue(feed[\"_post\"].startDate)))), /*#__PURE__*/React.createElement(CardBody, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(CardText, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 17\n            }\n          }, feed[\"_post\"].description && feed[\"_post\"].description.length ? feed[\"_post\"].description : null, feed[\"_post\"].description && feed[\"_post\"].description.length ? /*#__PURE__*/React.createElement(\"br\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 23\n            }\n          }) : null, feed[\"_post\"].text && feed[\"_post\"].text.length ? feed[\"_post\"].text : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-block mb-2 pollOptionWrap\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1070,\n              columnNumber: 17\n            }\n          }, feed[\"_post\"].options && feed[\"_post\"].options.length ? feed[\"_post\"].options.map(function (option, optionIndex) {\n            return /*#__PURE__*/React.createElement(PollOption, {\n              feed: feed[\"_post\"],\n              option: option,\n              key: optionIndex,\n              index: optionIndex,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1073,\n                columnNumber: 23\n              }\n            });\n          }) : null), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"options-Feed\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1082,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            color: \"ghost-info\",\n            disabled: true,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"icon-heart\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 21\n            }\n          }, feed[\"_post\"].likes || 0)), /*#__PURE__*/React.createElement(Button, {\n            color: \"ghost-info\",\n            onClick: function onClick() {\n              return _this._toogleCommentSection(feed[\"_post\"]);\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1088,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"icon-bubble\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 21\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1093,\n              columnNumber: 21\n            }\n          }, feed[\"_post\"].comments || 0))), \" \")), shownComment && !isCommentScetionOpen ? /*#__PURE__*/React.createElement(\"div\", {\n            className: \"commentSection\",\n            onClick: function onClick() {\n              return _this._toogleCommentSection(feed[\"_post\"]);\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex justify-content-start align-items-start\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: user && user.profilePicture ? user.profilePicture : config[\"defaultUserPicture\"],\n            alt: \"Profile Img\",\n            className: \"personImg-Comment\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1112,\n              columnNumber: 19\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex flex-column\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1122,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"comments-Post\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 23\n            }\n          }, shownComment[\"content\"] || \"\")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex justify-content-start align-items-center mb-2\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 21\n            }\n          }, shownComment && shownComment.createdAt ? /*#__PURE__*/React.createElement(\"div\", {\n            className: \"commentTime ml-0\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1128,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(ReactTimeAgo, {\n            date: _this._convertIntoDate(shownComment.createdAt),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1129,\n              columnNumber: 27\n            }\n          })) : null)))) : null, /*#__PURE__*/React.createElement(PostCommentSection, {\n            feed: feed[\"_post\"],\n            ref: _this.postCommentRef,\n            comments: comments,\n            isOpen: isCommentScetionOpen,\n            postComment: function postComment(text) {\n              return _this._postComment(text);\n            },\n            getComments: function getComments() {\n              return _this._getAllComments();\n            },\n            user: _this.props.user,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 13\n            }\n          }));\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1151,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n\n    _this.next = _this.next.bind(_assertThisInitialized(_this));\n    _this.previous = _this.previous.bind(_assertThisInitialized(_this));\n    _this.goToIndex = _this.goToIndex.bind(_assertThisInitialized(_this));\n    _this.audio = React.createRef();\n    _this.postCommentRef = React.createRef();\n    JavascriptTimeAgo.locale(en);\n    return _this;\n  }\n\n  _createClass(SubscriberFeedViewer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var decodedUserDetails = this.state.decodedUserDetails; // decodedUserDetails = decodeToken(this.props.userData.token);\n\n      this.setState({\n        decodedUserDetails: decodedUserDetails\n      });\n\n      if (this.audio !== null) {\n        var audio = Object.assign({}, this.audio);\n\n        audio.onloadedmetadata = function () {\n          _this2.setState({\n            duration: _this2.formatTime(audio.duration.toFixed(0))\n          });\n        };\n      }\n    }\n  }, {\n    key: \"formatTime\",\n    value: function formatTime(seconds) {\n      var h = Math.floor(seconds / 3600);\n      var m = Math.floor(seconds % 3600 / 60);\n      var s = seconds % 60;\n      return [h, m > 9 ? m : h ? \"0\" + m : m || \"0\", s > 9 ? s : \"0\" + s].filter(function (a) {\n        return a;\n      }).join(\":\");\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var _deepClone8 = deepClone(this.props),\n          feed = _deepClone8.feed;\n\n      if (this.animating) return;\n      var nextIndex = this.state.activeIndex === feed[\"_post\"]._contents.length - 1 ? 0 : this.state.activeIndex + 1;\n      this.setState({\n        activeIndex: nextIndex\n      });\n    }\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      var _deepClone9 = deepClone(this.props),\n          feed = _deepClone9.feed;\n\n      if (this.animating) return;\n      var nextIndex = this.state.activeIndex === 0 ? feed[\"_post\"]._contents.length - 1 : this.state.activeIndex - 1;\n      this.setState({\n        activeIndex: nextIndex\n      });\n    }\n  }, {\n    key: \"goToIndex\",\n    value: function goToIndex(newIndex) {\n      if (this.animating) return;\n      this.setState({\n        activeIndex: newIndex\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _deepClone10 = deepClone(this.state),\n          isPrompt = _deepClone10.isPrompt,\n          isPostEarningsModalOpen = _deepClone10.isPostEarningsModalOpen;\n\n      var _deepClone11 = deepClone(this.props),\n          feed = _deepClone11.feed;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this._renderPreview(), \" \", /*#__PURE__*/React.createElement(PostEarningsModal, {\n        isVisible: isPostEarningsModalOpen,\n        feed: feed[\"_post\"],\n        close: this._closePostEarningsModal,\n        tipArr: this._fetchTipTransactionList(),\n        ppvArr: this._fetchPPVTransactionList(),\n        isSubscriber: true,\n        user: this.props.user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SubscriberFeedViewer;\n}(Component);\n\nexport default SubscriberFeedViewer;","map":{"version":3,"sources":["/home/sanjay/Desktop/LS/React/Socialaffil-admin-UI/src/components/subscriber-feed-viewer.jsx"],"names":["JavascriptTimeAgo","en","React","Component","ReactTimeAgo","Button","Card","CardBody","CardHeader","CardText","Carousel","CarouselControl","CarouselIndicators","CarouselItem","Label","Link","PollOption","PostCommentSection","PostEarningsModal","config","deepClone","getPostedDateValue","getComments","SubscriberFeedViewer","props","state","comments","dropdownOpen","activeIndex","duration","decodedUserDetails","custom","isCommentScetionOpen","isPrompt","isPostEarningsModalOpen","now","_convertIntoDate","startDate","Date","_getAllComments","id","feed","Promise","resolve","reject","then","response","hasOwnProperty","setState","catch","err","_toogleCommentSection","post","_pinToProfile","isPinned","pinToProfile","_id","_postComment","comment","_getInteractionHeaderContent","_user","name","full","_transaction","amount","_renderCarousel","slides","_contents","map","item","_content","onExiting","onExited","contentType","url","_onPromptSuccess","deletePost","_onPromptDismiss","_deletePost","_calculatePostPrice","_transactions","length","arr","filter","each","paymentType","totalPrice","reduce","acc","_closePostEarningsModal","_openPostEarningsModal","_fetchTipTransactionList","_post","tips","_fetchPPVTransactionList","_redirectToPostDetails","history","push","_renderPreview","user","influencer","_influencer","shownComment","_interaction","category","margin","cursor","profilePicture","username","text","next","previous","goToIndex","likes","verticalAlign","createdAt","postCommentRef","width","audio","description","options","option","optionIndex","bind","createRef","locale","Object","assign","onloadedmetadata","formatTime","toFixed","seconds","h","Math","floor","m","s","a","join","animating","nextIndex","newIndex"],"mappings":"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","sourcesContent":["import JavascriptTimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nimport React, { Component } from \"react\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardText,\n  Carousel,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselItem,\n  Label\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport PollOption from \"../components/poll-option-component\";\nimport PostCommentSection from \"../components/post-comment-section\";\nimport PostEarningsModal from \"../components/post-earnings-modal\";\nimport config from \"../config\";\nimport { deepClone, getPostedDateValue } from \"../helper-methods\";\nimport { getComments } from \"../http/http-calls\";\n\nclass SubscriberFeedViewer extends Component {\n  state = {\n    comments: [],\n    dropdownOpen: false,\n    activeIndex: 0,\n    duration: 0,\n    decodedUserDetails: null,\n    custom: [false],\n    isCommentScetionOpen: false,\n    isPrompt: false,\n    isPostEarningsModalOpen: false\n  };\n\n  now = 60;\n\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n    this.audio = React.createRef();\n    this.postCommentRef = React.createRef();\n    JavascriptTimeAgo.locale(en);\n  }\n\n  componentDidMount() {\n    let { decodedUserDetails } = this.state;\n    // decodedUserDetails = decodeToken(this.props.userData.token);\n    this.setState({ decodedUserDetails });\n    if (this.audio !== null) {\n      const audio = Object.assign({}, this.audio);\n      audio.onloadedmetadata = () => {\n        this.setState({\n          duration: this.formatTime(audio.duration.toFixed(0))\n        });\n      };\n    }\n  }\n\n  formatTime(seconds) {\n    const h = Math.floor(seconds / 3600);\n    const m = Math.floor((seconds % 3600) / 60);\n    const s = seconds % 60;\n    return [h, m > 9 ? m : h ? \"0\" + m : m || \"0\", s > 9 ? s : \"0\" + s]\n      .filter(a => a)\n      .join(\":\");\n  }\n\n  _convertIntoDate = startDate => {\n    return new Date(startDate);\n  };\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  next() {\n    const { feed } = deepClone(this.props);\n    if (this.animating) return;\n    const nextIndex =\n      this.state.activeIndex === feed[\"_post\"]._contents.length - 1\n        ? 0\n        : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    const { feed } = deepClone(this.props);\n\n    if (this.animating) return;\n    const nextIndex =\n      this.state.activeIndex === 0\n        ? feed[\"_post\"]._contents.length - 1\n        : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  _getAllComments = id => {\n    const { feed } = deepClone(this.props);\n    return new Promise((resolve, reject) => {\n      getComments(id)\n        .then(response => {\n          if (response && response.hasOwnProperty(\"comments\")) {\n            this.setState({ comments: response[\"comments\"] }, () => {\n              resolve();\n            });\n          }\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  };\n\n  _toogleCommentSection = post => {\n    const { isCommentScetionOpen } = this.state;\n    if (!isCommentScetionOpen) {\n      this._getAllComments(post[\"id\"]);\n    }\n    this.setState({ isCommentScetionOpen: !isCommentScetionOpen });\n  };\n\n  _pinToProfile = isPinned => {\n    const { feed } = deepClone(this.props);\n\n    this.props.pinToProfile(feed[\"_post\"]._id, !isPinned);\n  };\n\n  _postComment = (comment, id = null) => {\n    // if (id === null) {\n    //   postCommentOnFeed({\n    //     category: \"comment\",\n    //     content: comment,\n    //     id: feed['_post']._id\n    //   })\n    //     .then(res => {\n    //       this.postCommentRef.current._clearComment();\n    //       this._getAllComments();\n    //       this.props.getAllPosts();\n    //       showToast(\"Commented successfully\", \"success\");\n    //     })\n    //     .catch(err => {\n    //       showToast(\n    //         err.reason && err.reason.length\n    //           ? err.reason\n    //           : \"Server error. Try again after sometime.\",\n    //         \"error\"\n    //       );\n    //     });\n    // } else {\n    //   // edit comment\n    // }\n  };\n\n  _getInteractionHeaderContent = feed => {\n    if (feed[\"activityType\"] === \"like\") {\n      return feed._user.name.full + \" liked this post\";\n    } else if (feed[\"activityType\"] === \"comment\") {\n      return feed._user.name.full + \" commented on this post\";\n    } else if (\n      feed[\"activityType\"] === \"ppv\" ||\n      feed[\"activityType\"] === \"tips\"\n    ) {\n      return (\n        feed._user.name.full +\n        \" \" +\n        (feed[\"activityType\"] === \"ppv\" ? \"paid\" : \"tipped\") +\n        \" $\" +\n        (feed &&\n          feed.hasOwnProperty(\"_transaction\") &&\n          feed._transaction.hasOwnProperty(\"amount\")\n          ? feed._transaction.amount\n          : 0) +\n        \" for this post\"\n      );\n    }\n    // else if (feed[\"activityType\"] === \"tips\") {\n    //   return (\n    //     feed._user.name.full +\n    //     \" tipped $\" +\n    //     (feed &&\n    //     feed.hasOwnProperty(\"_transaction\") &&\n    //     feed._transaction.hasOwnProperty(\"amount\")\n    //       ? feed._transaction.amount\n    //       : 0) +\n    //     \" for this post\"\n    //   );\n    // }\n    return null;\n  };\n\n  _renderCarousel = () => {\n    const { feed } = deepClone(this.props);\n\n    const slides = feed[\"_post\"]._contents.map(item => {\n      item = item._content;\n      return (\n        <CarouselItem\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          key={item._id}\n        >\n          {item.contentType === \"video\" ? (\n            <video\n              className=\"d-block w-100\"\n              src={item.url}\n              controlsList=\"nodownload\"\n              controls\n            />\n          ) : (\n              <img\n                className=\"d-block w-100\"\n                src={item.url}\n                alt={item.contentType}\n              />\n            )}\n        </CarouselItem>\n      );\n    });\n    return slides;\n    // return (\n    //     <>\n    //     {\n    //         items.map((item) => {\n    //             return (\n    //                 <CarouselItem onExiting={this.onExiting} onExited={this.onExited} key={item.src}>\n    //                     <img className=\"d-block w-100\" src={item.src} alt={item.altText} />\n    //                 </CarouselItem>\n    //             );\n    //         })\n    //     }\n    //     </>\n    // )\n  };\n\n  _onPromptSuccess = () => {\n    this.props.deletePost();\n    this.setState({ isPrompt: false });\n  };\n\n  _onPromptDismiss = () => {\n    this.setState({ isPrompt: false });\n  };\n\n  _deletePost = () => {\n    this.setState({ isPrompt: true });\n  };\n\n  _calculatePostPrice = feed => {\n    if (feed._transactions && feed._transactions.length) {\n      let arr = feed._transactions.filter(each => {\n        return each.paymentType === \"post\" || each.paymentType === \"tips\";\n      });\n      let totalPrice = arr.reduce((acc, each) => {\n        return (acc = acc + each.amount);\n      }, 0);\n      return totalPrice;\n    }\n    return 0;\n  };\n\n  _closePostEarningsModal = () => {\n    this.setState({ isPostEarningsModalOpen: false });\n  };\n\n  _openPostEarningsModal = feed => {\n    this.setState({ isPostEarningsModalOpen: true });\n  };\n\n  _fetchTipTransactionList = () => {\n    const { feed } = deepClone(this.props);\n    if (\n      feed.hasOwnProperty(\"_post\") &&\n      feed._post.hasOwnProperty(\"_transactions\") &&\n      feed._post._transactions.length\n    ) {\n      let tips = feed._post._transactions.filter(each => {\n        return each.paymentType === \"tips\";\n      });\n      return tips;\n    }\n    return [];\n  };\n\n  _fetchPPVTransactionList = () => {\n    const { feed } = deepClone(this.props);\n\n    if (\n      feed.hasOwnProperty(\"_post\") &&\n      feed._post.hasOwnProperty(\"_transactions\") &&\n      feed._post._transactions.length\n    ) {\n      let arr = feed._post._transactions.filter(each => {\n        return each.paymentType === \"post\";\n      });\n      return arr;\n    }\n    return [];\n  };\n\n  _redirectToPostDetails = () => {\n    this.props.history.push(\"/post/\" + this.props.feed._post._id);\n  };\n\n  _renderPreview = () => {\n    const {\n      activeIndex,\n      decodedUserDetails,\n      isCommentScetionOpen,\n      comments,\n      isPrompt\n    } = deepClone(this.state);\n    const { user, feed } = deepClone(this.props);\n    const influencer =\n      feed && feed.hasOwnProperty(\"_influencer\") ? feed._influencer : null;\n    const shownComment =\n      feed &&\n        feed.hasOwnProperty(\"_interaction\") &&\n        feed._interaction &&\n        feed._interaction.hasOwnProperty(\"category\") &&\n        feed._interaction.category === \"comment\"\n        ? feed._interaction\n        : null;\n\n    if (!feed.hasOwnProperty(\"_post\")) {\n      return <div />;\n    } else {\n      if (feed[\"_post\"].category && feed[\"_post\"].category === \"general\") {\n        if (feed[\"_post\"]._contents && feed[\"_post\"]._contents.length > 1) {\n          return (\n            <>\n              <Label>{this._getInteractionHeaderContent(feed)}</Label>\n              <Card className=\"card-Feed mt-0\" style={{ margin: \"0 0 15 0\" }}>\n                <Link to={`/post/${this.props.feed._post._id}`}>\n                  <CardHeader\n                    onClick={this._redirectToPostDetails}\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    <div className=\"d-flex justify-content-start\">\n                      <div className=\"personImgWrap\">\n                        <img\n                          src={\n                            influencer && influencer.profilePicture\n                              ? influencer.profilePicture\n                              : config[\"defaultUserPicture\"]\n                          }\n                          alt=\"Profile Img\"\n                          className=\"personImg\"\n                        />\n                      </div>\n                      <div>\n                        <h4>{influencer ? influencer.name.full : \"\"}</h4>\n                        {influencer ? (\n                          <a className=\"profileID\">\n                            @{influencer.username || \"NA\"}\n                          </a>\n                        ) : (\n                            \"NA\"\n                          )}\n                      </div>\n                    </div>\n                    {/* post time */}\n                    <div className=\"postTime-Feed\">\n                      {getPostedDateValue(feed[\"_post\"].startDate)}\n                    </div>\n                  </CardHeader>\n                </Link>\n                <CardBody>\n                  <CardText>{feed[\"_post\"] && feed[\"_post\"].text}</CardText>\n                  <div className=\"mediaPhotoWrap-Feed\">\n                    {/* carousel */}\n                    <Carousel\n                      activeIndex={activeIndex}\n                      next={this.next}\n                      previous={this.previous}\n                      ride=\"carousel\"\n                    >\n                      <CarouselIndicators\n                        items={feed[\"_post\"]._contents}\n                        activeIndex={activeIndex}\n                        onClickHandler={this.goToIndex}\n                      />\n                      {this._renderCarousel()}\n                      <CarouselControl\n                        direction=\"prev\"\n                        directionText=\"Previous\"\n                        onClickHandler={this.previous}\n                      />\n                      <CarouselControl\n                        direction=\"next\"\n                        directionText=\"Next\"\n                        onClickHandler={this.next}\n                      />\n                    </Carousel>\n                  </div>\n                  <div className=\"options-Feed\">\n                    <Button color=\"ghost-info\" disabled>\n                      <i className=\"icon-heart\"></i>\n                      <span>{feed[\"_post\"].likes || 0}</span>\n                    </Button>\n\n                    <Button\n                      color=\"ghost-info\"\n                      onClick={() => this._toogleCommentSection(feed[\"_post\"])}\n                      aria-controls=\"exampleAccordion1\"\n                    >\n                      <i className=\"icon-bubble\"></i>\n                      <span>{feed[\"_post\"].comments || 0}</span>\n                    </Button>\n\n                    <Button\n                      color=\"ghost-info\"\n                      onClick={() => this._openPostEarningsModal(feed[\"_post\"])}\n                    >\n                      <i className=\"fa fa-dollar\"></i>\n                      <span style={{ verticalAlign: \"-1px\" }}>\n                        {this._calculatePostPrice(feed[\"_post\"]) || 0}\n                      </span>\n                    </Button>\n                  </div>{\" \"}\n                  {/* options-Feed */}\n                </CardBody>\n              </Card>\n              {shownComment && !isCommentScetionOpen ? (\n                <div\n                  className=\"commentSection\"\n                  onClick={() => this._toogleCommentSection(feed[\"_post\"])}\n                >\n                  <div className=\"d-flex justify-content-start align-items-start\">\n                    <img\n                      src={\n                        user && user.profilePicture\n                          ? user.profilePicture\n                          : config[\"defaultUserPicture\"]\n                      }\n                      alt=\"Profile Img\"\n                      className=\"personImg-Comment\"\n                    />\n\n                    <div className=\"d-flex flex-column\">\n                      <div className=\"comments-Post\">\n                        <p>{shownComment[\"content\"] || \"\"}</p>\n                      </div>\n                      <div className=\"d-flex justify-content-start align-items-center mb-2\">\n                        {shownComment && shownComment.createdAt ? (\n                          <div className=\"commentTime ml-0\">\n                            <ReactTimeAgo\n                              date={this._convertIntoDate(\n                                shownComment.createdAt\n                              )}\n                            />\n                          </div>\n                        ) : null}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n              <PostCommentSection\n                feed={feed[\"_post\"]}\n                ref={this.postCommentRef}\n                comments={comments}\n                isOpen={isCommentScetionOpen}\n                getComments={() => this._getAllComments()}\n                user={this.props.user}\n              />\n            </>\n          );\n        } else if (\n          feed[\"_post\"]._contents &&\n          feed[\"_post\"]._contents.length === 1\n        ) {\n          if (feed[\"_post\"]._contents[0]._content.contentType === \"image\") {\n            // contains only one image\n            return (\n              <>\n                <Label>{this._getInteractionHeaderContent(feed)}</Label>\n                <Card className=\"card-Feed mt-0\" style={{ margin: \"0 0 15 0\" }}>\n                  <Link to={`/post/${this.props.feed._post._id}`}>\n                    <CardHeader\n                      onClick={this._redirectToPostDetails}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <div className=\"d-flex justify-content-start\">\n                        <div className=\"personImgWrap\">\n                          <img\n                            src={\n                              influencer && influencer.profilePicture\n                                ? influencer.profilePicture\n                                : config[\"defaultUserPicture\"]\n                            }\n                            alt=\"Profile Img\"\n                            className=\"personImg\"\n                          />\n                        </div>\n                        <div>\n                          <h4>{influencer ? influencer.name.full : \"\"}</h4>\n                          {influencer &&\n                            influencer.username &&\n                            influencer.username.length ? (\n                              <a className=\"profileID\">\n                                @{influencer.username || \"NA\"}\n                              </a>\n                            ) : (\n                              \"NA\"\n                            )}\n                        </div>\n                      </div>\n                      {/* post time */}\n                      <div className=\"postTime-Feed\">\n                        {getPostedDateValue(feed[\"_post\"].startDate)}\n                      </div>\n                    </CardHeader>\n                  </Link>\n                  <CardBody>\n                    <CardText>\n                      {feed[\"_post\"].text && feed[\"_post\"].text.length\n                        ? feed[\"_post\"].text\n                        : \"\"}\n                    </CardText>\n                    <div className=\"mediaPhotoWrap-Feed\">\n                      <img\n                        className=\"mediaPhoto-Feed\"\n                        src={feed[\"_post\"]._contents[0]._content.url}\n                        alt=\"Feed Img\"\n                      />\n                    </div>\n                    <div className=\"options-Feed\">\n                      <Button color=\"ghost-info\" disabled>\n                        <i className=\"icon-heart\"></i>\n                        <span>{feed[\"_post\"].likes || 0}</span>\n                      </Button>\n\n                      <Button\n                        color=\"ghost-info\"\n                        onClick={() =>\n                          this._toogleCommentSection(feed[\"_post\"])\n                        }\n                      >\n                        <i className=\"icon-bubble\"></i>\n                        <span>{feed[\"_post\"].comments || 0}</span>\n                      </Button>\n\n                      <Button\n                        color=\"ghost-info\"\n                        onClick={() =>\n                          this._openPostEarningsModal(feed[\"_post\"])\n                        }\n                      >\n                        <i className=\"fa fa-dollar\"></i>\n                        <span style={{ verticalAlign: \"-1px\" }}>\n                          {this._calculatePostPrice(feed[\"_post\"]) || 0}\n                        </span>\n                      </Button>\n                    </div>{\" \"}\n                    {/* options-Feed */}\n                  </CardBody>\n                </Card>\n                {shownComment && !isCommentScetionOpen ? (\n                  <div\n                    className=\"commentSection\"\n                    onClick={() => this._toogleCommentSection(feed[\"_post\"])}\n                  >\n                    <div className=\"d-flex justify-content-start align-items-start\">\n                      <img\n                        src={\n                          user && user.profilePicture\n                            ? user.profilePicture\n                            : config[\"defaultUserPicture\"]\n                        }\n                        alt=\"Profile Img\"\n                        className=\"personImg-Comment\"\n                      />\n\n                      <div className=\"d-flex flex-column\">\n                        <div className=\"comments-Post\">\n                          <p>{shownComment[\"content\"] || \"\"}</p>\n                        </div>\n                        <div className=\"d-flex justify-content-start align-items-center mb-2\">\n                          {shownComment && shownComment.createdAt ? (\n                            <div className=\"commentTime ml-0\">\n                              <ReactTimeAgo\n                                date={this._convertIntoDate(\n                                  shownComment.createdAt\n                                )}\n                              />\n                            </div>\n                          ) : null}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ) : null}\n                <PostCommentSection\n                  feed={feed[\"_post\"]}\n                  ref={this.postCommentRef}\n                  comments={comments}\n                  isOpen={isCommentScetionOpen}\n                  postComment={text => this._postComment(text)}\n                  getComments={() => this._getAllComments()}\n                  user={this.props.user}\n                />\n              </>\n            );\n          } else if (feed[\"_post\"]._contents[0].contentType === \"audio\") {\n            // contains only one audio file\n            return (\n              <>\n                <Label>{this._getInteractionHeaderContent(feed)}</Label>\n                <Card className=\"card-Feed mt-0\" style={{ margin: \"0 0 15 0\" }}>\n                  <Link to={`/post/${this.props.feed._post._id}`}>\n                    <CardHeader\n                      onClick={this._redirectToPostDetails}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <div className=\"d-flex justify-content-start\">\n                        <div className=\"personImgWrap\">\n                          <img\n                            src={\n                              influencer && influencer.profilePicture\n                                ? influencer.profilePicture\n                                : config[\"defaultUserPicture\"]\n                            }\n                            alt=\"Profile Img\"\n                            className=\"personImg\"\n                          />\n                        </div>\n                        <div>\n                          <h4>{influencer ? influencer.name.full : \"\"}</h4>\n                          {influencer &&\n                            influencer.username &&\n                            influencer.username.length ? (\n                              <a className=\"profileID\">\n                                @{influencer.username || \"NA\"}\n                              </a>\n                            ) : (\n                              \"NA\"\n                            )}\n                        </div>\n                      </div>\n                      {/* post time */}\n                      <div className=\"postTime-Feed\">\n                        {getPostedDateValue(feed[\"_post\"].startDate)}\n                      </div>\n                    </CardHeader>\n                  </Link>\n                  <CardBody>\n                    <CardText>\n                      {feed[\"_post\"].text && feed[\"_post\"].text.length\n                        ? feed[\"_post\"].text\n                        : \"\"}\n                    </CardText>\n                    <div className=\"my-2 px-2\">\n                      <audio\n                        style={{ width: \"100%\" }}\n                        ref={audio => {\n                          this.audio = audio;\n                        }}\n                        controls\n                        controlsList=\"nodownload\"\n                        src={feed[\"_post\"]._contents[0]._content.url || \"\"}\n                      ></audio>\n                    </div>\n                    <div className=\"options-Feed\">\n                      <Button color=\"ghost-info\" disabled>\n                        <i className=\"icon-heart\"></i>\n                        <span>{feed[\"_post\"].likes || 0}</span>\n                      </Button>\n\n                      <Button\n                        color=\"ghost-info\"\n                        onClick={() =>\n                          this._toogleCommentSection(feed[\"_post\"])\n                        }\n                      >\n                        <i className=\"icon-bubble\"></i>\n                        <span>{feed[\"_post\"].comments || 0}</span>\n                      </Button>\n\n                      <Button\n                        color=\"ghost-info\"\n                        onClick={() =>\n                          this._openPostEarningsModal(feed[\"_post\"])\n                        }\n                      >\n                        <i className=\"fa fa-dollar\"></i>\n                        <span style={{ verticalAlign: \"-1px\" }}>\n                          {this._calculatePostPrice(feed[\"_post\"]) || 0}\n                        </span>\n                      </Button>\n                    </div>{\" \"}\n                    {/* options-Feed */}\n                  </CardBody>\n                </Card>\n                {shownComment && !isCommentScetionOpen ? (\n                  <div\n                    className=\"commentSection\"\n                    onClick={() => this._toogleCommentSection(feed[\"_post\"])}\n                  >\n                    <div className=\"d-flex justify-content-start align-items-start\">\n                      <img\n                        src={\n                          user && user.profilePicture\n                            ? user.profilePicture\n                            : config[\"defaultUserPicture\"]\n                        }\n                        alt=\"Profile Img\"\n                        className=\"personImg-Comment\"\n                      />\n\n                      <div className=\"d-flex flex-column\">\n                        <div className=\"comments-Post\">\n                          <p>{shownComment[\"content\"] || \"\"}</p>\n                        </div>\n                        <div className=\"d-flex justify-content-start align-items-center mb-2\">\n                          {shownComment && shownComment.createdAt ? (\n                            <div className=\"commentTime ml-0\">\n                              <ReactTimeAgo\n                                date={this._convertIntoDate(\n                                  shownComment.createdAt\n                                )}\n                              />\n                            </div>\n                          ) : null}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ) : null}\n                <PostCommentSection\n                  feed={feed[\"_post\"]}\n                  ref={this.postCommentRef}\n                  comments={comments}\n                  isOpen={isCommentScetionOpen}\n                  postComment={text => this._postComment(text)}\n                  getComments={() => this._getAllComments()}\n                  user={this.props.user}\n                />\n              </>\n            );\n          } else if (feed[\"_post\"]._contents[0].contentType === \"video\") {\n            // contains only one video\n            return (\n              <>\n                <Label>{this._getInteractionHeaderContent(feed)}</Label>\n                <Card className=\"card-Feed mt-0\" style={{ margin: \"0 0 15 0\" }}>\n                  <Link to={`/post/${this.props.feed._post._id}`}>\n                    <CardHeader\n                      onClick={this._redirectToPostDetails}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <div className=\"d-flex justify-content-start\">\n                        <div className=\"personImgWrap\">\n                          <img\n                            src={\n                              influencer && influencer.profilePicture\n                                ? influencer.profilePicture\n                                : config[\"defaultUserPicture\"]\n                            }\n                            alt=\"Profile Img\"\n                            className=\"personImg\"\n                          />\n                        </div>\n                        <div>\n                          <h4>{influencer ? influencer.name.full : \"\"}</h4>\n                          {influencer &&\n                            influencer.username &&\n                            influencer.username.length ? (\n                              <a className=\"profileID\">\n                                @{influencer.username || \"NA\"}\n                              </a>\n                            ) : (\n                              \"NA\"\n                            )}\n                        </div>\n                      </div>\n                      {/* post time */}\n                      <div className=\"postTime-Feed\">\n                        {getPostedDateValue(feed[\"_post\"].startDate)}\n                      </div>\n                    </CardHeader>\n                  </Link>\n                  <CardBody>\n                    <CardText>\n                      {feed[\"_post\"].text && feed[\"_post\"].text.length\n                        ? feed[\"_post\"].text\n                        : \"\"}\n                    </CardText>\n                    <div className=\"embed-responsive embed-responsive-16by9 mediaVideoWrap-Feed\">\n                      {/* <iframe className=\"embed-responsive-item\" src=\"https://www.youtube.com/embed/zpOULjyy-n8?rel=0\" allowfullscreen></iframe> */}\n                      <video\n                        className=\"embed-responsive-item\"\n                        src={feed[\"_post\"]._contents[0]._content.url}\n                        controls\n                        controlsList=\"nodownload\"\n                      ></video>\n                    </div>\n                    <div className=\"options-Feed\">\n                      <Button color=\"ghost-info\" disabled>\n                        <i className=\"icon-heart\"></i>\n                        <span>{feed[\"_post\"].likes || 0}</span>\n                      </Button>\n\n                      <Button\n                        color=\"ghost-info\"\n                        onClick={() =>\n                          this._toogleCommentSection(feed[\"_post\"])\n                        }\n                      >\n                        <i className=\"icon-bubble\"></i>\n                        <span>{feed[\"_post\"].comments || 0}</span>\n                      </Button>\n\n                      <Button\n                        color=\"ghost-info\"\n                        onClick={() =>\n                          this._openPostEarningsModal(feed[\"_post\"])\n                        }\n                      >\n                        <i className=\"fa fa-dollar\"></i>\n                        <span style={{ verticalAlign: \"-1px\" }}>\n                          {this._calculatePostPrice(feed[\"_post\"]) || 0}\n                        </span>\n                      </Button>\n                    </div>{\" \"}\n                    {/* options-Feed */}\n                  </CardBody>\n                </Card>\n                {shownComment && !isCommentScetionOpen ? (\n                  <div\n                    className=\"commentSection\"\n                    onClick={() => this._toogleCommentSection(feed[\"_post\"])}\n                  >\n                    <div className=\"d-flex justify-content-start align-items-start\">\n                      <img\n                        src={\n                          user && user.profilePicture\n                            ? user.profilePicture\n                            : config[\"defaultUserPicture\"]\n                        }\n                        alt=\"Profile Img\"\n                        className=\"personImg-Comment\"\n                      />\n\n                      <div className=\"d-flex flex-column\">\n                        <div className=\"comments-Post\">\n                          <p>{shownComment[\"content\"] || \"\"}</p>\n                        </div>\n                        <div className=\"d-flex justify-content-start align-items-center mb-2\">\n                          {shownComment && shownComment.createdAt ? (\n                            <div className=\"commentTime ml-0\">\n                              <ReactTimeAgo\n                                date={this._convertIntoDate(\n                                  shownComment.createdAt\n                                )}\n                              />\n                            </div>\n                          ) : null}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ) : null}\n                <PostCommentSection\n                  ref={this.postCommentRef}\n                  comments={comments}\n                  isOpen={isCommentScetionOpen}\n                  postComment={text => this._postComment(text)}\n                  getComments={() => this._getAllComments()}\n                  feed={feed[\"_post\"]}\n                  user={this.props.user}\n                />\n              </>\n            );\n          }\n        } else if (\n          feed[\"_post\"]._contents &&\n          feed[\"_post\"]._contents.length === 0\n        ) {\n          // text only post\n          return (\n            <>\n              <Label>{this._getInteractionHeaderContent(feed)}</Label>\n              <Card className=\"card-Feed mt-0\" style={{ margin: \"0 0 15 0\" }}>\n                <Link to={`/post/${this.props.feed._post._id}`}>\n                  <CardHeader\n                    onClick={this._redirectToPostDetails}\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    <div className=\"d-flex justify-content-start\">\n                      <div className=\"personImgWrap\">\n                        <img\n                          src={\n                            influencer && influencer.profilePicture\n                              ? influencer.profilePicture\n                              : config[\"defaultUserPicture\"]\n                          }\n                          alt=\"Profile Img\"\n                          className=\"personImg\"\n                        />\n                      </div>\n                      <div>\n                        <h4>{influencer ? influencer.name.full : \"\"}</h4>\n                        {influencer &&\n                          influencer.username &&\n                          influencer.username.length ? (\n                            <a className=\"profileID\">\n                              @{influencer.username || \"NA\"}\n                            </a>\n                          ) : (\n                            \"NA\"\n                          )}\n                      </div>\n                    </div>\n                    {/* post time */}\n                    <div className=\"postTime-Feed\">\n                      {getPostedDateValue(feed[\"_post\"].startDate)}\n                    </div>\n                  </CardHeader>\n                </Link>\n                <CardBody>\n                  <CardText>\n                    {feed[\"_post\"].text && feed[\"_post\"].text.length\n                      ? feed[\"_post\"].text\n                      : \"\"}\n                  </CardText>\n                  {/* <div className=\"embed-responsive embed-responsive-16by9 mediaVideoWrap-Feed\">\n                  <iframe className=\"embed-responsive-item\" src=\"https://www.youtube.com/embed/zpOULjyy-n8?rel=0\" allowfullscreen></iframe>\n              </div> */}\n                  <div className=\"options-Feed\">\n                    <Button color=\"ghost-info\" disabled>\n                      <i className=\"icon-heart\"></i>\n                      <span>{feed[\"_post\"].likes || 0}</span>\n                    </Button>\n\n                    <Button\n                      color=\"ghost-info\"\n                      onClick={() => this._toogleCommentSection(feed[\"_post\"])}\n                    >\n                      <i className=\"icon-bubble\"></i>\n                      <span>{feed[\"_post\"].comments || 0}</span>\n                    </Button>\n\n                    <Button\n                      color=\"ghost-info\"\n                      onClick={() => this._openPostEarningsModal(feed[\"_post\"])}\n                    >\n                      <i className=\"fa fa-dollar\"></i>\n                      <span style={{ verticalAlign: \"-1px\" }}>\n                        {this._calculatePostPrice(feed[\"_post\"]) || 0}\n                      </span>\n                    </Button>\n                  </div>{\" \"}\n                  {/* options-Feed */}\n                </CardBody>\n              </Card>\n              {shownComment && !isCommentScetionOpen ? (\n                <div\n                  className=\"commentSection\"\n                  onClick={() => this._toogleCommentSection(feed[\"_post\"])}\n                >\n                  <div className=\"d-flex justify-content-start align-items-start\">\n                    <img\n                      src={\n                        user && user.profilePicture\n                          ? user.profilePicture\n                          : config[\"defaultUserPicture\"]\n                      }\n                      alt=\"Profile Img\"\n                      className=\"personImg-Comment\"\n                    />\n\n                    <div className=\"d-flex flex-column\">\n                      <div className=\"comments-Post\">\n                        <p>{shownComment[\"content\"] || \"\"}</p>\n                      </div>\n                      <div className=\"d-flex justify-content-start align-items-center mb-2\">\n                        {shownComment && shownComment.createdAt ? (\n                          <div className=\"commentTime ml-0\">\n                            <ReactTimeAgo\n                              date={this._convertIntoDate(\n                                shownComment.createdAt\n                              )}\n                            />\n                          </div>\n                        ) : null}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n              <PostCommentSection\n                feed={feed[\"_post\"]}\n                ref={this.postCommentRef}\n                comments={comments}\n                isOpen={isCommentScetionOpen}\n                postComment={text => this._postComment(text)}\n                getComments={() => this._getAllComments()}\n                user={this.props.user}\n              />\n            </>\n          );\n        }\n      } else if (feed[\"_post\"].category && feed[\"_post\"].category === \"poll\") {\n        return (\n          <>\n            <Label>{this._getInteractionHeaderContent(feed)}</Label>\n            <Card className=\"card-Feed mt-0\" style={{ margin: \"0 0 15 0\" }}>\n              <Link to={`/post/${this.props.feed._post._id}`}>\n                <CardHeader\n                  onClick={this._redirectToPostDetails}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <div className=\"d-flex justify-content-start\">\n                    <div className=\"personImgWrap\">\n                      <img\n                        src={\n                          influencer && influencer.profilePicture\n                            ? influencer.profilePicture\n                            : config[\"defaultUserPicture\"]\n                        }\n                        alt=\"Profile Img\"\n                        className=\"personImg\"\n                      />\n                    </div>\n                    <div>\n                      <h4>{influencer ? influencer.name.full : \"\"}</h4>\n                      {influencer &&\n                        influencer.username &&\n                        influencer.username.length ? (\n                          <a className=\"profileID\">\n                            @{influencer.username || \"NA\"}\n                          </a>\n                        ) : (\n                          \"NA\"\n                        )}\n                    </div>\n                  </div>\n                  {/* post time */}\n                  <div className=\"postTime-Feed\">\n                    {getPostedDateValue(feed[\"_post\"].startDate)}\n                  </div>\n                </CardHeader>\n              </Link>\n              <CardBody>\n                <CardText>\n                  {feed[\"_post\"].description && feed[\"_post\"].description.length\n                    ? feed[\"_post\"].description\n                    : null}\n                  {feed[\"_post\"].description &&\n                    feed[\"_post\"].description.length ? (\n                      <br />\n                    ) : null}\n                  {feed[\"_post\"].text && feed[\"_post\"].text.length\n                    ? feed[\"_post\"].text\n                    : \"\"}\n                </CardText>\n                {/* poll options should always be wrapped inside the below div */}\n                <div className=\"d-block mb-2 pollOptionWrap\">\n                  {feed[\"_post\"].options && feed[\"_post\"].options.length\n                    ? feed[\"_post\"].options.map((option, optionIndex) => (\n                      <PollOption\n                        feed={feed[\"_post\"]}\n                        option={option}\n                        key={optionIndex}\n                        index={optionIndex}\n                      />\n                    ))\n                    : null}\n                </div>\n                <div className=\"options-Feed\">\n                  <Button color=\"ghost-info\" disabled>\n                    <i className=\"icon-heart\"></i>\n                    <span>{feed[\"_post\"].likes || 0}</span>\n                  </Button>\n\n                  <Button\n                    color=\"ghost-info\"\n                    onClick={() => this._toogleCommentSection(feed[\"_post\"])}\n                  >\n                    <i className=\"icon-bubble\"></i>\n                    <span>{feed[\"_post\"].comments || 0}</span>\n                  </Button>\n\n                  {/* <Button color=\"ghost-secondary\" onClick={() => this._openPostEarningsModal(feed['_post'])}>\n                    <i className=\"fa fa-dollar\"></i>\n                    <span style={{ verticalAlign: \"-1px\" }}>\n                      {this._calculatePostPrice(feed['_post']) || 0}\n                    </span>\n                  </Button> */}\n                </div>{\" \"}\n                {/* options-Feed */}\n              </CardBody>\n            </Card>\n            {shownComment && !isCommentScetionOpen ? (\n              <div\n                className=\"commentSection\"\n                onClick={() => this._toogleCommentSection(feed[\"_post\"])}\n              >\n                <div className=\"d-flex justify-content-start align-items-start\">\n                  <img\n                    src={\n                      user && user.profilePicture\n                        ? user.profilePicture\n                        : config[\"defaultUserPicture\"]\n                    }\n                    alt=\"Profile Img\"\n                    className=\"personImg-Comment\"\n                  />\n\n                  <div className=\"d-flex flex-column\">\n                    <div className=\"comments-Post\">\n                      <p>{shownComment[\"content\"] || \"\"}</p>\n                    </div>\n                    <div className=\"d-flex justify-content-start align-items-center mb-2\">\n                      {shownComment && shownComment.createdAt ? (\n                        <div className=\"commentTime ml-0\">\n                          <ReactTimeAgo\n                            date={this._convertIntoDate(shownComment.createdAt)}\n                          />\n                        </div>\n                      ) : null}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n            <PostCommentSection\n              feed={feed[\"_post\"]}\n              ref={this.postCommentRef}\n              comments={comments}\n              isOpen={isCommentScetionOpen}\n              postComment={text => this._postComment(text)}\n              getComments={() => this._getAllComments()}\n              user={this.props.user}\n            />\n          </>\n        );\n      }\n      return <div />;\n    }\n  };\n\n  render() {\n    const { isPrompt, isPostEarningsModalOpen } = deepClone(this.state);\n    const { feed } = deepClone(this.props);\n\n    return (\n      <>\n        {this._renderPreview()}{\" \"}\n        <PostEarningsModal\n          isVisible={isPostEarningsModalOpen}\n          feed={feed[\"_post\"]}\n          close={this._closePostEarningsModal}\n          tipArr={this._fetchTipTransactionList()}\n          ppvArr={this._fetchPPVTransactionList()}\n          isSubscriber={true}\n          user={this.props.user}\n        />\n      </>\n    );\n  }\n}\n\nexport default SubscriberFeedViewer;\n"]},"metadata":{},"sourceType":"module"}